{"version":3,"file":"indexedDB3.umd.js","sources":["../../../node_modules/@deliberative/crypto/lib/index.mjs","../../../node_modules/js-sha3/src/sha3.js","../../../src/lib/keys.ts","../../../src/lib/DStringList.ts","../../../src/lib/DB3ObjectStore.ts","../../../src/lib/DB3Transaction.ts","../../../src/lib/DB3Database.ts","../../../src/lib/DB3OpenDBRequest.ts","../../../node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/base64.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/assert.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","../../../node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","../../../src/pkg/db3_base.ts","../../../src/pkg/db3_database.ts","../../../src/pkg/db3_mutation.ts","../../../src/pkg/db3_session.ts","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/reflection-info.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/service-type.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/deferred.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-output-stream.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/unary-call.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/server-streaming-call.js","../../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/goog-grpc-status-code.js","../../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-interceptor.js","../../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-format.js","../../../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-transport.js","../../../src/pkg/db3_account.ts","../../../src/pkg/db3_bill.ts","../../../src/pkg/db3_node.ts","../../../src/pkg/db3_node.client.ts","../../../src/lib/db3.ts","../../../src/lib/DB3Factory.ts"],"sourcesContent":["import require$$0 from 'fs';\nimport require$$1 from 'path';\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Webassembly Memory is separated into 64kb contiguous memory \"pages\".\n * This function takes memory length in bytes and converts it to pages.\n */\nconst memoryLenToPages = (memoryLen, minPages, maxPages) => {\n    minPages = minPages || 32; // 2mb // 256; // 16mb // 6; // 384kb\n    maxPages = maxPages || 16384; // 1gb\n    const pageSize = 64 * 1024;\n    const ceil = Math.ceil(memoryLen / pageSize);\n    if (ceil > maxPages)\n        throw new Error(`Memory required is ${ceil * pageSize} bytes while declared maximum is ${maxPages * pageSize} bytes`);\n    return ceil < minPages ? minPages : ceil;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst crypto_hash_sha512_BYTES = 64 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_secretbox_KEYBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_secretbox_NONCEBYTES = 24 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_box_poly1305_AUTHTAGBYTES = 16 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_box_x25519_PUBLICKEYBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_box_x25519_SECRETKEYBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_box_x25519_NONCEBYTES = 12 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_kx_SESSIONKEYBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_sign_ed25519_BYTES = 64 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_sign_ed25519_SEEDBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_sign_ed25519_PUBLICKEYBYTES = 32 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_sign_ed25519_SECRETKEYBYTES = 64 * Uint8Array.BYTES_PER_ELEMENT;\nconst crypto_pwhash_argon2id_SALTBYTES = 16 * Uint8Array.BYTES_PER_ELEMENT;\nconst getEncryptedLen = (dataLen) => {\n    return (crypto_box_x25519_NONCEBYTES + // xchacha uses 24 byte nonce while ietf 12\n        dataLen +\n        crypto_box_poly1305_AUTHTAGBYTES // 16 bytes poly1305 auth tag\n    );\n};\nconst getDecryptedLen = (encryptedLen) => {\n    return (encryptedLen -\n        crypto_box_x25519_NONCEBYTES - // nonce\n        crypto_box_poly1305_AUTHTAGBYTES // authTag\n    );\n};\nconst getForwardSecretBoxEncryptedLen = (dataLen) => {\n    return (crypto_box_x25519_PUBLICKEYBYTES + // ephemeral x25519 public key\n        crypto_box_x25519_NONCEBYTES + // xchacha uses 24 byte nonce while ietf 12\n        dataLen +\n        crypto_box_poly1305_AUTHTAGBYTES // 16 bytes poly1305 auth tag\n    );\n};\nconst getForwardSecretBoxDecryptedLen = (encryptedLen) => {\n    return (encryptedLen -\n        crypto_box_x25519_PUBLICKEYBYTES - // x25519 ephemeral\n        crypto_box_x25519_NONCEBYTES - // nonce\n        crypto_box_poly1305_AUTHTAGBYTES // authTag\n    );\n};\nvar interfaces = {\n    crypto_hash_sha512_BYTES,\n    crypto_secretbox_KEYBYTES,\n    crypto_secretbox_NONCEBYTES,\n    crypto_box_poly1305_AUTHTAGBYTES,\n    crypto_box_x25519_PUBLICKEYBYTES,\n    crypto_box_x25519_SECRETKEYBYTES,\n    crypto_box_x25519_NONCEBYTES,\n    crypto_kx_SESSIONKEYBYTES,\n    crypto_sign_ed25519_BYTES,\n    crypto_sign_ed25519_SEEDBYTES,\n    crypto_sign_ed25519_PUBLICKEYBYTES,\n    crypto_sign_ed25519_SECRETKEYBYTES,\n    crypto_pwhash_argon2id_SALTBYTES,\n    getEncryptedLen,\n    getDecryptedLen,\n    getForwardSecretBoxEncryptedLen,\n    getForwardSecretBoxDecryptedLen,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst newKeyPairMemory = () => {\n    const memoryLen = (crypto_sign_ed25519_PUBLICKEYBYTES + crypto_sign_ed25519_SECRETKEYBYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst keyPairFromSeedMemory = () => {\n    const memoryLen = (crypto_sign_ed25519_PUBLICKEYBYTES +\n        crypto_sign_ed25519_SECRETKEYBYTES +\n        crypto_sign_ed25519_SEEDBYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst keyPairFromSecretKeyMemory = () => {\n    const memoryLen = (crypto_sign_ed25519_PUBLICKEYBYTES + crypto_sign_ed25519_SECRETKEYBYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst signMemory = (messageLen) => {\n    const memoryLen = (messageLen +\n        crypto_sign_ed25519_BYTES +\n        crypto_sign_ed25519_SECRETKEYBYTES +\n        crypto_hash_sha512_BYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst verifyMemory = (messageLen) => {\n    const memoryLen = (messageLen +\n        crypto_sign_ed25519_BYTES +\n        crypto_sign_ed25519_PUBLICKEYBYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst encryptMemory$1 = (messageLen, additionalDataLen) => {\n    const sealedBoxLen = getForwardSecretBoxEncryptedLen(messageLen);\n    const memoryLen = (messageLen +\n        crypto_sign_ed25519_PUBLICKEYBYTES +\n        additionalDataLen +\n        sealedBoxLen +\n        1 * (messageLen + crypto_box_poly1305_AUTHTAGBYTES) + // malloc'd\n        2 * crypto_box_x25519_PUBLICKEYBYTES + // malloc'd\n        2 * crypto_box_x25519_SECRETKEYBYTES + // malloc'd\n        crypto_box_x25519_NONCEBYTES) * // malloc'd\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst decryptMemory$1 = (encryptedLen, additionalDataLen) => {\n    const decryptedLen = getForwardSecretBoxDecryptedLen(encryptedLen);\n    const memoryLen = (encryptedLen +\n        crypto_sign_ed25519_SECRETKEYBYTES +\n        additionalDataLen +\n        decryptedLen +\n        2 * crypto_box_x25519_PUBLICKEYBYTES + // malloc'd\n        crypto_box_x25519_NONCEBYTES + // malloc'd\n        crypto_box_x25519_SECRETKEYBYTES) * // malloc'd\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nvar memory$4 = {\n    newKeyPairMemory,\n    keyPairFromSeedMemory,\n    keyPairFromSecretKeyMemory,\n    signMemory,\n    verifyMemory,\n    encryptMemory: encryptMemory$1,\n    decryptMemory: decryptMemory$1,\n};\n\nvar dcryptoMethodsModule$1 = {exports: {}};\n\n(function (module, exports) {\n\tvar dcryptoMethodsModule = (() => {\n\t  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\t  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n\t  return (\n\tfunction(dcryptoMethodsModule) {\n\t  dcryptoMethodsModule = dcryptoMethodsModule || {};\nvar Module=typeof dcryptoMethodsModule!=\"undefined\"?dcryptoMethodsModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog);}if(ENVIRONMENT_IS_NODE){var fs=require$$0;var nodePath=require$$1;if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\";}else {scriptDirectory=__dirname+\"/\";}read_=(filename,binary)=>{var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}return ret};readAsync=(filename,onload,onerror)=>{var ret=tryParseAsDataURI(filename);if(ret){onload(ret);}filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer);});};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\");}arguments_=process[\"argv\"].slice(2);quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status);};Module[\"inspect\"]=function(){return \"[Emscripten Module object]\"};}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href;}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src;}if(_scriptDir){scriptDirectory=_scriptDir;}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1);}else {scriptDirectory=\"\";}{read_=url=>{try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}};}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror();};xhr.onerror=onerror;xhr.send(null);};}}else;Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;var dynamicLibraries=Module[\"dynamicLibraries\"]||[];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\");}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else {u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<65536){str+=String.fromCharCode(u0);}else {var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023;}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63;}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}else {if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}}heap[outIdx]=0;return outIdx-startIdx}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++;}else if(c<=2047){len+=2;}else if(c>=55296&&c<=57343){len+=4;++i;}else {len+=3;}}return len}var buffer,HEAP8,HEAPU8,HEAP64,HEAPF64;var HEAP_DATA_VIEW;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP_DATA_VIEW\"]=HEAP_DATA_VIEW=new DataView(buf);Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=new Int16Array(buf);Module[\"HEAP32\"]=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=new Uint16Array(buf);Module[\"HEAPU32\"]=new Uint32Array(buf);Module[\"HEAPF32\"]=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf);Module[\"HEAP64\"]=HEAP64=new BigInt64Array(buf);Module[\"HEAPU64\"]=new BigUint64Array(buf);}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||2097152;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"];}else {wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":1073741824/65536});}if(wasmMemory){buffer=wasmMemory.buffer;}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable=new WebAssembly.Table({\"initial\":5,\"element\":\"anyfunc\"});var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var __RELOC_FUNCS__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__RELOC_FUNCS__);callRuntimeCallbacks(__ATINIT__);}function preMain(){callRuntimeCallbacks(__ATMAIN__);}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies);}if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what);}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw \"both async and sync fetching of the wasm failed\"}catch(err){abort(err);}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw \"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else {if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response));},reject);})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg,\"GOT.mem\":new Proxy(asmLibraryArg,GOTHandler),\"GOT.func\":new Proxy(asmLibraryArg,GOTHandler)};function receiveInstance(instance,module){var exports=instance.exports;exports=relocateExports(exports,1024);var metadata=getDylinkMetadata(module);if(metadata.neededDynlibs){dynamicLibraries=metadata.neededDynlibs.concat(dynamicLibraries);}mergeLibSymbols(exports);Module[\"asm\"]=exports;addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);__RELOC_FUNCS__.push(Module[\"asm\"][\"__wasm_apply_data_relocs\"]);removeRunDependency();}addRunDependency();function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"]);}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason);})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else {return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e);}}instantiateAsync().catch(readyPromiseReject);return {}}var ASM_CONSTS={39252:()=>{return Module.getRandomValue()},39288:()=>{if(Module.getRandomValue===undefined){try{var window_=\"object\"===typeof window?window:self;var crypto_=typeof window_.crypto!==\"undefined\"?window_.crypto:window_.msCrypto;var randomValuesStandard=function(){var buf=new Uint32Array(1);crypto_.getRandomValues(buf);return buf[0]>>>0};randomValuesStandard();Module.getRandomValue=randomValuesStandard;}catch(e){try{var crypto=require(\"crypto\");var randomValueNodeJS=function(){var buf=crypto[\"randomBytes\"](4);return (buf[0]<<24|buf[1]<<16|buf[2]<<8|buf[3])>>>0};randomValueNodeJS();Module.getRandomValue=randomValueNodeJS;}catch(e){throw \"No secure random number generator found\"}}}}};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status;}var GOT={};var CurrentModuleWeakSymbols=new Set([]);var GOTHandler={get:function(obj,symName){var rtn=GOT[symName];if(!rtn){rtn=GOT[symName]=new WebAssembly.Global({\"value\":\"i32\",\"mutable\":true});}if(!CurrentModuleWeakSymbols.has(symName)){rtn.required=true;}return rtn}};function LE_HEAP_LOAD_I32(byteOffset){return HEAP_DATA_VIEW.getInt32(byteOffset,true)}function LE_HEAP_LOAD_U32(byteOffset){return HEAP_DATA_VIEW.getUint32(byteOffset,true)}function LE_HEAP_STORE_I32(byteOffset,value){HEAP_DATA_VIEW.setInt32(byteOffset,value,true);}function LE_HEAP_STORE_U32(byteOffset,value){HEAP_DATA_VIEW.setUint32(byteOffset,value,true);}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module);}}function getDylinkMetadata(binary){var offset=0;var end=0;function getU8(){return binary[offset++]}function getLEB(){var ret=0;var mul=1;while(1){var byte=binary[offset++];ret+=(byte&127)*mul;mul*=128;if(!(byte&128))break}return ret}function getString(){var len=getLEB();offset+=len;return UTF8ArrayToString(binary,offset-len,len)}function failIf(condition,message){if(condition)throw new Error(message)}var name=\"dylink.0\";if(binary instanceof WebAssembly.Module){var dylinkSection=WebAssembly.Module.customSections(binary,name);if(dylinkSection.length===0){name=\"dylink\";dylinkSection=WebAssembly.Module.customSections(binary,name);}failIf(dylinkSection.length===0,\"need dylink section\");binary=new Uint8Array(dylinkSection[0]);end=binary.length;}else {var int32View=new Uint32Array(new Uint8Array(binary.subarray(0,24)).buffer);var magicNumberFound=int32View[0]==1836278016||int32View[0]==6386541;failIf(!magicNumberFound,\"need to see wasm magic number\");failIf(binary[8]!==0,\"need the dylink section to be first\");offset=9;var section_size=getLEB();end=offset+section_size;name=getString();}var customSection={neededDynlibs:[],tlsExports:new Set,weakImports:new Set};if(name==\"dylink\"){customSection.memorySize=getLEB();customSection.memoryAlign=getLEB();customSection.tableSize=getLEB();customSection.tableAlign=getLEB();var neededDynlibsCount=getLEB();for(var i=0;i<neededDynlibsCount;++i){var libname=getString();customSection.neededDynlibs.push(libname);}}else {failIf(name!==\"dylink.0\");var WASM_DYLINK_MEM_INFO=1;var WASM_DYLINK_NEEDED=2;var WASM_DYLINK_EXPORT_INFO=3;var WASM_DYLINK_IMPORT_INFO=4;var WASM_SYMBOL_TLS=256;var WASM_SYMBOL_BINDING_MASK=3;var WASM_SYMBOL_BINDING_WEAK=1;while(offset<end){var subsectionType=getU8();var subsectionSize=getLEB();if(subsectionType===WASM_DYLINK_MEM_INFO){customSection.memorySize=getLEB();customSection.memoryAlign=getLEB();customSection.tableSize=getLEB();customSection.tableAlign=getLEB();}else if(subsectionType===WASM_DYLINK_NEEDED){var neededDynlibsCount=getLEB();for(var i=0;i<neededDynlibsCount;++i){libname=getString();customSection.neededDynlibs.push(libname);}}else if(subsectionType===WASM_DYLINK_EXPORT_INFO){var count=getLEB();while(count--){var symname=getString();var flags=getLEB();if(flags&WASM_SYMBOL_TLS){customSection.tlsExports.add(symname);}}}else if(subsectionType===WASM_DYLINK_IMPORT_INFO){var count=getLEB();while(count--){getString();var symname=getString();var flags=getLEB();if((flags&WASM_SYMBOL_BINDING_MASK)==WASM_SYMBOL_BINDING_WEAK){customSection.weakImports.add(symname);}}}else {offset+=subsectionSize;}}}return customSection}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255;}ret.push(String.fromCharCode(chr));}return ret.join(\"\")}function asmjsMangle(x){var unmangledSymbols=[\"stackAlloc\",\"stackSave\",\"stackRestore\",\"getTempRet0\",\"setTempRet0\"];return x.indexOf(\"dynCall_\")==0||unmangledSymbols.includes(x)?x:\"_\"+x}function mergeLibSymbols(exports,libName){for(var sym in exports){if(!exports.hasOwnProperty(sym)){continue}if(!asmLibraryArg.hasOwnProperty(sym)){asmLibraryArg[sym]=exports[sym];}var module_sym=asmjsMangle(sym);if(!Module.hasOwnProperty(module_sym)){Module[module_sym]=exports[sym];}if(sym==\"__main_argc_argv\"){Module[\"_main\"]=exports[sym];}}}var LDSO={loadedLibsByName:{},loadedLibsByHandle:{}};var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr);}return func}function dynCall(sig,ptr,args){var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function createInvokeFunction(sig){return function(){var sp=stackSave();try{return dynCall(sig,arguments[0],Array.prototype.slice.call(arguments,1))}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0);}}}var ___heap_base=1089136;function zeroMemory(address,size){HEAPU8.fill(0,address,address+size);return address}function getMemory(size){if(runtimeInitialized){return zeroMemory(_malloc(size),size)}var ret=___heap_base;var end=ret+size+15&-16;___heap_base=end;GOT[\"__heap_base\"].value=end;return ret}function isInternalSym(symName){return [\"__cpp_exception\",\"__c_longjmp\",\"__wasm_apply_data_relocs\",\"__dso_handle\",\"__tls_size\",\"__tls_align\",\"__set_stack_limits\",\"_emscripten_tls_init\",\"__wasm_init_tls\",\"__wasm_call_ctors\",\"__start_em_asm\",\"__stop_em_asm\"].includes(symName)}function uleb128Encode(n,target){if(n<128){target.push(n);}else {target.push(n%128|128,n>>7);}}function sigToWasmTypes(sig){var typeNames={\"i\":\"i32\",\"j\":\"i32\",\"f\":\"f32\",\"d\":\"f64\",\"p\":\"i32\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]]);if(sig[i]===\"j\"){type.parameters.push(\"i32\");}}return type}function generateFuncType(sig,target){var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"p\":127,\"j\":126,\"f\":125,\"d\":124};target.push(96);uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i){target.push(typeCodes[sigParam[i]]);}if(sigRet==\"v\"){target.push(0);}else {target.push(1,typeCodes[sigRet]);}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function==\"function\"){return new WebAssembly.Function(sigToWasmTypes(sig),func)}var typeSectionBody=[1];generateFuncType(sig,typeSectionBody);var bytes=[0,97,115,109,1,0,0,0,1];uleb128Encode(typeSectionBody.length,bytes);bytes.push.apply(bytes,typeSectionBody);bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var module=new WebAssembly.Module(new Uint8Array(bytes));var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}function updateTableMap(offset,count){if(functionsInTableMap){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i);}}}}var functionsInTableMap=undefined;var freeTableIndexes=[];function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1);}catch(err){if(!(err instanceof RangeError)){throw err}throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=wasmTable.get(idx);}function addFunction(func,sig){if(!functionsInTableMap){functionsInTableMap=new WeakMap;updateTableMap(0,wasmTable.length);}if(functionsInTableMap.has(func)){return functionsInTableMap.get(func)}var ret=getEmptyTableSlot();try{setWasmTableEntry(ret,func);}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);setWasmTableEntry(ret,wrapped);}functionsInTableMap.set(func,ret);return ret}function updateGOT(exports,replace){for(var symName in exports){if(isInternalSym(symName)){continue}var value=exports[symName];if(!GOT[symName]){GOT[symName]=new WebAssembly.Global({\"value\":\"i32\",\"mutable\":true});}if(replace||GOT[symName].value==0){if(typeof value==\"function\"){GOT[symName].value=addFunction(value);}else if(typeof value==\"number\"){GOT[symName].value=value;}else {err(\"unhandled export type for `\"+symName+\"`: \"+typeof value);}}}}function relocateExports(exports,memoryBase,replace){var relocated={};for(var e in exports){var value=exports[e];if(typeof value==\"object\"){value=value.value;}if(typeof value==\"number\"){value+=memoryBase;}relocated[e]=value;}updateGOT(relocated,replace);return relocated}function resolveGlobalSymbol(symName,direct){var sym;if(!sym){sym=asmLibraryArg[symName];if(sym&&sym.stub)sym=undefined;}if(!sym){sym=Module[asmjsMangle(symName)];}if(!sym&&symName.startsWith(\"invoke_\")){sym=createInvokeFunction(symName.split(\"_\")[1]);}return sym}function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment}function loadWebAssemblyModule(binary,flags,handle){var metadata=getDylinkMetadata(binary);CurrentModuleWeakSymbols=metadata.weakImports;function loadModule(){var needsAllocation=!handle||!HEAP8[handle+24>>0];if(needsAllocation){var memAlign=Math.pow(2,metadata.memoryAlign);memAlign=Math.max(memAlign,STACK_ALIGN);var memoryBase=metadata.memorySize?alignMemory(getMemory(metadata.memorySize+memAlign),memAlign):0;var tableBase=metadata.tableSize?wasmTable.length:0;if(handle){HEAP8[handle+24>>0]=1;LE_HEAP_STORE_U32((handle+28>>2)*4,memoryBase);LE_HEAP_STORE_I32((handle+32>>2)*4,metadata.memorySize);LE_HEAP_STORE_U32((handle+36>>2)*4,tableBase);LE_HEAP_STORE_I32((handle+40>>2)*4,metadata.tableSize);}}else {memoryBase=LE_HEAP_LOAD_U32((handle+28>>2)*4);tableBase=LE_HEAP_LOAD_U32((handle+36>>2)*4);}var tableGrowthNeeded=tableBase+metadata.tableSize-wasmTable.length;if(tableGrowthNeeded>0){wasmTable.grow(tableGrowthNeeded);}var moduleExports;function resolveSymbol(sym){var resolved=resolveGlobalSymbol(sym);if(!resolved){resolved=moduleExports[sym];}return resolved}var proxyHandler={\"get\":function(stubs,prop){switch(prop){case\"__memory_base\":return memoryBase;case\"__table_base\":return tableBase}if(prop in asmLibraryArg){return asmLibraryArg[prop]}if(!(prop in stubs)){var resolved;stubs[prop]=function(){if(!resolved)resolved=resolveSymbol(prop);return resolved.apply(null,arguments)};}return stubs[prop]}};var proxy=new Proxy({},proxyHandler);var info={\"GOT.mem\":new Proxy({},GOTHandler),\"GOT.func\":new Proxy({},GOTHandler),\"env\":proxy,wasi_snapshot_preview1:proxy};function postInstantiation(instance){updateTableMap(tableBase,metadata.tableSize);moduleExports=relocateExports(instance.exports,memoryBase);if(!flags.allowUndefined){reportUndefinedSymbols();}function addEmAsm(addr,body){var args=[];var arity=0;for(;arity<16;arity++){if(body.indexOf(\"$\"+arity)!=-1){args.push(\"$\"+arity);}else {break}}args=args.join(\",\");var func=\"(\"+args+\" ) => { \"+body+\"};\";ASM_CONSTS[start]=eval(func);}if(\"__start_em_asm\"in moduleExports){var start=moduleExports[\"__start_em_asm\"];var stop=moduleExports[\"__stop_em_asm\"];while(start<stop){var jsString=UTF8ToString(start);addEmAsm(start,jsString);start=HEAPU8.indexOf(0,start)+1;}}var applyRelocs=moduleExports[\"__wasm_apply_data_relocs\"];if(applyRelocs){if(runtimeInitialized){applyRelocs();}else {__RELOC_FUNCS__.push(applyRelocs);}}var init=moduleExports[\"__wasm_call_ctors\"];if(init){if(runtimeInitialized){init();}else {__ATINIT__.push(init);}}return moduleExports}if(flags.loadAsync){if(binary instanceof WebAssembly.Module){var instance=new WebAssembly.Instance(binary,info);return Promise.resolve(postInstantiation(instance))}return WebAssembly.instantiate(binary,info).then(function(result){return postInstantiation(result.instance)})}var module=binary instanceof WebAssembly.Module?binary:new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return postInstantiation(instance)}if(flags.loadAsync){return metadata.neededDynlibs.reduce(function(chain,dynNeeded){return chain.then(function(){return loadDynamicLibrary(dynNeeded,flags)})},Promise.resolve()).then(function(){return loadModule()})}metadata.neededDynlibs.forEach(function(dynNeeded){loadDynamicLibrary(dynNeeded,flags);});return loadModule()}function loadDynamicLibrary(lib,flags,handle){flags=flags||{global:true,nodelete:true};var dso=LDSO.loadedLibsByName[lib];if(dso){if(flags.global&&!dso.global){dso.global=true;if(dso.module!==\"loading\"){mergeLibSymbols(dso.module);}}if(flags.nodelete&&dso.refcount!==Infinity){dso.refcount=Infinity;}dso.refcount++;if(handle){LDSO.loadedLibsByHandle[handle]=dso;}return flags.loadAsync?Promise.resolve(true):true}dso={refcount:flags.nodelete?Infinity:1,name:lib,module:\"loading\",global:flags.global};LDSO.loadedLibsByName[lib]=dso;if(handle){LDSO.loadedLibsByHandle[handle]=dso;}function loadLibData(libFile){if(flags.fs&&flags.fs.findObject(libFile)){var libData=flags.fs.readFile(libFile,{encoding:\"binary\"});if(!(libData instanceof Uint8Array)){libData=new Uint8Array(libData);}return flags.loadAsync?Promise.resolve(libData):libData}if(flags.loadAsync){return new Promise(function(resolve,reject){readAsync(libFile,data=>resolve(new Uint8Array(data)),reject);})}if(!readBinary){throw new Error(libFile+\": file not found, and synchronous loading of external files is not available\")}return readBinary(libFile)}function getLibModule(){if(typeof preloadedWasm!=\"undefined\"&&preloadedWasm[lib]){var libModule=preloadedWasm[lib];return flags.loadAsync?Promise.resolve(libModule):libModule}if(flags.loadAsync){return loadLibData(lib).then(function(libData){return loadWebAssemblyModule(libData,flags,handle)})}return loadWebAssemblyModule(loadLibData(lib),flags,handle)}function moduleLoaded(libModule){if(dso.global){mergeLibSymbols(libModule);}dso.module=libModule;}if(flags.loadAsync){return getLibModule().then(function(libModule){moduleLoaded(libModule);return true})}moduleLoaded(getLibModule());return true}function reportUndefinedSymbols(){for(var symName in GOT){if(GOT[symName].value==0){var value=resolveGlobalSymbol(symName);if(!value&&!GOT[symName].required){continue}if(typeof value==\"function\"){GOT[symName].value=addFunction(value,value.sig);}else if(typeof value==\"number\"){GOT[symName].value=value;}else {throw new Error(\"bad export type for `\"+symName+\"`: \"+typeof value)}}}}function preloadDylibs(){if(!dynamicLibraries.length){reportUndefinedSymbols();return}addRunDependency();dynamicLibraries.reduce(function(chain,lib){return chain.then(function(){return loadDynamicLibrary(lib,{loadAsync:true,global:true,nodelete:true,allowUndefined:true})})},Promise.resolve()).then(function(){reportUndefinedSymbols();removeRunDependency();});}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"]);}___assert_fail.sig=\"vppip\";var ___memory_base=new WebAssembly.Global({\"value\":\"i32\",\"mutable\":false},1024);var ___stack_pointer=new WebAssembly.Global({\"value\":\"i32\",\"mutable\":true},1089136);var ___table_base=new WebAssembly.Global({\"value\":\"i32\",\"mutable\":false},1);function _abort(){abort(\"\");}_abort.sig=\"v\";var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){readEmAsmArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){buf+=ch!=105&buf;readEmAsmArgsArray.push(ch==105?LE_HEAP_LOAD_I32(buf*4):(ch==106?HEAP64:HEAPF64)[buf++>>1]);++buf;}return readEmAsmArgsArray}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}runEmAsmFunction.sig=\"ippp\";function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf)}_emscripten_asm_const_int.sig=\"ippp\";function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}_emscripten_memcpy_big.sig=\"vppp\";function getHeapMax(){return 1073741824}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize+65536/cutDown;var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}_emscripten_resize_heap.sig=\"ip\";function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true;}quit_(code,new ExitStatus(code));}_proc_exit.sig=\"vi\";function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status);}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e);}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}var decodeBase64=typeof atob==\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2);}if(enc4!==64){output=output+String.fromCharCode(chr3);}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i);}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={\"__assert_fail\":___assert_fail,\"__heap_base\":___heap_base,\"__indirect_function_table\":wasmTable,\"__memory_base\":___memory_base,\"__stack_pointer\":___stack_pointer,\"__table_base\":___table_base,\"abort\":_abort,\"emscripten_asm_const_int\":_emscripten_asm_const_int,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"memory\":wasmMemory};createWasm();Module[\"___wasm_call_ctors\"]=function(){return (Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};Module[\"___wasm_apply_data_relocs\"]=function(){return (Module[\"___wasm_apply_data_relocs\"]=Module[\"asm\"][\"__wasm_apply_data_relocs\"]).apply(null,arguments)};Module[\"_free\"]=function(){return (Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return (_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};Module[\"_sha512\"]=function(){return (Module[\"_sha512\"]=Module[\"asm\"][\"sha512\"]).apply(null,arguments)};Module[\"_argon2\"]=function(){return (Module[\"_argon2\"]=Module[\"asm\"][\"argon2\"]).apply(null,arguments)};Module[\"_new_keypair\"]=function(){return (Module[\"_new_keypair\"]=Module[\"asm\"][\"new_keypair\"]).apply(null,arguments)};Module[\"_keypair_from_seed\"]=function(){return (Module[\"_keypair_from_seed\"]=Module[\"asm\"][\"keypair_from_seed\"]).apply(null,arguments)};Module[\"_keypair_from_secret_key\"]=function(){return (Module[\"_keypair_from_secret_key\"]=Module[\"asm\"][\"keypair_from_secret_key\"]).apply(null,arguments)};Module[\"_sign_data\"]=function(){return (Module[\"_sign_data\"]=Module[\"asm\"][\"sign_data\"]).apply(null,arguments)};Module[\"_verify_data\"]=function(){return (Module[\"_verify_data\"]=Module[\"asm\"][\"verify_data\"]).apply(null,arguments)};Module[\"_calculate_nonce\"]=function(){return (Module[\"_calculate_nonce\"]=Module[\"asm\"][\"calculate_nonce\"]).apply(null,arguments)};Module[\"_encrypt_data\"]=function(){return (Module[\"_encrypt_data\"]=Module[\"asm\"][\"encrypt_data\"]).apply(null,arguments)};Module[\"_decrypt_data\"]=function(){return (Module[\"_decrypt_data\"]=Module[\"asm\"][\"decrypt_data\"]).apply(null,arguments)};Module[\"_calculate_forward_secret_nonce\"]=function(){return (Module[\"_calculate_forward_secret_nonce\"]=Module[\"asm\"][\"calculate_forward_secret_nonce\"]).apply(null,arguments)};Module[\"_forward_secretbox_encrypt_data\"]=function(){return (Module[\"_forward_secretbox_encrypt_data\"]=Module[\"asm\"][\"forward_secretbox_encrypt_data\"]).apply(null,arguments)};Module[\"_forward_secretbox_decrypt_data\"]=function(){return (Module[\"_forward_secretbox_decrypt_data\"]=Module[\"asm\"][\"forward_secretbox_decrypt_data\"]).apply(null,arguments)};Module[\"_split_secret\"]=function(){return (Module[\"_split_secret\"]=Module[\"asm\"][\"split_secret\"]).apply(null,arguments)};Module[\"_restore_secret\"]=function(){return (Module[\"_restore_secret\"]=Module[\"asm\"][\"restore_secret\"]).apply(null,arguments)};Module[\"_items_indexes_in_array\"]=function(){return (Module[\"_items_indexes_in_array\"]=Module[\"asm\"][\"items_indexes_in_array\"]).apply(null,arguments)};Module[\"_random_bytes\"]=function(){return (Module[\"_random_bytes\"]=Module[\"asm\"][\"random_bytes\"]).apply(null,arguments)};Module[\"_random_number_in_range\"]=function(){return (Module[\"_random_number_in_range\"]=Module[\"asm\"][\"random_number_in_range\"]).apply(null,arguments)};Module[\"_get_merkle_root\"]=function(){return (Module[\"_get_merkle_root\"]=Module[\"asm\"][\"get_merkle_root\"]).apply(null,arguments)};Module[\"_get_merkle_proof\"]=function(){return (Module[\"_get_merkle_proof\"]=Module[\"asm\"][\"get_merkle_proof\"]).apply(null,arguments)};Module[\"_get_merkle_root_from_proof\"]=function(){return (Module[\"_get_merkle_root_from_proof\"]=Module[\"asm\"][\"get_merkle_root_from_proof\"]).apply(null,arguments)};Module[\"_verify_merkle_proof\"]=function(){return (Module[\"_verify_merkle_proof\"]=Module[\"asm\"][\"verify_merkle_proof\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return (_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"setThrew\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return (stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return (stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return (stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;};function callMain(args){var entryFunction=Module[\"_main\"];if(!entryFunction)return;args=args||[];args.unshift(thisProgram);var argc=args.length;var argv=stackAlloc((argc+1)*4);var argv_ptr=argv>>2;args.forEach(arg=>{LE_HEAP_STORE_I32(argv_ptr++*4,allocateUTF8OnStack(arg));});LE_HEAP_STORE_I32(argv_ptr*4,0);try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}var dylibsLoaded=false;function run(args){args=args||arguments_;if(runDependencies>0){return}if(!dylibsLoaded){preloadDylibs();dylibsLoaded=true;if(runDependencies>0){return}}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun();}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\");},1);doRun();},1);}else {doRun();}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()();}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n\t  return dcryptoMethodsModule.ready\n\t}\n\t);\n\t})();\n\tmodule.exports = dcryptoMethodsModule;\n} (dcryptoMethodsModule$1));\n\nvar dcryptoMethodsModule = dcryptoMethodsModule$1.exports;\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst newKeyPair = async (module) => {\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.newKeyPairMemory();\n    const dcryptoModule = await dcryptoMethodsModule({ wasmMemory });\n    const ptr1 = dcryptoModule._malloc(crypto_sign_ed25519_PUBLICKEYBYTES);\n    const publicKey = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, crypto_sign_ed25519_PUBLICKEYBYTES);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_SECRETKEYBYTES);\n    const secretKey = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_SECRETKEYBYTES);\n    const result = dcryptoModule._new_keypair(publicKey.byteOffset, secretKey.byteOffset);\n    const keyPair = {\n        publicKey: new Uint8Array([...publicKey]),\n        secretKey: new Uint8Array([...secretKey]),\n    };\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    switch (result) {\n        case 0: {\n            return keyPair;\n        }\n        default: {\n            throw new Error(\"An unexpected error occured.\");\n        }\n    }\n};\nconst keyPairFromSeed = async (seed, module) => {\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.keyPairFromSeedMemory();\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(crypto_sign_ed25519_PUBLICKEYBYTES);\n    const publicKey = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, crypto_sign_ed25519_PUBLICKEYBYTES);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_SECRETKEYBYTES);\n    const secretKey = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_SECRETKEYBYTES);\n    const ptr3 = dcryptoModule._malloc(crypto_sign_ed25519_SEEDBYTES);\n    const seedBytes = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, crypto_sign_ed25519_SEEDBYTES);\n    seedBytes.set([...seed]);\n    const result = dcryptoModule._keypair_from_seed(publicKey.byteOffset, secretKey.byteOffset, seedBytes.byteOffset);\n    const keyPair = {\n        publicKey: new Uint8Array([...publicKey]),\n        secretKey: new Uint8Array([...secretKey]),\n    };\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    switch (result) {\n        case 0: {\n            return keyPair;\n        }\n        default: {\n            throw new Error(\"An unexpected error occured.\");\n        }\n    }\n};\nconst keyPairFromSecretKey = async (secretKey, module) => {\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.keyPairFromSecretKeyMemory();\n    const dcryptoModule = await dcryptoMethodsModule({ wasmMemory });\n    const ptr1 = dcryptoModule._malloc(crypto_sign_ed25519_PUBLICKEYBYTES);\n    const publicKey = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, crypto_sign_ed25519_PUBLICKEYBYTES);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_SECRETKEYBYTES);\n    const sk = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_SECRETKEYBYTES);\n    sk.set([...secretKey]);\n    const result = dcryptoModule._keypair_from_secret_key(publicKey.byteOffset, sk.byteOffset);\n    const keyPair = {\n        publicKey: new Uint8Array([...publicKey]),\n        secretKey,\n    };\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    switch (result) {\n        case 0: {\n            return keyPair;\n        }\n        default: {\n            throw new Error(\"An unexpected error occured.\");\n        }\n    }\n};\nvar keyPair = {\n    newKeyPair,\n    keyPairFromSeed,\n    keyPairFromSecretKey,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns the signature of the data provided.\n */\nconst sign = async (message, secretKey, module) => {\n    const messageLen = message.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.signMemory(messageLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(messageLen * Uint8Array.BYTES_PER_ELEMENT);\n    const dataArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, messageLen * Uint8Array.BYTES_PER_ELEMENT);\n    dataArray.set([...message]);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_BYTES);\n    const signature = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_BYTES);\n    const ptr3 = dcryptoModule._malloc(crypto_sign_ed25519_SECRETKEYBYTES);\n    const sk = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, crypto_sign_ed25519_SECRETKEYBYTES);\n    sk.set([...secretKey]);\n    dcryptoModule._sign_data(messageLen, dataArray.byteOffset, signature.byteOffset, sk.byteOffset);\n    const sig = new Uint8Array([...signature]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    return sig;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst verify = async (message, signature, publicKey, module) => {\n    const len = message.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.verifyMemory(len);\n    const dcryptoModule = await dcryptoMethodsModule({ wasmMemory });\n    const ptr1 = dcryptoModule._malloc(len * Uint8Array.BYTES_PER_ELEMENT);\n    const dataArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, len * Uint8Array.BYTES_PER_ELEMENT);\n    dataArray.set([...message]);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_BYTES);\n    const sig = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_BYTES);\n    sig.set([...signature]);\n    const ptr3 = dcryptoModule._malloc(crypto_sign_ed25519_PUBLICKEYBYTES);\n    const key = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, crypto_sign_ed25519_PUBLICKEYBYTES);\n    key.set([...publicKey]);\n    const result = dcryptoModule._verify_data(len, dataArray.byteOffset, sig.byteOffset, key.byteOffset);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    return result === 0;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst encrypt$1 = async (message, publicKey, additionalData, module) => {\n    const len = message.length;\n    const additionalLen = additionalData.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.encryptMemory(len, additionalLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(len * Uint8Array.BYTES_PER_ELEMENT);\n    const dataArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, len * Uint8Array.BYTES_PER_ELEMENT);\n    dataArray.set([...message]);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_PUBLICKEYBYTES);\n    const pub = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_PUBLICKEYBYTES);\n    pub.set([...publicKey]);\n    const ptr3 = dcryptoModule._malloc(additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    const additional = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    additional.set([...additionalData]);\n    const sealedBoxLen = getForwardSecretBoxEncryptedLen(len);\n    const ptr4 = dcryptoModule._malloc(sealedBoxLen * Uint8Array.BYTES_PER_ELEMENT);\n    const encrypted = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr4, sealedBoxLen * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._forward_secretbox_encrypt_data(len, dataArray.byteOffset, pub.byteOffset, additionalLen, additional.byteOffset, encrypted.byteOffset);\n    const enc = new Uint8Array([...encrypted]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    dcryptoModule._free(ptr4);\n    switch (result) {\n        case 0:\n            return enc;\n        case -1:\n            throw new Error(\"Could not convert Ed25519 public key to X25519.\");\n        // case -2:\n        //   throw new Error(\"Could not create a shared secret.\");\n        default:\n            throw new Error(\"An unexpected error occured.\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst decrypt$1 = async (encrypted, secretKey, additionalData, module) => {\n    const len = encrypted.length;\n    const additionalLen = additionalData.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$4.decryptMemory(len, additionalLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const decryptedLen = getForwardSecretBoxDecryptedLen(len);\n    const ptr1 = dcryptoModule._malloc(len * Uint8Array.BYTES_PER_ELEMENT);\n    const encryptedArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, len * Uint8Array.BYTES_PER_ELEMENT);\n    encryptedArray.set([...encrypted]);\n    const ptr2 = dcryptoModule._malloc(crypto_sign_ed25519_SECRETKEYBYTES);\n    const sec = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_sign_ed25519_SECRETKEYBYTES);\n    sec.set([...secretKey]);\n    const ptr3 = dcryptoModule._malloc(additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    const additional = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    additional.set([...additionalData]);\n    const ptr4 = dcryptoModule._malloc(decryptedLen * Uint8Array.BYTES_PER_ELEMENT);\n    const decrypted = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr4, decryptedLen * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._forward_secretbox_decrypt_data(len, encryptedArray.byteOffset, sec.byteOffset, additionalLen, additional.byteOffset, decrypted.byteOffset);\n    const decr = new Uint8Array([...decrypted]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    dcryptoModule._free(ptr4);\n    switch (result) {\n        case 0:\n            return decr;\n        // case -1:\n        //   throw new Error(\"Could not create successful key exchange\");\n        case -2:\n            throw new Error(\"Unsuccessful decryption attempt\");\n        default:\n            throw new Error(\"Unexpected error occured\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar asymmetric = {\n    keyPair,\n    sign,\n    verify,\n    encrypt: encrypt$1,\n    decrypt: decrypt$1,\n    memory: memory$4,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst encryptMemory = (messageLen, additionalDataLen) => {\n    const sealedBoxLen = getEncryptedLen(messageLen);\n    const memoryLen = (messageLen +\n        crypto_kx_SESSIONKEYBYTES +\n        additionalDataLen +\n        sealedBoxLen +\n        1 * (messageLen + crypto_box_poly1305_AUTHTAGBYTES) + // malloc'd\n        2 * crypto_hash_sha512_BYTES + // malloc'd\n        crypto_box_x25519_NONCEBYTES) * // malloc'd\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst decryptMemory = (encryptedLen, additionalDataLen) => {\n    const decryptedLen = getDecryptedLen(encryptedLen);\n    const memoryLen = (encryptedLen +\n        crypto_kx_SESSIONKEYBYTES +\n        additionalDataLen +\n        decryptedLen +\n        2 * crypto_hash_sha512_BYTES + // malloc'd\n        crypto_box_x25519_NONCEBYTES) * // malloc'd\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nvar memory$3 = {\n    encryptMemory,\n    decryptMemory,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst encrypt = async (message, key, additionalData, module) => {\n    const len = message.length;\n    const additionalLen = additionalData.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$3.encryptMemory(len, additionalLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(len * Uint8Array.BYTES_PER_ELEMENT);\n    const dataArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, len * Uint8Array.BYTES_PER_ELEMENT);\n    dataArray.set([...message]);\n    const ptr2 = dcryptoModule._malloc(crypto_kx_SESSIONKEYBYTES);\n    const k = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_kx_SESSIONKEYBYTES);\n    k.set([...key]);\n    const ptr3 = dcryptoModule._malloc(additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    const additional = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    additional.set([...additionalData]);\n    const sealedBoxLen = getEncryptedLen(len);\n    const ptr4 = dcryptoModule._malloc(sealedBoxLen * Uint8Array.BYTES_PER_ELEMENT);\n    const encrypted = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr4, sealedBoxLen * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._encrypt_data(len, dataArray.byteOffset, k.byteOffset, additionalLen, additional.byteOffset, encrypted.byteOffset);\n    const enc = new Uint8Array([...encrypted]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    dcryptoModule._free(ptr4);\n    switch (result) {\n        case 0: {\n            return enc;\n        }\n        default:\n            throw new Error(\"An unexpected error occured.\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst decrypt = async (encrypted, key, additionalData, module) => {\n    const len = encrypted.length;\n    const additionalLen = additionalData.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$3.decryptMemory(len, additionalLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const decryptedLen = getDecryptedLen(len);\n    const ptr1 = dcryptoModule._malloc(len * Uint8Array.BYTES_PER_ELEMENT);\n    const encryptedArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, len * Uint8Array.BYTES_PER_ELEMENT);\n    encryptedArray.set([...encrypted]);\n    const ptr2 = dcryptoModule._malloc(crypto_kx_SESSIONKEYBYTES);\n    const k = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_kx_SESSIONKEYBYTES);\n    k.set([...key]);\n    const ptr3 = dcryptoModule._malloc(additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    const additional = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, additionalLen * Uint8Array.BYTES_PER_ELEMENT);\n    additional.set([...additionalData]);\n    const ptr4 = dcryptoModule._malloc(decryptedLen * Uint8Array.BYTES_PER_ELEMENT);\n    const decrypted = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr4, decryptedLen * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._decrypt_data(len, encryptedArray.byteOffset, k.byteOffset, additionalLen, additional.byteOffset, decrypted.byteOffset);\n    const decr = new Uint8Array([...decrypted]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    dcryptoModule._free(ptr4);\n    switch (result) {\n        case 0:\n            return decr;\n        case -1:\n            throw new Error(\"Unsuccessful decryption attempt\");\n        default:\n            throw new Error(\"Unexpected error occured\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar symmetric = {\n    encrypt,\n    decrypt,\n    memory: memory$3,\n};\n\nvar wordlist = [\"abandon\",\"ability\",\"able\",\"about\",\"above\",\"absent\",\"absorb\",\"abstract\",\"absurd\",\"abuse\",\"access\",\"accident\",\"account\",\"accuse\",\"achieve\",\"acid\",\"acoustic\",\"acquire\",\"across\",\"act\",\"action\",\"actor\",\"actress\",\"actual\",\"adapt\",\"add\",\"addict\",\"address\",\"adjust\",\"admit\",\"adult\",\"advance\",\"advice\",\"aerobic\",\"affair\",\"afford\",\"afraid\",\"again\",\"age\",\"agent\",\"agree\",\"ahead\",\"aim\",\"air\",\"airport\",\"aisle\",\"alarm\",\"album\",\"alcohol\",\"alert\",\"alien\",\"all\",\"alley\",\"allow\",\"almost\",\"alone\",\"alpha\",\"already\",\"also\",\"alter\",\"always\",\"amateur\",\"amazing\",\"among\",\"amount\",\"amused\",\"analyst\",\"anchor\",\"ancient\",\"anger\",\"angle\",\"angry\",\"animal\",\"ankle\",\"announce\",\"annual\",\"another\",\"answer\",\"antenna\",\"antique\",\"anxiety\",\"any\",\"apart\",\"apology\",\"appear\",\"apple\",\"approve\",\"april\",\"arch\",\"arctic\",\"area\",\"arena\",\"argue\",\"arm\",\"armed\",\"armor\",\"army\",\"around\",\"arrange\",\"arrest\",\"arrive\",\"arrow\",\"art\",\"artefact\",\"artist\",\"artwork\",\"ask\",\"aspect\",\"assault\",\"asset\",\"assist\",\"assume\",\"asthma\",\"athlete\",\"atom\",\"attack\",\"attend\",\"attitude\",\"attract\",\"auction\",\"audit\",\"august\",\"aunt\",\"author\",\"auto\",\"autumn\",\"average\",\"avocado\",\"avoid\",\"awake\",\"aware\",\"away\",\"awesome\",\"awful\",\"awkward\",\"axis\",\"baby\",\"bachelor\",\"bacon\",\"badge\",\"bag\",\"balance\",\"balcony\",\"ball\",\"bamboo\",\"banana\",\"banner\",\"bar\",\"barely\",\"bargain\",\"barrel\",\"base\",\"basic\",\"basket\",\"battle\",\"beach\",\"bean\",\"beauty\",\"because\",\"become\",\"beef\",\"before\",\"begin\",\"behave\",\"behind\",\"believe\",\"below\",\"belt\",\"bench\",\"benefit\",\"best\",\"betray\",\"better\",\"between\",\"beyond\",\"bicycle\",\"bid\",\"bike\",\"bind\",\"biology\",\"bird\",\"birth\",\"bitter\",\"black\",\"blade\",\"blame\",\"blanket\",\"blast\",\"bleak\",\"bless\",\"blind\",\"blood\",\"blossom\",\"blouse\",\"blue\",\"blur\",\"blush\",\"board\",\"boat\",\"body\",\"boil\",\"bomb\",\"bone\",\"bonus\",\"book\",\"boost\",\"border\",\"boring\",\"borrow\",\"boss\",\"bottom\",\"bounce\",\"box\",\"boy\",\"bracket\",\"brain\",\"brand\",\"brass\",\"brave\",\"bread\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\"brisk\",\"broccoli\",\"broken\",\"bronze\",\"broom\",\"brother\",\"brown\",\"brush\",\"bubble\",\"buddy\",\"budget\",\"buffalo\",\"build\",\"bulb\",\"bulk\",\"bullet\",\"bundle\",\"bunker\",\"burden\",\"burger\",\"burst\",\"bus\",\"business\",\"busy\",\"butter\",\"buyer\",\"buzz\",\"cabbage\",\"cabin\",\"cable\",\"cactus\",\"cage\",\"cake\",\"call\",\"calm\",\"camera\",\"camp\",\"can\",\"canal\",\"cancel\",\"candy\",\"cannon\",\"canoe\",\"canvas\",\"canyon\",\"capable\",\"capital\",\"captain\",\"car\",\"carbon\",\"card\",\"cargo\",\"carpet\",\"carry\",\"cart\",\"case\",\"cash\",\"casino\",\"castle\",\"casual\",\"cat\",\"catalog\",\"catch\",\"category\",\"cattle\",\"caught\",\"cause\",\"caution\",\"cave\",\"ceiling\",\"celery\",\"cement\",\"census\",\"century\",\"cereal\",\"certain\",\"chair\",\"chalk\",\"champion\",\"change\",\"chaos\",\"chapter\",\"charge\",\"chase\",\"chat\",\"cheap\",\"check\",\"cheese\",\"chef\",\"cherry\",\"chest\",\"chicken\",\"chief\",\"child\",\"chimney\",\"choice\",\"choose\",\"chronic\",\"chuckle\",\"chunk\",\"churn\",\"cigar\",\"cinnamon\",\"circle\",\"citizen\",\"city\",\"civil\",\"claim\",\"clap\",\"clarify\",\"claw\",\"clay\",\"clean\",\"clerk\",\"clever\",\"click\",\"client\",\"cliff\",\"climb\",\"clinic\",\"clip\",\"clock\",\"clog\",\"close\",\"cloth\",\"cloud\",\"clown\",\"club\",\"clump\",\"cluster\",\"clutch\",\"coach\",\"coast\",\"coconut\",\"code\",\"coffee\",\"coil\",\"coin\",\"collect\",\"color\",\"column\",\"combine\",\"come\",\"comfort\",\"comic\",\"common\",\"company\",\"concert\",\"conduct\",\"confirm\",\"congress\",\"connect\",\"consider\",\"control\",\"convince\",\"cook\",\"cool\",\"copper\",\"copy\",\"coral\",\"core\",\"corn\",\"correct\",\"cost\",\"cotton\",\"couch\",\"country\",\"couple\",\"course\",\"cousin\",\"cover\",\"coyote\",\"crack\",\"cradle\",\"craft\",\"cram\",\"crane\",\"crash\",\"crater\",\"crawl\",\"crazy\",\"cream\",\"credit\",\"creek\",\"crew\",\"cricket\",\"crime\",\"crisp\",\"critic\",\"crop\",\"cross\",\"crouch\",\"crowd\",\"crucial\",\"cruel\",\"cruise\",\"crumble\",\"crunch\",\"crush\",\"cry\",\"crystal\",\"cube\",\"culture\",\"cup\",\"cupboard\",\"curious\",\"current\",\"curtain\",\"curve\",\"cushion\",\"custom\",\"cute\",\"cycle\",\"dad\",\"damage\",\"damp\",\"dance\",\"danger\",\"daring\",\"dash\",\"daughter\",\"dawn\",\"day\",\"deal\",\"debate\",\"debris\",\"decade\",\"december\",\"decide\",\"decline\",\"decorate\",\"decrease\",\"deer\",\"defense\",\"define\",\"defy\",\"degree\",\"delay\",\"deliver\",\"demand\",\"demise\",\"denial\",\"dentist\",\"deny\",\"depart\",\"depend\",\"deposit\",\"depth\",\"deputy\",\"derive\",\"describe\",\"desert\",\"design\",\"desk\",\"despair\",\"destroy\",\"detail\",\"detect\",\"develop\",\"device\",\"devote\",\"diagram\",\"dial\",\"diamond\",\"diary\",\"dice\",\"diesel\",\"diet\",\"differ\",\"digital\",\"dignity\",\"dilemma\",\"dinner\",\"dinosaur\",\"direct\",\"dirt\",\"disagree\",\"discover\",\"disease\",\"dish\",\"dismiss\",\"disorder\",\"display\",\"distance\",\"divert\",\"divide\",\"divorce\",\"dizzy\",\"doctor\",\"document\",\"dog\",\"doll\",\"dolphin\",\"domain\",\"donate\",\"donkey\",\"donor\",\"door\",\"dose\",\"double\",\"dove\",\"draft\",\"dragon\",\"drama\",\"drastic\",\"draw\",\"dream\",\"dress\",\"drift\",\"drill\",\"drink\",\"drip\",\"drive\",\"drop\",\"drum\",\"dry\",\"duck\",\"dumb\",\"dune\",\"during\",\"dust\",\"dutch\",\"duty\",\"dwarf\",\"dynamic\",\"eager\",\"eagle\",\"early\",\"earn\",\"earth\",\"easily\",\"east\",\"easy\",\"echo\",\"ecology\",\"economy\",\"edge\",\"edit\",\"educate\",\"effort\",\"egg\",\"eight\",\"either\",\"elbow\",\"elder\",\"electric\",\"elegant\",\"element\",\"elephant\",\"elevator\",\"elite\",\"else\",\"embark\",\"embody\",\"embrace\",\"emerge\",\"emotion\",\"employ\",\"empower\",\"empty\",\"enable\",\"enact\",\"end\",\"endless\",\"endorse\",\"enemy\",\"energy\",\"enforce\",\"engage\",\"engine\",\"enhance\",\"enjoy\",\"enlist\",\"enough\",\"enrich\",\"enroll\",\"ensure\",\"enter\",\"entire\",\"entry\",\"envelope\",\"episode\",\"equal\",\"equip\",\"era\",\"erase\",\"erode\",\"erosion\",\"error\",\"erupt\",\"escape\",\"essay\",\"essence\",\"estate\",\"eternal\",\"ethics\",\"evidence\",\"evil\",\"evoke\",\"evolve\",\"exact\",\"example\",\"excess\",\"exchange\",\"excite\",\"exclude\",\"excuse\",\"execute\",\"exercise\",\"exhaust\",\"exhibit\",\"exile\",\"exist\",\"exit\",\"exotic\",\"expand\",\"expect\",\"expire\",\"explain\",\"expose\",\"express\",\"extend\",\"extra\",\"eye\",\"eyebrow\",\"fabric\",\"face\",\"faculty\",\"fade\",\"faint\",\"faith\",\"fall\",\"false\",\"fame\",\"family\",\"famous\",\"fan\",\"fancy\",\"fantasy\",\"farm\",\"fashion\",\"fat\",\"fatal\",\"father\",\"fatigue\",\"fault\",\"favorite\",\"feature\",\"february\",\"federal\",\"fee\",\"feed\",\"feel\",\"female\",\"fence\",\"festival\",\"fetch\",\"fever\",\"few\",\"fiber\",\"fiction\",\"field\",\"figure\",\"file\",\"film\",\"filter\",\"final\",\"find\",\"fine\",\"finger\",\"finish\",\"fire\",\"firm\",\"first\",\"fiscal\",\"fish\",\"fit\",\"fitness\",\"fix\",\"flag\",\"flame\",\"flash\",\"flat\",\"flavor\",\"flee\",\"flight\",\"flip\",\"float\",\"flock\",\"floor\",\"flower\",\"fluid\",\"flush\",\"fly\",\"foam\",\"focus\",\"fog\",\"foil\",\"fold\",\"follow\",\"food\",\"foot\",\"force\",\"forest\",\"forget\",\"fork\",\"fortune\",\"forum\",\"forward\",\"fossil\",\"foster\",\"found\",\"fox\",\"fragile\",\"frame\",\"frequent\",\"fresh\",\"friend\",\"fringe\",\"frog\",\"front\",\"frost\",\"frown\",\"frozen\",\"fruit\",\"fuel\",\"fun\",\"funny\",\"furnace\",\"fury\",\"future\",\"gadget\",\"gain\",\"galaxy\",\"gallery\",\"game\",\"gap\",\"garage\",\"garbage\",\"garden\",\"garlic\",\"garment\",\"gas\",\"gasp\",\"gate\",\"gather\",\"gauge\",\"gaze\",\"general\",\"genius\",\"genre\",\"gentle\",\"genuine\",\"gesture\",\"ghost\",\"giant\",\"gift\",\"giggle\",\"ginger\",\"giraffe\",\"girl\",\"give\",\"glad\",\"glance\",\"glare\",\"glass\",\"glide\",\"glimpse\",\"globe\",\"gloom\",\"glory\",\"glove\",\"glow\",\"glue\",\"goat\",\"goddess\",\"gold\",\"good\",\"goose\",\"gorilla\",\"gospel\",\"gossip\",\"govern\",\"gown\",\"grab\",\"grace\",\"grain\",\"grant\",\"grape\",\"grass\",\"gravity\",\"great\",\"green\",\"grid\",\"grief\",\"grit\",\"grocery\",\"group\",\"grow\",\"grunt\",\"guard\",\"guess\",\"guide\",\"guilt\",\"guitar\",\"gun\",\"gym\",\"habit\",\"hair\",\"half\",\"hammer\",\"hamster\",\"hand\",\"happy\",\"harbor\",\"hard\",\"harsh\",\"harvest\",\"hat\",\"have\",\"hawk\",\"hazard\",\"head\",\"health\",\"heart\",\"heavy\",\"hedgehog\",\"height\",\"hello\",\"helmet\",\"help\",\"hen\",\"hero\",\"hidden\",\"high\",\"hill\",\"hint\",\"hip\",\"hire\",\"history\",\"hobby\",\"hockey\",\"hold\",\"hole\",\"holiday\",\"hollow\",\"home\",\"honey\",\"hood\",\"hope\",\"horn\",\"horror\",\"horse\",\"hospital\",\"host\",\"hotel\",\"hour\",\"hover\",\"hub\",\"huge\",\"human\",\"humble\",\"humor\",\"hundred\",\"hungry\",\"hunt\",\"hurdle\",\"hurry\",\"hurt\",\"husband\",\"hybrid\",\"ice\",\"icon\",\"idea\",\"identify\",\"idle\",\"ignore\",\"ill\",\"illegal\",\"illness\",\"image\",\"imitate\",\"immense\",\"immune\",\"impact\",\"impose\",\"improve\",\"impulse\",\"inch\",\"include\",\"income\",\"increase\",\"index\",\"indicate\",\"indoor\",\"industry\",\"infant\",\"inflict\",\"inform\",\"inhale\",\"inherit\",\"initial\",\"inject\",\"injury\",\"inmate\",\"inner\",\"innocent\",\"input\",\"inquiry\",\"insane\",\"insect\",\"inside\",\"inspire\",\"install\",\"intact\",\"interest\",\"into\",\"invest\",\"invite\",\"involve\",\"iron\",\"island\",\"isolate\",\"issue\",\"item\",\"ivory\",\"jacket\",\"jaguar\",\"jar\",\"jazz\",\"jealous\",\"jeans\",\"jelly\",\"jewel\",\"job\",\"join\",\"joke\",\"journey\",\"joy\",\"judge\",\"juice\",\"jump\",\"jungle\",\"junior\",\"junk\",\"just\",\"kangaroo\",\"keen\",\"keep\",\"ketchup\",\"key\",\"kick\",\"kid\",\"kidney\",\"kind\",\"kingdom\",\"kiss\",\"kit\",\"kitchen\",\"kite\",\"kitten\",\"kiwi\",\"knee\",\"knife\",\"knock\",\"know\",\"lab\",\"label\",\"labor\",\"ladder\",\"lady\",\"lake\",\"lamp\",\"language\",\"laptop\",\"large\",\"later\",\"latin\",\"laugh\",\"laundry\",\"lava\",\"law\",\"lawn\",\"lawsuit\",\"layer\",\"lazy\",\"leader\",\"leaf\",\"learn\",\"leave\",\"lecture\",\"left\",\"leg\",\"legal\",\"legend\",\"leisure\",\"lemon\",\"lend\",\"length\",\"lens\",\"leopard\",\"lesson\",\"letter\",\"level\",\"liar\",\"liberty\",\"library\",\"license\",\"life\",\"lift\",\"light\",\"like\",\"limb\",\"limit\",\"link\",\"lion\",\"liquid\",\"list\",\"little\",\"live\",\"lizard\",\"load\",\"loan\",\"lobster\",\"local\",\"lock\",\"logic\",\"lonely\",\"long\",\"loop\",\"lottery\",\"loud\",\"lounge\",\"love\",\"loyal\",\"lucky\",\"luggage\",\"lumber\",\"lunar\",\"lunch\",\"luxury\",\"lyrics\",\"machine\",\"mad\",\"magic\",\"magnet\",\"maid\",\"mail\",\"main\",\"major\",\"make\",\"mammal\",\"man\",\"manage\",\"mandate\",\"mango\",\"mansion\",\"manual\",\"maple\",\"marble\",\"march\",\"margin\",\"marine\",\"market\",\"marriage\",\"mask\",\"mass\",\"master\",\"match\",\"material\",\"math\",\"matrix\",\"matter\",\"maximum\",\"maze\",\"meadow\",\"mean\",\"measure\",\"meat\",\"mechanic\",\"medal\",\"media\",\"melody\",\"melt\",\"member\",\"memory\",\"mention\",\"menu\",\"mercy\",\"merge\",\"merit\",\"merry\",\"mesh\",\"message\",\"metal\",\"method\",\"middle\",\"midnight\",\"milk\",\"million\",\"mimic\",\"mind\",\"minimum\",\"minor\",\"minute\",\"miracle\",\"mirror\",\"misery\",\"miss\",\"mistake\",\"mix\",\"mixed\",\"mixture\",\"mobile\",\"model\",\"modify\",\"mom\",\"moment\",\"monitor\",\"monkey\",\"monster\",\"month\",\"moon\",\"moral\",\"more\",\"morning\",\"mosquito\",\"mother\",\"motion\",\"motor\",\"mountain\",\"mouse\",\"move\",\"movie\",\"much\",\"muffin\",\"mule\",\"multiply\",\"muscle\",\"museum\",\"mushroom\",\"music\",\"must\",\"mutual\",\"myself\",\"mystery\",\"myth\",\"naive\",\"name\",\"napkin\",\"narrow\",\"nasty\",\"nation\",\"nature\",\"near\",\"neck\",\"need\",\"negative\",\"neglect\",\"neither\",\"nephew\",\"nerve\",\"nest\",\"net\",\"network\",\"neutral\",\"never\",\"news\",\"next\",\"nice\",\"night\",\"noble\",\"noise\",\"nominee\",\"noodle\",\"normal\",\"north\",\"nose\",\"notable\",\"note\",\"nothing\",\"notice\",\"novel\",\"now\",\"nuclear\",\"number\",\"nurse\",\"nut\",\"oak\",\"obey\",\"object\",\"oblige\",\"obscure\",\"observe\",\"obtain\",\"obvious\",\"occur\",\"ocean\",\"october\",\"odor\",\"off\",\"offer\",\"office\",\"often\",\"oil\",\"okay\",\"old\",\"olive\",\"olympic\",\"omit\",\"once\",\"one\",\"onion\",\"online\",\"only\",\"open\",\"opera\",\"opinion\",\"oppose\",\"option\",\"orange\",\"orbit\",\"orchard\",\"order\",\"ordinary\",\"organ\",\"orient\",\"original\",\"orphan\",\"ostrich\",\"other\",\"outdoor\",\"outer\",\"output\",\"outside\",\"oval\",\"oven\",\"over\",\"own\",\"owner\",\"oxygen\",\"oyster\",\"ozone\",\"pact\",\"paddle\",\"page\",\"pair\",\"palace\",\"palm\",\"panda\",\"panel\",\"panic\",\"panther\",\"paper\",\"parade\",\"parent\",\"park\",\"parrot\",\"party\",\"pass\",\"patch\",\"path\",\"patient\",\"patrol\",\"pattern\",\"pause\",\"pave\",\"payment\",\"peace\",\"peanut\",\"pear\",\"peasant\",\"pelican\",\"pen\",\"penalty\",\"pencil\",\"people\",\"pepper\",\"perfect\",\"permit\",\"person\",\"pet\",\"phone\",\"photo\",\"phrase\",\"physical\",\"piano\",\"picnic\",\"picture\",\"piece\",\"pig\",\"pigeon\",\"pill\",\"pilot\",\"pink\",\"pioneer\",\"pipe\",\"pistol\",\"pitch\",\"pizza\",\"place\",\"planet\",\"plastic\",\"plate\",\"play\",\"please\",\"pledge\",\"pluck\",\"plug\",\"plunge\",\"poem\",\"poet\",\"point\",\"polar\",\"pole\",\"police\",\"pond\",\"pony\",\"pool\",\"popular\",\"portion\",\"position\",\"possible\",\"post\",\"potato\",\"pottery\",\"poverty\",\"powder\",\"power\",\"practice\",\"praise\",\"predict\",\"prefer\",\"prepare\",\"present\",\"pretty\",\"prevent\",\"price\",\"pride\",\"primary\",\"print\",\"priority\",\"prison\",\"private\",\"prize\",\"problem\",\"process\",\"produce\",\"profit\",\"program\",\"project\",\"promote\",\"proof\",\"property\",\"prosper\",\"protect\",\"proud\",\"provide\",\"public\",\"pudding\",\"pull\",\"pulp\",\"pulse\",\"pumpkin\",\"punch\",\"pupil\",\"puppy\",\"purchase\",\"purity\",\"purpose\",\"purse\",\"push\",\"put\",\"puzzle\",\"pyramid\",\"quality\",\"quantum\",\"quarter\",\"question\",\"quick\",\"quit\",\"quiz\",\"quote\",\"rabbit\",\"raccoon\",\"race\",\"rack\",\"radar\",\"radio\",\"rail\",\"rain\",\"raise\",\"rally\",\"ramp\",\"ranch\",\"random\",\"range\",\"rapid\",\"rare\",\"rate\",\"rather\",\"raven\",\"raw\",\"razor\",\"ready\",\"real\",\"reason\",\"rebel\",\"rebuild\",\"recall\",\"receive\",\"recipe\",\"record\",\"recycle\",\"reduce\",\"reflect\",\"reform\",\"refuse\",\"region\",\"regret\",\"regular\",\"reject\",\"relax\",\"release\",\"relief\",\"rely\",\"remain\",\"remember\",\"remind\",\"remove\",\"render\",\"renew\",\"rent\",\"reopen\",\"repair\",\"repeat\",\"replace\",\"report\",\"require\",\"rescue\",\"resemble\",\"resist\",\"resource\",\"response\",\"result\",\"retire\",\"retreat\",\"return\",\"reunion\",\"reveal\",\"review\",\"reward\",\"rhythm\",\"rib\",\"ribbon\",\"rice\",\"rich\",\"ride\",\"ridge\",\"rifle\",\"right\",\"rigid\",\"ring\",\"riot\",\"ripple\",\"risk\",\"ritual\",\"rival\",\"river\",\"road\",\"roast\",\"robot\",\"robust\",\"rocket\",\"romance\",\"roof\",\"rookie\",\"room\",\"rose\",\"rotate\",\"rough\",\"round\",\"route\",\"royal\",\"rubber\",\"rude\",\"rug\",\"rule\",\"run\",\"runway\",\"rural\",\"sad\",\"saddle\",\"sadness\",\"safe\",\"sail\",\"salad\",\"salmon\",\"salon\",\"salt\",\"salute\",\"same\",\"sample\",\"sand\",\"satisfy\",\"satoshi\",\"sauce\",\"sausage\",\"save\",\"say\",\"scale\",\"scan\",\"scare\",\"scatter\",\"scene\",\"scheme\",\"school\",\"science\",\"scissors\",\"scorpion\",\"scout\",\"scrap\",\"screen\",\"script\",\"scrub\",\"sea\",\"search\",\"season\",\"seat\",\"second\",\"secret\",\"section\",\"security\",\"seed\",\"seek\",\"segment\",\"select\",\"sell\",\"seminar\",\"senior\",\"sense\",\"sentence\",\"series\",\"service\",\"session\",\"settle\",\"setup\",\"seven\",\"shadow\",\"shaft\",\"shallow\",\"share\",\"shed\",\"shell\",\"sheriff\",\"shield\",\"shift\",\"shine\",\"ship\",\"shiver\",\"shock\",\"shoe\",\"shoot\",\"shop\",\"short\",\"shoulder\",\"shove\",\"shrimp\",\"shrug\",\"shuffle\",\"shy\",\"sibling\",\"sick\",\"side\",\"siege\",\"sight\",\"sign\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\"simple\",\"since\",\"sing\",\"siren\",\"sister\",\"situate\",\"six\",\"size\",\"skate\",\"sketch\",\"ski\",\"skill\",\"skin\",\"skirt\",\"skull\",\"slab\",\"slam\",\"sleep\",\"slender\",\"slice\",\"slide\",\"slight\",\"slim\",\"slogan\",\"slot\",\"slow\",\"slush\",\"small\",\"smart\",\"smile\",\"smoke\",\"smooth\",\"snack\",\"snake\",\"snap\",\"sniff\",\"snow\",\"soap\",\"soccer\",\"social\",\"sock\",\"soda\",\"soft\",\"solar\",\"soldier\",\"solid\",\"solution\",\"solve\",\"someone\",\"song\",\"soon\",\"sorry\",\"sort\",\"soul\",\"sound\",\"soup\",\"source\",\"south\",\"space\",\"spare\",\"spatial\",\"spawn\",\"speak\",\"special\",\"speed\",\"spell\",\"spend\",\"sphere\",\"spice\",\"spider\",\"spike\",\"spin\",\"spirit\",\"split\",\"spoil\",\"sponsor\",\"spoon\",\"sport\",\"spot\",\"spray\",\"spread\",\"spring\",\"spy\",\"square\",\"squeeze\",\"squirrel\",\"stable\",\"stadium\",\"staff\",\"stage\",\"stairs\",\"stamp\",\"stand\",\"start\",\"state\",\"stay\",\"steak\",\"steel\",\"stem\",\"step\",\"stereo\",\"stick\",\"still\",\"sting\",\"stock\",\"stomach\",\"stone\",\"stool\",\"story\",\"stove\",\"strategy\",\"street\",\"strike\",\"strong\",\"struggle\",\"student\",\"stuff\",\"stumble\",\"style\",\"subject\",\"submit\",\"subway\",\"success\",\"such\",\"sudden\",\"suffer\",\"sugar\",\"suggest\",\"suit\",\"summer\",\"sun\",\"sunny\",\"sunset\",\"super\",\"supply\",\"supreme\",\"sure\",\"surface\",\"surge\",\"surprise\",\"surround\",\"survey\",\"suspect\",\"sustain\",\"swallow\",\"swamp\",\"swap\",\"swarm\",\"swear\",\"sweet\",\"swift\",\"swim\",\"swing\",\"switch\",\"sword\",\"symbol\",\"symptom\",\"syrup\",\"system\",\"table\",\"tackle\",\"tag\",\"tail\",\"talent\",\"talk\",\"tank\",\"tape\",\"target\",\"task\",\"taste\",\"tattoo\",\"taxi\",\"teach\",\"team\",\"tell\",\"ten\",\"tenant\",\"tennis\",\"tent\",\"term\",\"test\",\"text\",\"thank\",\"that\",\"theme\",\"then\",\"theory\",\"there\",\"they\",\"thing\",\"this\",\"thought\",\"three\",\"thrive\",\"throw\",\"thumb\",\"thunder\",\"ticket\",\"tide\",\"tiger\",\"tilt\",\"timber\",\"time\",\"tiny\",\"tip\",\"tired\",\"tissue\",\"title\",\"toast\",\"tobacco\",\"today\",\"toddler\",\"toe\",\"together\",\"toilet\",\"token\",\"tomato\",\"tomorrow\",\"tone\",\"tongue\",\"tonight\",\"tool\",\"tooth\",\"top\",\"topic\",\"topple\",\"torch\",\"tornado\",\"tortoise\",\"toss\",\"total\",\"tourist\",\"toward\",\"tower\",\"town\",\"toy\",\"track\",\"trade\",\"traffic\",\"tragic\",\"train\",\"transfer\",\"trap\",\"trash\",\"travel\",\"tray\",\"treat\",\"tree\",\"trend\",\"trial\",\"tribe\",\"trick\",\"trigger\",\"trim\",\"trip\",\"trophy\",\"trouble\",\"truck\",\"true\",\"truly\",\"trumpet\",\"trust\",\"truth\",\"try\",\"tube\",\"tuition\",\"tumble\",\"tuna\",\"tunnel\",\"turkey\",\"turn\",\"turtle\",\"twelve\",\"twenty\",\"twice\",\"twin\",\"twist\",\"two\",\"type\",\"typical\",\"ugly\",\"umbrella\",\"unable\",\"unaware\",\"uncle\",\"uncover\",\"under\",\"undo\",\"unfair\",\"unfold\",\"unhappy\",\"uniform\",\"unique\",\"unit\",\"universe\",\"unknown\",\"unlock\",\"until\",\"unusual\",\"unveil\",\"update\",\"upgrade\",\"uphold\",\"upon\",\"upper\",\"upset\",\"urban\",\"urge\",\"usage\",\"use\",\"used\",\"useful\",\"useless\",\"usual\",\"utility\",\"vacant\",\"vacuum\",\"vague\",\"valid\",\"valley\",\"valve\",\"van\",\"vanish\",\"vapor\",\"various\",\"vast\",\"vault\",\"vehicle\",\"velvet\",\"vendor\",\"venture\",\"venue\",\"verb\",\"verify\",\"version\",\"very\",\"vessel\",\"veteran\",\"viable\",\"vibrant\",\"vicious\",\"victory\",\"video\",\"view\",\"village\",\"vintage\",\"violin\",\"virtual\",\"virus\",\"visa\",\"visit\",\"visual\",\"vital\",\"vivid\",\"vocal\",\"voice\",\"void\",\"volcano\",\"volume\",\"vote\",\"voyage\",\"wage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"walnut\",\"want\",\"warfare\",\"warm\",\"warrior\",\"wash\",\"wasp\",\"waste\",\"water\",\"wave\",\"way\",\"wealth\",\"weapon\",\"wear\",\"weasel\",\"weather\",\"web\",\"wedding\",\"weekend\",\"weird\",\"welcome\",\"west\",\"wet\",\"whale\",\"what\",\"wheat\",\"wheel\",\"when\",\"where\",\"whip\",\"whisper\",\"wide\",\"width\",\"wife\",\"wild\",\"will\",\"win\",\"window\",\"wine\",\"wing\",\"wink\",\"winner\",\"winter\",\"wire\",\"wisdom\",\"wise\",\"wish\",\"witness\",\"wolf\",\"woman\",\"wonder\",\"wood\",\"wool\",\"word\",\"work\",\"world\",\"worry\",\"worth\",\"wrap\",\"wreck\",\"wrestle\",\"wrist\",\"write\",\"wrong\",\"yard\",\"year\",\"yellow\",\"you\",\"young\",\"youth\",\"zebra\",\"zero\",\"zone\",\"zoo\"];\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst needleInHaystack$1 = (arrayLen, itemsArrayLen) => {\n    const memoryLen = (arrayLen * crypto_hash_sha512_BYTES +\n        itemsArrayLen * (crypto_hash_sha512_BYTES + 1)) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst randomBytes$1 = (bytes) => {\n    const memoryLen = bytes * Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst randomNumberInRange$1 = (min, max) => {\n    const bytesNeeded = Math.ceil(Math.log2(max - min) / 8);\n    const memoryLen = bytesNeeded * Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nvar memory$2 = {\n    needleInHaystack: needleInHaystack$1,\n    randomBytes: randomBytes$1,\n    randomNumberInRange: randomNumberInRange$1,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns a Uint8Array of cryptographically random bytes.\n *\n * @param n: The length of the array.\n * @param module: In case we want to cache the WASM loading.\n *\n * @returns Uint8Array\n */\nconst randomBytes = async (n, module) => {\n    const wasmMemory = module ? module.wasmMemory : memory$2.randomBytes(n);\n    const dcryptoModule = module ||\n        (await dcryptoMethodsModule({\n            wasmMemory,\n        }));\n    const ptr = dcryptoModule._malloc(n * Uint8Array.BYTES_PER_ELEMENT);\n    const bytes = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr, n * Uint8Array.BYTES_PER_ELEMENT);\n    // const bytes = new Uint8Array(wasmMemory.buffer, 0, n);\n    const result = dcryptoModule._random_bytes(n, bytes.byteOffset);\n    dcryptoModule._free(ptr);\n    if (result === 0)\n        return new Uint8Array([...bytes]);\n    throw new Error(\"Could not generate random data\");\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst sha512Memory = (arrayLen) => {\n    const memoryLen = arrayLen + crypto_hash_sha512_BYTES;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst argon2Memory = (mnemonicLen) => {\n    const memoryLen = (75 * 1024 * 1024 +\n        mnemonicLen +\n        crypto_sign_ed25519_SEEDBYTES +\n        crypto_pwhash_argon2id_SALTBYTES) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nvar hashMemory = {\n    sha512Memory,\n    argon2Memory,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst sha512 = async (data, module) => {\n    const dataLen = data.length;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : hashMemory.sha512Memory(dataLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(dataLen * Uint8Array.BYTES_PER_ELEMENT);\n    const arr = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, dataLen * Uint8Array.BYTES_PER_ELEMENT);\n    arr.set([...data]);\n    const ptr2 = dcryptoModule._malloc(crypto_hash_sha512_BYTES);\n    const hash = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, crypto_hash_sha512_BYTES);\n    const result = dcryptoModule._sha512(dataLen, arr.byteOffset, hash.byteOffset);\n    const h = new Uint8Array([...hash]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    if (result === 0)\n        return h;\n    throw new Error(\"Could not hash the array.\");\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * Generates a sequence of words that represents a random seed that\n * can be translated into a cryptographic keypair.\n */\nconst generateMnemonic = async (strength) => {\n    strength = strength || 128;\n    // if (strength % 32 !== 0) {\n    //   throw new TypeError(\"Mnemonic strength needs to be multiple of 32.\");\n    // }\n    // if (!wordlist) throw new Error(\"English wordlist could not be loaded.\");\n    // Between 16 and 32 and multiple of 4\n    const entropy = await randomBytes(strength / 8);\n    // if (entropy.length < 16) throw new TypeError(\"Entropy length too small.\");\n    // if (entropy.length > 32) throw new TypeError(\"Entropy length too large.\");\n    // if (entropy.length % 4 !== 0)\n    //   throw new TypeError(\"Entropy length is not multiple of 4.\");\n    const entropyBits = entropy.reduce((str, byte) => str + byte.toString(2).padStart(8, \"0\"), \"\");\n    const CS = strength / 32;\n    const entropyHash = await sha512(entropy);\n    const checksumBits = entropyHash\n        .reduce((str, byte) => str + byte.toString(2).padStart(8, \"0\"), \"\")\n        .slice(0, CS);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    // if (!chunks)\n    //   throw new Error(\"Did not find enough 1s and 11s in binary format.\");\n    const words = chunks.map((binary) => {\n        const index = parseInt(binary, 2);\n        return wordlist[index];\n    });\n    return words.join(\" \");\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst normalize$1 = (str) => {\n    return str.normalize(\"NFKD\");\n};\nconst mnemonicToEntropy = async (mnemonic) => {\n    // if (!wordlist) throw new Error(\"Could not load english wordlist\");\n    const words = normalize$1(mnemonic).split(\" \");\n    if (words.length % 3 !== 0)\n        throw new Error(\"Number of words in mnemonic must be multiple of three.\");\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(\"Could not find word in wordlist.\");\n        }\n        return index.toString(2).padStart(11, \"0\");\n        // return lpad(index.toString(2), \"0\", 11);\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // convert bits to entropy\n    const entropyBitsMatched = entropyBits.match(/(.{1,8})/g);\n    // if (!entropyBitsMatched) throw new Error(\"Invalid entropy bits.\");\n    // calculate the checksum and compare\n    const entropy = entropyBitsMatched.map((bin) => parseInt(bin, 2));\n    if (entropy.length < 16)\n        throw new Error(\"Entropy length too small (less than 128 bits).\");\n    if (entropy.length > 32)\n        throw new Error(\"Entropy length too large (more than 256 bits).\");\n    // Can never happen because of :45 always divisible by 4\n    // if (entropy.length % 4 !== 0)\n    //   throw new Error(\"Entropy length must be a multiple of 4.\");\n    const CS = entropy.length / 4;\n    const entropyHash = await sha512(Uint8Array.from([...entropy]));\n    const newChecksum = entropyHash\n        .reduce((str, byte) => str + byte.toString(2).padStart(8, \"0\"), \"\")\n        .slice(0, CS);\n    if (newChecksum !== checksumBits)\n        throw new Error(\"Invalid checksum.\");\n    return true;\n};\nconst validateMnemonic = async (mnemonic) => {\n    try {\n        return await mnemonicToEntropy(mnemonic);\n    }\n    catch (e) {\n        return false;\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst normalize = (str) => {\n    return (str || \"\").normalize(\"NFKD\");\n};\nconst argon2 = async (mnemonic, salt, module) => {\n    const mnemonicNormalized = normalize(mnemonic);\n    // const mnemonicBuffer = Buffer.from(mnemonicNormalized, \"utf8\");\n    const encoder = new TextEncoder();\n    const mnemonicBuffer = encoder.encode(mnemonicNormalized).buffer;\n    const mnemonicInt8Array = new Int8Array(mnemonicBuffer);\n    const mnemonicArrayLen = mnemonicInt8Array.length;\n    salt = salt || (await randomBytes(crypto_pwhash_argon2id_SALTBYTES));\n    const wasmMemory = module\n        ? module.wasmMemory\n        : hashMemory.argon2Memory(mnemonicArrayLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory }));\n    const ptr1 = dcryptoModule._malloc(crypto_sign_ed25519_SEEDBYTES);\n    const seed = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, crypto_sign_ed25519_SEEDBYTES);\n    const ptr2 = dcryptoModule._malloc(mnemonicArrayLen * Uint8Array.BYTES_PER_ELEMENT);\n    const mnmnc = new Int8Array(dcryptoModule.HEAP8.buffer, ptr2, mnemonicArrayLen * Uint8Array.BYTES_PER_ELEMENT);\n    mnmnc.set([...mnemonicInt8Array]);\n    const ptr3 = dcryptoModule._malloc(crypto_pwhash_argon2id_SALTBYTES);\n    const saltArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr3, crypto_pwhash_argon2id_SALTBYTES);\n    saltArray.set([...salt]);\n    const result = dcryptoModule._argon2(mnemonicArrayLen, seed.byteOffset, mnmnc.byteOffset, saltArray.byteOffset);\n    const s = new Uint8Array([...seed]);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    dcryptoModule._free(ptr3);\n    if (result === 0) {\n        return s;\n    }\n    else {\n        throw new Error(\"Could not generate argon2id for mnemonic.\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst keyPairFromMnemonic = async (mnemonic, password) => {\n    const isValid = await validateMnemonic(mnemonic);\n    if (!isValid)\n        throw new Error(\"Invalid mnemonic.\");\n    // const defaultSalt = Uint8Array.from(Buffer.from(\"password12345678\", \"utf8\"));\n    const defaultSalt = new Uint8Array(crypto_pwhash_argon2id_SALTBYTES);\n    const encoder = new TextEncoder();\n    encoder.encodeInto(\"password12345678\", defaultSalt);\n    const salt = new Uint8Array(crypto_pwhash_argon2id_SALTBYTES);\n    if (password) {\n        const encoder = new TextEncoder();\n        const pwdBuffer = encoder.encode(password).buffer;\n        const pwdHash = await sha512(new Uint8Array(pwdBuffer));\n        salt.set(pwdHash.slice(crypto_hash_sha512_BYTES - crypto_pwhash_argon2id_SALTBYTES, crypto_hash_sha512_BYTES));\n    }\n    else {\n        salt.set(defaultSalt);\n    }\n    const seed = await argon2(mnemonic, salt);\n    const keypair = await keyPair.keyPairFromSeed(seed);\n    if (!keypair)\n        throw new Error(\"Invalid seed from mnemonic.\");\n    return keypair;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar mnemonic = {\n    generateMnemonic,\n    validateMnemonic,\n    keyPairFromMnemonic,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar hash = {\n    sha512,\n    argon2,\n    memory: hashMemory,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst getMerkleRootMemory = (leavesLen) => {\n    const memoryLen = (2 * leavesLen + 3) * crypto_hash_sha512_BYTES;\n    const memoryPages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({\n        initial: memoryPages,\n        maximum: memoryPages,\n    });\n};\nconst getMerkleProofMemory = (leavesLen) => {\n    const memoryLen = (3 * leavesLen + 4) * crypto_hash_sha512_BYTES + leavesLen;\n    const memoryPages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({\n        initial: memoryPages,\n        maximum: memoryPages,\n    });\n};\nconst verifyMerkleProofMemory = (proofLen) => {\n    const memoryLen = proofLen + 5 * crypto_hash_sha512_BYTES;\n    const memoryPages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({\n        initial: memoryPages,\n        maximum: memoryPages,\n    });\n};\nvar memory$1 = {\n    getMerkleRootMemory,\n    getMerkleProofMemory,\n    verifyMerkleProofMemory,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst isUint8Array = (item) => {\n    return item.byteOffset !== undefined;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns the Merkle root of a tree.\n * If Uint8Array items' length is 64, even after serializer,\n * then we assume that it is a hash.\n *\n * @param tree: The tree.\n * @param serializer: Converts leaves into Uint8Array.\n *\n * @returns Promise<Uint8Array>\n */\nconst getMerkleRoot = async (tree, serializer) => {\n    const treeLen = tree.length;\n    if (treeLen === 0) {\n        throw new Error(\"Cannot calculate Merkle root of tree with no leaves.\");\n    }\n    else if (treeLen === 1) {\n        const leafIsUint8Array = isUint8Array(tree[0]);\n        if (!leafIsUint8Array && !serializer)\n            throw new Error(\"Tree leaf not Uint8Array, needs serializer.\");\n        const leafSerialized = leafIsUint8Array\n            ? tree[0]\n            : serializer\n                ? serializer(tree[0])\n                : new Uint8Array(32); // will never happen\n        return await sha512(leafSerialized);\n    }\n    const wasmMemory = memory$1.getMerkleRootMemory(treeLen);\n    const module = await dcryptoMethodsModule({\n        wasmMemory,\n    });\n    const ptr1 = module._malloc(treeLen * crypto_hash_sha512_BYTES);\n    const leavesHashed = new Uint8Array(module.HEAP8.buffer, ptr1, treeLen * crypto_hash_sha512_BYTES);\n    let i = 0;\n    let leafIsUint8Array = false;\n    let hash;\n    let serialized;\n    for (const leaf of tree) {\n        leafIsUint8Array = isUint8Array(leaf);\n        if (!leafIsUint8Array && !serializer)\n            throw new Error(\"Tree leaf not Uint8Array, needs serializer.\");\n        serialized = leafIsUint8Array\n            ? leaf\n            : serializer\n                ? serializer(leaf)\n                : new Uint8Array(32); // will never happen\n        hash = await sha512(serialized, module);\n        leavesHashed.set([...hash], i * crypto_hash_sha512_BYTES);\n        i++;\n    }\n    const ptr2 = module._malloc(crypto_hash_sha512_BYTES);\n    const rootWasm = new Uint8Array(module.HEAP8.buffer, ptr2, crypto_hash_sha512_BYTES);\n    const result = module._get_merkle_root(treeLen, leavesHashed.byteOffset, rootWasm.byteOffset);\n    module._free(ptr1);\n    switch (result) {\n        case 0: {\n            const root = Uint8Array.from([...rootWasm]);\n            module._free(ptr2);\n            return root;\n        }\n        default: {\n            module._free(ptr2);\n            throw new Error(\"Unexpected error occured\");\n        }\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns the Merkle proof of an element of a tree.\n * Can be used as a receipt of a transaction etc.\n *\n * @param tree: The tree.\n * @param element: The element.\n * @param serializer: Converts leaves into Uint8Array.\n *\n * @returns Promise<Uint8Array>\n */\nconst getMerkleProof = async (tree, element, serializer) => {\n    const treeLen = tree.length;\n    if (treeLen === 0) {\n        throw new Error(\"Cannot calculate Merkle proof of element of empty tree.\");\n    }\n    else if (treeLen === 1) {\n        return new Uint8Array(crypto_hash_sha512_BYTES + 1).fill(1);\n        // throw new Error(\n        //   \"No point in calculating proof of a tree with single leaf.\",\n        // );\n    }\n    const leavesAreUint8Arrays = isUint8Array(tree[0]);\n    const elementIsUint8Array = isUint8Array(element);\n    if (!serializer && (!leavesAreUint8Arrays || !elementIsUint8Array))\n        throw new Error(\"It is mandatory to provide a serializer for non-Uint8Array items\");\n    const wasmMemory = memory$1.getMerkleProofMemory(treeLen);\n    const module = await dcryptoMethodsModule({\n        wasmMemory,\n    });\n    const ptr1 = module._malloc(treeLen * crypto_hash_sha512_BYTES);\n    const leavesHashed = new Uint8Array(module.HEAP8.buffer, ptr1, treeLen * crypto_hash_sha512_BYTES);\n    let i = 0;\n    let leafIsUint8Array = false;\n    let hash;\n    let serialized;\n    for (const leaf of tree) {\n        leafIsUint8Array = isUint8Array(leaf);\n        serialized = leafIsUint8Array\n            ? leaf\n            : serializer\n                ? serializer(leaf)\n                : new Uint8Array(32); // will never happen\n        hash = await sha512(serialized, module);\n        leavesHashed.set([...hash], i * crypto_hash_sha512_BYTES);\n        i++;\n    }\n    const ptr2 = module._malloc(crypto_hash_sha512_BYTES);\n    const elementHash = new Uint8Array(module.HEAP8.buffer, ptr2, crypto_hash_sha512_BYTES);\n    const elementSerialized = elementIsUint8Array\n        ? element\n        : serializer\n            ? serializer(element)\n            : new Uint8Array(32); // will never happen\n    hash = await sha512(elementSerialized);\n    elementHash.set([...hash]);\n    const ptr3 = module._malloc(treeLen * (crypto_hash_sha512_BYTES + 1));\n    const proof = new Uint8Array(module.HEAP8.buffer, ptr3, treeLen * (crypto_hash_sha512_BYTES + 1));\n    const result = module._get_merkle_proof(treeLen, leavesHashed.byteOffset, elementHash.byteOffset, proof.byteOffset);\n    module._free(ptr1);\n    module._free(ptr2);\n    switch (result) {\n        case -1:\n            module._free(ptr3);\n            throw new Error(\"Element not in tree.\");\n        default: {\n            const proofArray = Uint8Array.from([...proof.slice(0, result)]);\n            module._free(ptr3);\n            return proofArray;\n        }\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Calculates the Merkle root from the element hash and its Merkle proof.\n *\n * @param hash: The hash of the base element in question.\n * @param proof: The first element is the first leave that was added for the calculation etc. The last\n * byte is either 0 or 1, indicating whether it is to the left or to the right in the tree.\n *\n * @returns The Merkle root\n */\nconst getMerkleRootFromProof = async (hash, proof) => {\n    const proofLen = proof.length;\n    // if (proofLen % (crypto_hash_sha512_BYTES + 1) !== 0)\n    //   throw new Error(\"Proof length not multiple of 65.\");\n    const wasmMemory = memory$1.verifyMerkleProofMemory(proofLen);\n    const module = await dcryptoMethodsModule({\n        wasmMemory,\n    });\n    const ptr1 = module._malloc(crypto_hash_sha512_BYTES);\n    const elementHash = new Uint8Array(module.HEAP8.buffer, ptr1, crypto_hash_sha512_BYTES);\n    elementHash.set([...hash]);\n    const ptr2 = module._malloc(proofLen);\n    const proofArray = new Uint8Array(module.HEAP8.buffer, ptr2, proofLen);\n    proofArray.set([...proof]);\n    const ptr3 = module._malloc(crypto_hash_sha512_BYTES);\n    const rootArray = new Uint8Array(module.HEAP8.buffer, ptr3, crypto_hash_sha512_BYTES);\n    const result = module._get_merkle_root_from_proof(proofLen, elementHash.byteOffset, proofArray.byteOffset, rootArray.byteOffset);\n    module._free(ptr1);\n    module._free(ptr2);\n    switch (result) {\n        case 0: {\n            const proof = Uint8Array.from([...rootArray]);\n            module._free(ptr3);\n            return proof;\n        }\n        case -1: {\n            module._free(ptr3);\n            throw new Error(\"Proof artifact position is neither left nor right.\");\n        }\n        default: {\n            module._free(ptr3);\n            throw new Error(\"Unexpected error occured.\");\n        }\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * Verifies that the hash was indeed included in the calculation of the Merkle root.\n * @param hash: The hash of the base element in question.\n * @param root: The Merkle root.\n * @param proof: The first element is the first leave that was added for the calculation etc. The last\n * byte is either 0 or 1, indicating whether it is to the left or to the right in the tree.\n */\nconst verifyMerkleProof = async (hash, root, proof) => {\n    const proofLen = proof.length;\n    // if (proofLen % (crypto_hash_sha512_BYTES + 1) !== 0)\n    //   throw new Error(\"Proof length not multiple of 65.\");\n    const wasmMemory = memory$1.verifyMerkleProofMemory(proofLen);\n    const module = await dcryptoMethodsModule({\n        wasmMemory,\n    });\n    const ptr1 = module._malloc(crypto_hash_sha512_BYTES);\n    const elementHash = new Uint8Array(module.HEAP8.buffer, ptr1, crypto_hash_sha512_BYTES);\n    elementHash.set([...hash]);\n    const ptr2 = module._malloc(crypto_hash_sha512_BYTES);\n    const rootArray = new Uint8Array(module.HEAP8.buffer, ptr2, crypto_hash_sha512_BYTES);\n    rootArray.set([...root]);\n    const ptr3 = module._malloc(proofLen);\n    const proofArray = new Uint8Array(module.HEAP8.buffer, ptr3, proofLen);\n    proofArray.set([...proof]);\n    const result = module._verify_merkle_proof(proofLen, elementHash.byteOffset, rootArray.byteOffset, proofArray.byteOffset);\n    module._free(ptr1);\n    module._free(ptr2);\n    module._free(ptr3);\n    switch (result) {\n        case 0:\n            return true;\n        case 1:\n            return false;\n        case -1:\n            throw new Error(\"Proof length not multiple of 65.\");\n        case -2:\n            throw new Error(\"Proof artifact position is neither left nor right.\");\n        default:\n            throw new Error(\"Unexpected error occured.\");\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar merkle = {\n    getMerkleRoot,\n    getMerkleProof,\n    getMerkleRootFromProof,\n    verifyMerkleProof,\n    memory: memory$1,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst LOG_AND_EXP = 256 + 510;\nconst splitSecretMemory = (secretLen, sharesLen, threshold) => {\n    const memoryLen = (sharesLen * (secretLen + 1) * (LOG_AND_EXP + 1) + secretLen + threshold) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nconst restoreSecretMemory = (secretLen, sharesLen) => {\n    const memoryLen = (sharesLen * (secretLen + 1) * (LOG_AND_EXP + 1) +\n        secretLen +\n        2 * sharesLen) *\n        Uint8Array.BYTES_PER_ELEMENT;\n    const pages = memoryLenToPages(memoryLen);\n    return new WebAssembly.Memory({ initial: pages, maximum: pages });\n};\nvar memory = { splitSecretMemory, restoreSecretMemory };\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst splitSecret = async (secret, sharesLen, threshold, module) => {\n    const secretLen = secret.length;\n    if (secretLen < 2)\n        throw new Error(\"Need more data.\");\n    if (threshold < 2)\n        throw new Error(\"Threshold is less than 2\");\n    if (sharesLen < threshold)\n        throw new Error(\"Shares are less than threshold\");\n    if (sharesLen > 255)\n        throw new Error(\"Shares exceed 255\");\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory.splitSecretMemory(secretLen, sharesLen, threshold);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory })); // await shamirMethodsModule({ wasmMemory });\n    const ptr1 = dcryptoModule._malloc(secretLen * Uint8Array.BYTES_PER_ELEMENT);\n    const secretArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, secretLen * Uint8Array.BYTES_PER_ELEMENT);\n    secretArray.set([...secret]);\n    const ptr2 = dcryptoModule._malloc(sharesLen * (secretLen + 1) * Uint8Array.BYTES_PER_ELEMENT);\n    const sharesArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, sharesLen * (secretLen + 1) * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._split_secret(sharesLen, threshold, secretLen, secretArray.byteOffset, sharesArray.byteOffset);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    const values = [];\n    switch (result) {\n        case 0: {\n            for (let i = 0; i < sharesLen; i++) {\n                values.push(sharesArray.slice(i * (secretLen + 1), (i + 1) * (secretLen + 1)));\n            }\n            return values;\n        }\n        // case -1: {\n        //   throw new Error(\"Threshold is less than 2\");\n        // }\n        //\n        // case -2: {\n        //   throw new Error(\"Shares are less than threshold\");\n        // }\n        //\n        // case -3: {\n        //   throw new Error(\"Shares exceed 255\");\n        // }\n        default: {\n            throw new Error(\"Unexpected error occured\");\n        }\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst restoreSecret = async (shares, module) => {\n    const sharesLen = shares.length;\n    const shareItemLen = shares[0].length;\n    const lengthVerification = shares.every((v) => v.length === shareItemLen);\n    if (!lengthVerification)\n        throw new Error(\"Shares length varies.\");\n    const secretLen = shareItemLen - 1;\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory.restoreSecretMemory(secretLen, sharesLen);\n    const dcryptoModule = module || (await dcryptoMethodsModule({ wasmMemory })); // await shamirMethodsModule({ wasmMemory });\n    const ptr1 = dcryptoModule._malloc(sharesLen * (secretLen + 1) * Uint8Array.BYTES_PER_ELEMENT);\n    const sharesArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, sharesLen * (secretLen + 1) * Uint8Array.BYTES_PER_ELEMENT);\n    for (let i = 0; i < sharesLen; i++) {\n        sharesArray.set(shares[i], i * (secretLen + 1));\n    }\n    const ptr2 = dcryptoModule._malloc(secretLen * Uint8Array.BYTES_PER_ELEMENT);\n    const secretArray = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, secretLen * Uint8Array.BYTES_PER_ELEMENT);\n    const result = dcryptoModule._restore_secret(sharesLen, secretLen, sharesArray.byteOffset, secretArray.byteOffset);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    switch (result) {\n        case 0: {\n            return new Uint8Array([...secretArray]);\n        }\n        case -1: {\n            throw new Error(\"Need at most 255 shares.\");\n        }\n        case -2: {\n            throw new Error(\"Not enough shares provided.\");\n        }\n        default: {\n            throw new Error(\"An unexpected error occured.\");\n        }\n    }\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar shamir = {\n    splitSecret,\n    restoreSecret,\n    memory,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns an array of indexes of items in an array.\n * If Uint8Array items' length is 64, even after serializer,\n * then we assume that it is a hash.\n *\n * @param needles The subset array of items.\n * @param haystack The superset array.\n * @param serializer Converts item to Uint8Array.\n * @param module In case we want to cache the WASM loading.\n *\n * @returns Promise<number[]>\n */\nconst needleInHaystack = async (needles, haystack, serializer, module) => {\n    const itemsArrayLen = needles.length;\n    const arrayLen = haystack.length;\n    if (arrayLen === 0 || itemsArrayLen === 0) {\n        throw new Error(\"Needles and haystack should have at least one element each.\");\n    }\n    else if (arrayLen < itemsArrayLen) {\n        throw new Error(\"Haystack should be superset of needles, so it should have bigger length.\");\n    }\n    const needlesAreUint8Arrays = isUint8Array(needles[0]);\n    const haystackIsUint8Arrays = isUint8Array(haystack[0]);\n    if (!serializer && !needlesAreUint8Arrays && !haystackIsUint8Arrays)\n        throw new Error(\"It is mandatory to provide a serializer for non-Uint8Array items\");\n    const wasmMemory = module\n        ? module.wasmMemory\n        : memory$2.needleInHaystack(arrayLen, itemsArrayLen);\n    const dcryptoModule = module ||\n        (await dcryptoMethodsModule({\n            wasmMemory,\n        }));\n    const ptr1 = dcryptoModule._malloc(arrayLen * crypto_hash_sha512_BYTES * Uint8Array.BYTES_PER_ELEMENT);\n    const arr = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr1, arrayLen * crypto_hash_sha512_BYTES * Uint8Array.BYTES_PER_ELEMENT);\n    const arrayItemSerialized = haystackIsUint8Arrays\n        ? haystack[0]\n        : serializer\n            ? serializer(haystack[0])\n            : new Uint8Array(32); // will never happen\n    const arrayItemSerializedLen = arrayItemSerialized.length;\n    const hashWasmMemory = hashMemory.sha512Memory(arrayItemSerializedLen);\n    const dcryptoHashModule = await dcryptoMethodsModule({\n        wasmMemory: hashWasmMemory,\n    });\n    let i;\n    for (i = 0; i < arrayLen; i++) {\n        const arraySerialized = haystackIsUint8Arrays\n            ? haystack[i]\n            : serializer\n                ? serializer(haystack[i])\n                : new Uint8Array(32); // will never happen\n        const hash = arraySerialized.length === crypto_hash_sha512_BYTES\n            ? arraySerialized\n            : await sha512(arraySerialized, dcryptoHashModule);\n        arr.set([...hash], i * crypto_hash_sha512_BYTES);\n    }\n    const ptr2 = dcryptoModule._malloc(itemsArrayLen * crypto_hash_sha512_BYTES * Uint8Array.BYTES_PER_ELEMENT);\n    const itms = new Uint8Array(dcryptoModule.HEAP8.buffer, ptr2, itemsArrayLen * crypto_hash_sha512_BYTES * Uint8Array.BYTES_PER_ELEMENT);\n    for (i = 0; i < itemsArrayLen; i++) {\n        const itemSerialized = needlesAreUint8Arrays\n            ? needles[i]\n            : serializer\n                ? serializer(needles[i])\n                : new Uint8Array(32); // will never happen\n        const itemHash = itemSerialized.length === crypto_hash_sha512_BYTES\n            ? itemSerialized\n            : await sha512(itemSerialized, dcryptoHashModule);\n        itms.set([...itemHash], i * crypto_hash_sha512_BYTES);\n    }\n    const ptr3 = dcryptoModule._malloc(itemsArrayLen * Int32Array.BYTES_PER_ELEMENT);\n    const indxs = new Int32Array(dcryptoModule.HEAP32.buffer, ptr3, itemsArrayLen * Int32Array.BYTES_PER_ELEMENT);\n    dcryptoModule._items_indexes_in_array(arrayLen, itemsArrayLen, arr.byteOffset, itms.byteOffset, indxs.byteOffset);\n    dcryptoModule._free(ptr1);\n    dcryptoModule._free(ptr2);\n    const indexes = [];\n    for (i = 0; i < itemsArrayLen; i++) {\n        indexes.push(indxs[i]);\n    }\n    dcryptoModule._free(ptr3);\n    return indexes;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Returns a cryptographically random number between min and max.\n *\n * @param min: The minimum number.\n * @param max: The maximum number.\n * @param module: In case we want to cache the WASM loading.\n *\n * @returns number\n */\nconst randomNumberInRange = async (min, max, module) => {\n    if (module)\n        return module._random_number_in_range(min, max);\n    const wasmMemory = memory$2.randomNumberInRange(min, max);\n    const dcryptoModule = await dcryptoMethodsModule({ wasmMemory });\n    return dcryptoModule._random_number_in_range(min, max);\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Fisher-Yates shuffle of array.\n *\n * @param array: The array to randomly shuffle.\n *\n * @returns Promise<T[]>\n */\nconst arrayRandomShuffle = async (array) => {\n    const n = array.length;\n    // If array has <2 items, there is nothing to do\n    if (n < 2)\n        return array;\n    const shuffled = [...array];\n    const wasmMemory = memory$2.randomNumberInRange(0, n);\n    const module = await dcryptoMethodsModule({ wasmMemory });\n    for (let i = n - 1; i > 0; i--) {\n        const j = await randomNumberInRange(0, i + 1, module);\n        const temp = shuffled[i];\n        shuffled[i] = shuffled[j];\n        shuffled[j] = temp;\n    }\n    return shuffled;\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\n/**\n * @function\n * Random slice of an array.\n *\n * @param array: The array to get random slice from.\n * @param elements: Number of elements.\n *\n * @returns Promise<T[]>\n */\nconst arrayRandomSubset = async (array, elements) => {\n    const n = array.length;\n    // Sanity check\n    if (n < elements || n < 2)\n        throw new Error(\"Not enough elements in the array\");\n    const shuffled = await arrayRandomShuffle(array);\n    return shuffled.slice(0, elements);\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nvar utils = {\n    interfaces,\n    isUint8Array,\n    needleInHaystack,\n    arrayRandomShuffle,\n    arrayRandomSubset,\n    randomBytes,\n    randomNumberInRange,\n    memory: memory$2,\n};\n\n// Copyright (C) 2022 Deliberative Technologies P.C.\nconst dcrypto = {\n    keyPair: asymmetric.keyPair.newKeyPair,\n    keyPairFromSeed: asymmetric.keyPair.keyPairFromSeed,\n    keyPairFromSecretKey: asymmetric.keyPair.keyPairFromSecretKey,\n    sign: asymmetric.sign,\n    verify: asymmetric.verify,\n    generateMnemonic: mnemonic.generateMnemonic,\n    validateMnemonic: mnemonic.validateMnemonic,\n    keyPairFromMnemonic: mnemonic.keyPairFromMnemonic,\n    encryptForwardSecrecy: asymmetric.encrypt,\n    decryptForwardSecrecy: asymmetric.decrypt,\n    encryptSymmetricKey: symmetric.encrypt,\n    decryptSymmetricKey: symmetric.decrypt,\n    sha512: hash.sha512,\n    argon2: hash.argon2,\n    getMerkleRoot: merkle.getMerkleRoot,\n    getMerkleProof: merkle.getMerkleProof,\n    getMerkleRootFromProof: merkle.getMerkleRootFromProof,\n    verifyMerkleProof: merkle.verifyMerkleProof,\n    splitSecret: shamir.splitSecret,\n    restoreSecret: shamir.restoreSecret,\n    needleInHaystack: utils.needleInHaystack,\n    randomBytes: utils.randomBytes,\n    randomNumberInRange: utils.randomNumberInRange,\n    arrayRandomShuffle: utils.arrayRandomShuffle,\n    arrayRandomSubset: utils.arrayRandomSubset,\n    getSymmetricSecretBoxEncryptedLen: utils.interfaces.getEncryptedLen,\n    getSymmetricSecretBoxDecryptedLen: utils.interfaces.getDecryptedLen,\n    getForwardSecretBoxEncryptedLen: utils.interfaces.getForwardSecretBoxEncryptedLen,\n    getForwardSecretBoxDecryptedLen: utils.interfaces.getForwardSecretBoxDecryptedLen,\n    loadWasmModule: dcryptoMethodsModule,\n    loadWasmMemory: {\n        newKeyPair: asymmetric.memory.newKeyPairMemory,\n        keyPairFromSeed: asymmetric.memory.keyPairFromSeedMemory,\n        keyPairFromSecretKey: asymmetric.memory.keyPairFromSecretKeyMemory,\n        sign: asymmetric.memory.signMemory,\n        verify: asymmetric.memory.verifyMemory,\n        encryptForwardSecret: asymmetric.memory.encryptMemory,\n        decryptForwardSecret: asymmetric.memory.decryptMemory,\n        encryptSymmetricKey: symmetric.memory.encryptMemory,\n        decryptSymmetricKey: symmetric.memory.decryptMemory,\n        sha512: hash.memory.sha512Memory,\n        argon2: hash.memory.argon2Memory,\n        getMerkleRoot: merkle.memory.getMerkleRootMemory,\n        getMerkleProof: merkle.memory.getMerkleProofMemory,\n        verifyMerkleProof: merkle.memory.verifyMerkleProofMemory,\n        splitSecret: shamir.memory.splitSecretMemory,\n        restoreSecret: shamir.memory.restoreSecretMemory,\n        needleInHaystack: utils.memory.needleInHaystack,\n        randomBytes: utils.memory.randomBytes,\n        randomNumberInRange: utils.memory.randomNumberInRange,\n    },\n    constants: {\n        crypto_hash_sha512_BYTES: utils.interfaces.crypto_hash_sha512_BYTES,\n        crypto_box_poly1305_AUTHTAGBYTES: utils.interfaces.crypto_box_poly1305_AUTHTAGBYTES,\n        crypto_box_x25519_PUBLICKEYBYTES: utils.interfaces.crypto_box_x25519_PUBLICKEYBYTES,\n        crypto_box_x25519_SECRETKEYBYTES: utils.interfaces.crypto_box_x25519_SECRETKEYBYTES,\n        crypto_box_x25519_NONCEBYTES: utils.interfaces.crypto_box_x25519_NONCEBYTES,\n        crypto_kx_SESSIONKEYBYTES: utils.interfaces.crypto_kx_SESSIONKEYBYTES,\n        crypto_sign_ed25519_BYTES: utils.interfaces.crypto_sign_ed25519_BYTES,\n        crypto_sign_ed25519_SEEDBYTES: utils.interfaces.crypto_sign_ed25519_SEEDBYTES,\n        crypto_sign_ed25519_PUBLICKEYBYTES: utils.interfaces.crypto_sign_ed25519_PUBLICKEYBYTES,\n        crypto_sign_ed25519_SECRETKEYBYTES: utils.interfaces.crypto_sign_ed25519_SECRETKEYBYTES,\n    },\n};\n\nexport { dcrypto as default };\n//# sourceMappingURL=index.mjs.map\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","/**\n * Copyright 2023 db3 network\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport dcrypto from '@deliberative/crypto'\nimport sha3 from 'js-sha3'\n\nexport async function generateKey() {\n    const mnemonic = await dcrypto.generateMnemonic()\n    const keypair = await dcrypto.keyPairFromMnemonic(mnemonic)\n    return [keypair.secretKey, keypair.publicKey]\n}\n\nexport async function getATestStaticKeypair() {\n    const mnemonic =\n        'prefer name genius napkin pig tree twelve blame meat market market soda'\n    const keypair = await dcrypto.keyPairFromMnemonic(mnemonic)\n    return [keypair.secretKey, keypair.publicKey]\n}\n\nexport async function sign(data: Uint8Array, privateKey: Uint8Array) {\n    const signature = await dcrypto.sign(data, privateKey)\n    return signature\n}\n\nexport async function getAddress(publicKey: Uint8Array) {\n    return '0x' + sha3.keccak_256(publicKey.subarray(1)).substring(24)\n}\n","export class DStringList implements DOMStringList {\n\tconstructor() {\n\t\tthis.length = 1;\n\t}\n\tlength: number;\n\t[index: number]: string;\n\tcontains(string: string): boolean {\n\t\treturn true;\n\t}\n\titem() {\n\t\treturn null;\n\t}\n\t*[Symbol.iterator]() {\n\t\treturn \"\";\n\t}\n}","import { DB3Transaction } from \"./DB3Transaction\";\nimport { DStringList } from \"./DStringList\";\n\nexport class DB3ObjectStore implements IDBObjectStore {\n\tconstructor() {\n\t\tthis.name = \"\";\n\t\tthis.autoIncrement = false;\n\t\tthis.indexNames = new DStringList();\n\t\tthis.keyPath = [];\n\t\tthis.transaction = new DB3Transaction();\n\t}\n\ttransaction: IDBTransaction;\n\tname: string;\n\tkeyPath: string | string[];\n\tindexNames: DOMStringList;\n\tautoIncrement: boolean;\n\tadd(value: any, key?: IDBValidKey) {\n\t\treturn new IDBRequest();\n\t}\n\tclear(): IDBRequest<undefined> {\n\t\treturn new IDBRequest();\n\t}\n\tcount(query?: IDBValidKey | IDBKeyRange | undefined): IDBRequest<number> {\n\t\treturn new IDBRequest();\n\t}\n\tcreateIndex(\n\t\tname: string,\n\t\tkeyPath: string | string[],\n\t\toptions?: IDBIndexParameters | undefined,\n\t): IDBIndex;\n\tcreateIndex(\n\t\tname: string,\n\t\tkeyPath: string | Iterable<string>,\n\t\toptions?: IDBIndexParameters | undefined,\n\t): IDBIndex;\n\tcreateIndex(name: unknown, keyPath: unknown, options?: unknown): IDBIndex {\n\t\treturn new IDBIndex();\n\t}\n\tdelete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined> {\n\t\treturn new IDBRequest();\n\t}\n\tdeleteIndex(name: string): void {}\n\tget(query: IDBValidKey | IDBKeyRange): IDBRequest<any> {\n\t\treturn new IDBRequest();\n\t}\n\tgetAll(\n\t\tquery?: IDBValidKey | IDBKeyRange | null | undefined,\n\t\tcount?: number | undefined,\n\t): IDBRequest<any[]> {\n\t\treturn new IDBRequest();\n\t}\n\tgetAllKeys(\n\t\tquery?: IDBValidKey | IDBKeyRange | null | undefined,\n\t\tcount?: number | undefined,\n\t): IDBRequest<IDBValidKey[]> {\n\t\treturn new IDBRequest();\n\t}\n\tgetKey(\n\t\tquery: IDBValidKey | IDBKeyRange,\n\t): IDBRequest<IDBValidKey | undefined> {\n\t\treturn new IDBRequest();\n\t}\n\tindex(name: string): IDBIndex {\n\t\treturn new IDBIndex();\n\t}\n\topenCursor(\n\t\tquery?: IDBValidKey | IDBKeyRange | null | undefined,\n\t\tdirection?: IDBCursorDirection | undefined,\n\t): IDBRequest<IDBCursorWithValue | null> {\n\t\treturn new IDBRequest();\n\t}\n\topenKeyCursor(\n\t\tquery?: IDBValidKey | IDBKeyRange | null | undefined,\n\t\tdirection?: IDBCursorDirection | undefined,\n\t): IDBRequest<IDBCursor | null> {\n\t\treturn new IDBRequest();\n\t}\n\tput(value: any, key?: IDBValidKey | undefined): IDBRequest<IDBValidKey> {\n\t\treturn new IDBRequest();\n\t}\n}","import { DB3Database } from \"./DB3Database\";\nimport { DB3ObjectStore } from \"./DB3ObjectStore\";\nimport { DStringList } from \"./DStringList\";\n\nexport class DB3Transaction implements IDBTransaction {\n\tconstructor() {\n\t\tthis.db = new DB3Database();\n\t\tthis.durability = \"default\";\n\t\tthis.error = null;\n\t\tthis.objectStoreNames = new DStringList();\n\t\tthis.mode = \"readonly\";\n\t}\n\tmode: IDBTransactionMode;\n\treadonly durability: IDBTransactionDurability;\n\treadonly db: IDBDatabase;\n\treadonly error: DOMException | null;\n\treadonly objectStoreNames: DOMStringList;\n\n\tonabort() {}\n\toncomplete() {}\n\tonerror() {}\n\tabort() {}\n\tcommit() {}\n\tobjectStore(name: string) {\n\t\treturn new DB3ObjectStore();\n\t}\n\taddEventListener(\n\t\ttype: unknown,\n\t\tlistener: unknown,\n\t\toptions?: unknown,\n\t): void {}\n\tremoveEventListener(\n\t\ttype: unknown,\n\t\tlistener: unknown,\n\t\toptions?: unknown,\n\t): void {}\n\tdispatchEvent(event: Event): boolean {\n\t\treturn true;\n\t}\n}","import { DB3Transaction } from \"./DB3Transaction\";\nimport { DStringList } from \"./DStringList\";\n\nexport class DB3Database implements IDBDatabase {\n\tconstructor() {\n\t\tthis.name = \"\";\n\t\tthis.objectStoreNames = new DStringList();\n\t\tthis.version = 1;\n\t}\n\tname: string;\n\tobjectStoreNames: DOMStringList;\n\tversion: number;\n\tclose() {}\n\ttransaction(\n\t\tstoreNames: string | string[],\n\t\tmode?: IDBTransactionMode | undefined,\n\t\toptions?: IDBTransactionOptions | undefined,\n\t) {\n\t\treturn new DB3Transaction();\n\t}\n\tonabort() {}\n\tonerror() {}\n\tonclose() {}\n\tonversionchange() {}\n\tcreateObjectStore(\n\t\tname: string,\n\t\toptions?: IDBObjectStoreParameters | undefined,\n\t): any {}\n\tdeleteObjectStore(name: string): void {}\n\taddEventListener(\n\t\ttype: unknown,\n\t\tlistener: unknown,\n\t\toptions?: unknown,\n\t): void {}\n\tremoveEventListener(\n\t\ttype: unknown,\n\t\tlistener: unknown,\n\t\toptions?: unknown,\n\t): void {}\n\tdispatchEvent(event: Event): boolean {\n\t\treturn true;\n\t}\n}","// @ts-nocheck\nimport { DB3Database } from './DB3Database'\nimport { DB3ObjectStore } from './DB3ObjectStore'\nimport { DB3Transaction } from './DB3Transaction'\n\nexport class DB3OpenDBRequest extends EventTarget implements IDBOpenDBRequest {\n    constructor() {\n        super()\n        this.error = null\n        this.readyState = 'done'\n        this.result = new DB3Database()\n        this.source = null\n        this.addEventListener('upgradeneeded', (event) => {\n            this.onupgradeneeded && this.onupgradeneeded(event)\n        })\n        this.addEventListener('success', (event) => {\n            this.onsuccess && this.onsuccess(event)\n        })\n        this.addEventListener('blocked', (event) => {\n            this.onblocked && this.onblocked(event)\n        })\n        this.addEventListener('error', (event) => {\n            this.onerror && this.onerror(event)\n        })\n    }\n    readonly readyState: IDBRequestReadyState\n    readonly result: IDBDatabase\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor\n    readonly transaction: IDBTransaction | null = null\n    readonly error: DOMException | null\n    onblocked: ((event: Event) => void) | null = null\n    onupgradeneeded: ((event: Event) => void) | null = null\n    onsuccess: ((event: Event) => void) | null = null\n    onerror: ((event: Event) => void) | null = null\n}\n","/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if (bitsHigh <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nfunction detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    return ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\nconst BI = detectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('ulong too small');\n                    if (value > BI.MAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & 0x80000000) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null`.\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null, `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    const msg = {};\n    Object.defineProperty(msg, MESSAGE_TYPE, { enumerable: false, value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_base.proto\" (package \"db3_base_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_base.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * @generated from protobuf message db3_base_proto.Units\n */\nexport interface Units {\n    /**\n     * @generated from protobuf field: db3_base_proto.UnitType utype = 1;\n     */\n    utype: UnitType;\n    /**\n     * @generated from protobuf field: int64 amount = 2;\n     */\n    amount: string;\n}\n/**\n * @generated from protobuf message db3_base_proto.Erc20Token\n */\nexport interface Erc20Token {\n    /**\n     * for example USDT\n     *\n     * @generated from protobuf field: string symbal = 1;\n     */\n    symbal: string;\n    /**\n     * for example cent, usdt\n     *\n     * @generated from protobuf field: repeated string units = 2;\n     */\n    units: string[];\n    /**\n     * for example 1, 10 which means 1 usdt = 10 cent\n     *\n     * @generated from protobuf field: repeated uint64 scalar = 3;\n     */\n    scalar: string[];\n}\n/**\n * @generated from protobuf message db3_base_proto.Price\n */\nexport interface Price {\n    /**\n     * @generated from protobuf field: uint64 amount = 1;\n     */\n    amount: string;\n    /**\n     * @generated from protobuf field: string unit = 2;\n     */\n    unit: string;\n    /**\n     * @generated from protobuf field: db3_base_proto.Erc20Token token = 3;\n     */\n    token?: Erc20Token;\n}\n/**\n * @generated from protobuf message db3_base_proto.BroadcastMeta\n */\nexport interface BroadcastMeta {\n    /**\n     * @generated from protobuf field: uint64 nonce = 1;\n     */\n    nonce: string;\n    /**\n     * the chain id of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainId chain_id = 2;\n     */\n    chainId: ChainId;\n    /**\n     * the chain role of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainRole chain_role = 3;\n     */\n    chainRole: ChainRole;\n}\n/**\n * @generated from protobuf enum db3_base_proto.UnitType\n */\nexport enum UnitType {\n    /**\n     * @generated from protobuf enum value: DB3 = 0;\n     */\n    DB3 = 0,\n    /**\n     * 10^6 TAI = 1 DB3\n     *\n     * @generated from protobuf enum value: TAI = 1;\n     */\n    TAI = 1\n}\n/**\n * @generated from protobuf enum db3_base_proto.ChainRole\n */\nexport enum ChainRole {\n    /**\n     * @generated from protobuf enum value: SettlementChain = 0;\n     */\n    SettlementChain = 0,\n    /**\n     * @generated from protobuf enum value: StorageShardChain = 10;\n     */\n    StorageShardChain = 10,\n    /**\n     * @generated from protobuf enum value: DvmComputingChain = 20;\n     */\n    DvmComputingChain = 20\n}\n/**\n * @generated from protobuf enum db3_base_proto.ChainId\n */\nexport enum ChainId {\n    /**\n     * @generated from protobuf enum value: MainNet = 0;\n     */\n    MainNet = 0,\n    /**\n     * @generated from protobuf enum value: TestNet = 10;\n     */\n    TestNet = 10,\n    /**\n     * @generated from protobuf enum value: DevNet = 20;\n     */\n    DevNet = 20\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Units$Type extends MessageType<Units> {\n    constructor() {\n        super(\"db3_base_proto.Units\", [\n            { no: 1, name: \"utype\", kind: \"enum\", T: () => [\"db3_base_proto.UnitType\", UnitType] },\n            { no: 2, name: \"amount\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_base_proto.Units\n */\nexport const Units = new Units$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Erc20Token$Type extends MessageType<Erc20Token> {\n    constructor() {\n        super(\"db3_base_proto.Erc20Token\", [\n            { no: 1, name: \"symbal\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"units\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"scalar\", kind: \"scalar\", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_base_proto.Erc20Token\n */\nexport const Erc20Token = new Erc20Token$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Price$Type extends MessageType<Price> {\n    constructor() {\n        super(\"db3_base_proto.Price\", [\n            { no: 1, name: \"amount\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"unit\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"token\", kind: \"message\", T: () => Erc20Token }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_base_proto.Price\n */\nexport const Price = new Price$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastMeta$Type extends MessageType<BroadcastMeta> {\n    constructor() {\n        super(\"db3_base_proto.BroadcastMeta\", [\n            { no: 1, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"chain_id\", kind: \"enum\", T: () => [\"db3_base_proto.ChainId\", ChainId] },\n            { no: 3, name: \"chain_role\", kind: \"enum\", T: () => [\"db3_base_proto.ChainRole\", ChainRole] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_base_proto.BroadcastMeta\n */\nexport const BroadcastMeta = new BroadcastMeta$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_database.proto\" (package \"db3_database_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_database.proto\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Price } from \"./db3_base\";\n/**\n *\n * the definition of price for query\n *\n *\n * @generated from protobuf message db3_database_proto.QueryPrice\n */\nexport interface QueryPrice {\n    /**\n     * the price\n     *\n     * @generated from protobuf field: db3_base_proto.Price price = 1;\n     */\n    price?: Price;\n    /**\n     * the count of query\n     *\n     * @generated from protobuf field: uint64 query_count = 2;\n     */\n    queryCount: string;\n}\n/**\n *\n * the definition of database\n *\n *\n * @generated from protobuf message db3_database_proto.Database\n */\nexport interface Database {\n    /**\n     * @generated from protobuf field: string name = 1;\n     */\n    name: string;\n    /**\n     * @generated from protobuf field: db3_database_proto.QueryPrice price = 2;\n     */\n    price?: QueryPrice;\n    /**\n     * the time when database was created\n     *\n     * @generated from protobuf field: uint64 ts = 3;\n     */\n    ts: string;\n    /**\n     * @generated from protobuf field: string description = 4;\n     */\n    description: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryPrice$Type extends MessageType<QueryPrice> {\n    constructor() {\n        super(\"db3_database_proto.QueryPrice\", [\n            { no: 1, name: \"price\", kind: \"message\", T: () => Price },\n            { no: 2, name: \"query_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.QueryPrice\n */\nexport const QueryPrice = new QueryPrice$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Database$Type extends MessageType<Database> {\n    constructor() {\n        super(\"db3_database_proto.Database\", [\n            { no: 1, name: \"name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"price\", kind: \"message\", T: () => QueryPrice },\n            { no: 3, name: \"ts\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Database\n */\nexport const Database = new Database$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_mutation.proto\" (package \"db3_mutation_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_mutation.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Units } from \"./db3_base\";\nimport { ChainRole } from \"./db3_base\";\nimport { ChainId } from \"./db3_base\";\nimport { BroadcastMeta } from \"./db3_base\";\nimport { Database } from \"./db3_database\";\n/**\n * @generated from protobuf message db3_mutation_proto.DatabaseRequest\n */\nexport interface DatabaseRequest {\n    /**\n     * @generated from protobuf oneof: body\n     */\n    body: {\n        oneofKind: \"name\";\n        /**\n         * @generated from protobuf field: string name = 1;\n         */\n        name: string;\n    } | {\n        oneofKind: \"database\";\n        /**\n         * @generated from protobuf field: db3_database_proto.Database database = 2;\n         */\n        database: Database;\n    } | {\n        oneofKind: undefined;\n    };\n    /**\n     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 3;\n     */\n    meta?: BroadcastMeta;\n}\n/**\n * @generated from protobuf message db3_mutation_proto.KVPair\n */\nexport interface KVPair {\n    /**\n     * the key of value\n     *\n     * @generated from protobuf field: bytes key = 1;\n     */\n    key: Uint8Array;\n    /**\n     * the value\n     *\n     * @generated from protobuf field: bytes value = 2;\n     */\n    value: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.MutationAction action = 3;\n     */\n    action: MutationAction;\n}\n/**\n * @generated from protobuf message db3_mutation_proto.Mutation\n */\nexport interface Mutation {\n    /**\n     * the namespace of kv pairs\n     *\n     * @generated from protobuf field: bytes ns = 1;\n     */\n    ns: Uint8Array;\n    /**\n     * the all data to be written to db3\n     *\n     * @generated from protobuf field: repeated db3_mutation_proto.KVPair kv_pairs = 2;\n     */\n    kvPairs: KVPair[];\n    /**\n     * the counter of account\n     *\n     * @generated from protobuf field: uint64 nonce = 3;\n     */\n    nonce: string;\n    /**\n     * the chain id of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainId chain_id = 4;\n     */\n    chainId: ChainId;\n    /**\n     * the chain role of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainRole chain_role = 5;\n     */\n    chainRole: ChainRole;\n    /**\n     * @generated from protobuf field: db3_base_proto.Units gas_price = 6;\n     */\n    gasPrice?: Units;\n    /**\n     * the predicted gas\n     *\n     * @generated from protobuf field: uint64 gas = 7;\n     */\n    gas: string;\n}\n/**\n * @generated from protobuf message db3_mutation_proto.WriteRequest\n */\nexport interface WriteRequest {\n    /**\n     * @generated from protobuf field: bytes signature = 1;\n     */\n    signature: Uint8Array;\n    /**\n     * the protobuf binary format\n     *\n     * @generated from protobuf field: bytes payload = 2;\n     */\n    payload: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes public_key = 3;\n     */\n    publicKey: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;\n     */\n    payloadType: PayloadType;\n}\n/**\n * @generated from protobuf enum db3_mutation_proto.MutationAction\n */\nexport enum MutationAction {\n    /**\n     * @generated from protobuf enum value: InsertKv = 0;\n     */\n    InsertKv = 0,\n    /**\n     * @generated from protobuf enum value: DeleteKv = 1;\n     */\n    DeleteKv = 1,\n    /**\n     * @generated from protobuf enum value: Nonce = 2;\n     */\n    Nonce = 2\n}\n/**\n * @generated from protobuf enum db3_mutation_proto.PayloadType\n */\nexport enum PayloadType {\n    /**\n     * @generated from protobuf enum value: MutationPayload = 0;\n     */\n    MutationPayload = 0,\n    /**\n     * @generated from protobuf enum value: QuerySessionPayload = 1;\n     */\n    QuerySessionPayload = 1,\n    /**\n     * @generated from protobuf enum value: DatabasePayload = 2;\n     */\n    DatabasePayload = 2\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass DatabaseRequest$Type extends MessageType<DatabaseRequest> {\n    constructor() {\n        super(\"db3_mutation_proto.DatabaseRequest\", [\n            { no: 1, name: \"name\", kind: \"scalar\", oneof: \"body\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"database\", kind: \"message\", oneof: \"body\", T: () => Database },\n            { no: 3, name: \"meta\", kind: \"message\", T: () => BroadcastMeta }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.DatabaseRequest\n */\nexport const DatabaseRequest = new DatabaseRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass KVPair$Type extends MessageType<KVPair> {\n    constructor() {\n        super(\"db3_mutation_proto.KVPair\", [\n            { no: 1, name: \"key\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"value\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"action\", kind: \"enum\", T: () => [\"db3_mutation_proto.MutationAction\", MutationAction] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.KVPair\n */\nexport const KVPair = new KVPair$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Mutation$Type extends MessageType<Mutation> {\n    constructor() {\n        super(\"db3_mutation_proto.Mutation\", [\n            { no: 1, name: \"ns\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"kv_pairs\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => KVPair },\n            { no: 3, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"chain_id\", kind: \"enum\", T: () => [\"db3_base_proto.ChainId\", ChainId] },\n            { no: 5, name: \"chain_role\", kind: \"enum\", T: () => [\"db3_base_proto.ChainRole\", ChainRole] },\n            { no: 6, name: \"gas_price\", kind: \"message\", T: () => Units },\n            { no: 7, name: \"gas\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.Mutation\n */\nexport const Mutation = new Mutation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass WriteRequest$Type extends MessageType<WriteRequest> {\n    constructor() {\n        super(\"db3_mutation_proto.WriteRequest\", [\n            { no: 1, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"public_key\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"payload_type\", kind: \"enum\", T: () => [\"db3_mutation_proto.PayloadType\", PayloadType] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.WriteRequest\n */\nexport const WriteRequest = new WriteRequest$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_session.proto\" (package \"db3_session_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_mutation.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { ChainRole } from \"./db3_base\";\nimport { ChainId } from \"./db3_base\";\n/**\n * @generated from protobuf message db3_session_proto.QuerySessionInfo\n */\nexport interface QuerySessionInfo {\n    /**\n     * the hex encoded string\n     *\n     * @generated from protobuf field: int32 id = 1;\n     */\n    id: number;\n    /**\n     * @generated from protobuf field: int64 start_time = 2;\n     */\n    startTime: string;\n    /**\n     * @generated from protobuf field: db3_session_proto.SessionStatus status = 3;\n     */\n    status: SessionStatus;\n    /**\n     * @generated from protobuf field: int32 query_count = 4;\n     */\n    queryCount: number;\n}\n/**\n * @generated from protobuf message db3_session_proto.CloseSessionPayload\n */\nexport interface CloseSessionPayload {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo session_info = 1;\n     */\n    sessionInfo?: QuerySessionInfo;\n    /**\n     * @generated from protobuf field: string session_token = 2;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_session_proto.OpenSessionPayload\n */\nexport interface OpenSessionPayload {\n    /**\n     * @generated from protobuf field: string header = 1;\n     */\n    header: string;\n    /**\n     * @generated from protobuf field: int64 start_time = 2;\n     */\n    startTime: string;\n}\n/**\n * @generated from protobuf message db3_session_proto.QuerySession\n */\nexport interface QuerySession {\n    /**\n     * the counter of account\n     *\n     * @generated from protobuf field: uint64 nonce = 1;\n     */\n    nonce: string;\n    /**\n     * the chain id of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainId chain_id = 2;\n     */\n    chainId: ChainId;\n    /**\n     * the chain role of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainRole chain_role = 3;\n     */\n    chainRole: ChainRole;\n    /**\n     * node query session info\n     *\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo node_query_session_info = 4;\n     */\n    nodeQuerySessionInfo?: QuerySessionInfo;\n    /**\n     * client query session info\n     *\n     * @generated from protobuf field: bytes client_query_session = 5;\n     */\n    clientQuerySession: Uint8Array;\n    /**\n     * client signature\n     *\n     * @generated from protobuf field: bytes client_signature = 6;\n     */\n    clientSignature: Uint8Array;\n    /**\n     * client public key\n     *\n     * @generated from protobuf field: bytes client_public_key = 7;\n     */\n    clientPublicKey: Uint8Array;\n}\n/**\n * @generated from protobuf enum db3_session_proto.SessionStatus\n */\nexport enum SessionStatus {\n    /**\n     * @generated from protobuf enum value: Running = 0;\n     */\n    Running = 0,\n    /**\n     * @generated from protobuf enum value: Blocked = 1;\n     */\n    Blocked = 1,\n    /**\n     * @generated from protobuf enum value: Stop = 2;\n     */\n    Stop = 2\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuerySessionInfo$Type extends MessageType<QuerySessionInfo> {\n    constructor() {\n        super(\"db3_session_proto.QuerySessionInfo\", [\n            { no: 1, name: \"id\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 2, name: \"start_time\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ },\n            { no: 3, name: \"status\", kind: \"enum\", T: () => [\"db3_session_proto.SessionStatus\", SessionStatus] },\n            { no: 4, name: \"query_count\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.QuerySessionInfo\n */\nexport const QuerySessionInfo = new QuerySessionInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CloseSessionPayload$Type extends MessageType<CloseSessionPayload> {\n    constructor() {\n        super(\"db3_session_proto.CloseSessionPayload\", [\n            { no: 1, name: \"session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 2, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.CloseSessionPayload\n */\nexport const CloseSessionPayload = new CloseSessionPayload$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionPayload$Type extends MessageType<OpenSessionPayload> {\n    constructor() {\n        super(\"db3_session_proto.OpenSessionPayload\", [\n            { no: 1, name: \"header\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"start_time\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.OpenSessionPayload\n */\nexport const OpenSessionPayload = new OpenSessionPayload$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuerySession$Type extends MessageType<QuerySession> {\n    constructor() {\n        super(\"db3_session_proto.QuerySession\", [\n            { no: 1, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"chain_id\", kind: \"enum\", T: () => [\"db3_base_proto.ChainId\", ChainId] },\n            { no: 3, name: \"chain_role\", kind: \"enum\", T: () => [\"db3_base_proto.ChainRole\", ChainRole] },\n            { no: 4, name: \"node_query_session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 5, name: \"client_query_session\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 6, name: \"client_signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 7, name: \"client_public_key\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.QuerySession\n */\nexport const QuerySession = new QuerySession$Type();\n","import { lowerCamelCase } from \"@protobuf-ts/runtime\";\n/**\n * Turns PartialMethodInfo into MethodInfo.\n */\nexport function normalizeMethodInfo(method, service) {\n    var _a, _b, _c;\n    let m = method;\n    m.service = service;\n    m.localName = (_a = m.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(m.name);\n    // noinspection PointlessBooleanExpressionJS\n    m.serverStreaming = !!m.serverStreaming;\n    // noinspection PointlessBooleanExpressionJS\n    m.clientStreaming = !!m.clientStreaming;\n    m.options = (_b = m.options) !== null && _b !== void 0 ? _b : {};\n    m.idempotency = (_c = m.idempotency) !== null && _c !== void 0 ? _c : undefined;\n    return m;\n}\n/**\n * Read custom method options from a generated service client.\n *\n * @deprecated use readMethodOption()\n */\nexport function readMethodOptions(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readMethodOption(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readServiceOption(service, extensionName, extensionType) {\n    const options = service.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","import { normalizeMethodInfo } from \"./reflection-info\";\nexport class ServiceType {\n    constructor(typeName, methods, options) {\n        this.typeName = typeName;\n        this.methods = methods.map(i => normalizeMethodInfo(i, this));\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n","/**\n * An error that occurred while calling a RPC method.\n */\nexport class RpcError extends Error {\n    constructor(message, code = 'UNKNOWN', meta) {\n        super(message);\n        this.name = 'RpcError';\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.code = code;\n        this.meta = meta !== null && meta !== void 0 ? meta : {};\n    }\n    toString() {\n        const l = [this.name + ': ' + this.message];\n        if (this.code) {\n            l.push('');\n            l.push('Code: ' + this.code);\n        }\n        if (this.serviceName && this.methodName) {\n            l.push('Method: ' + this.serviceName + '/' + this.methodName);\n        }\n        let m = Object.entries(this.meta);\n        if (m.length) {\n            l.push('');\n            l.push('Meta:');\n            for (let [k, v] of m) {\n                l.push(`  ${k}: ${v}`);\n            }\n        }\n        return l.join('\\n');\n    }\n}\n","import { mergeBinaryOptions, mergeJsonOptions } from \"@protobuf-ts/runtime\";\n/**\n * Merges custom RPC options with defaults. Returns a new instance and keeps\n * the \"defaults\" and the \"options\" unmodified.\n *\n * Merges `RpcMetadata` \"meta\", overwriting values from \"defaults\" with\n * values from \"options\". Does not append values to existing entries.\n *\n * Merges \"jsonOptions\", including \"jsonOptions.typeRegistry\", by creating\n * a new array that contains types from \"options.jsonOptions.typeRegistry\"\n * first, then types from \"defaults.jsonOptions.typeRegistry\".\n *\n * Merges \"binaryOptions\".\n *\n * Merges \"interceptors\" by creating a new array that contains interceptors\n * from \"defaults\" first, then interceptors from \"options\".\n *\n * Works with objects that extend `RpcOptions`, but only if the added\n * properties are of type Date, primitive like string, boolean, or Array\n * of primitives. If you have other property types, you have to merge them\n * yourself.\n */\nexport function mergeRpcOptions(defaults, options) {\n    if (!options)\n        return defaults;\n    let o = {};\n    copy(defaults, o);\n    copy(options, o);\n    for (let key of Object.keys(options)) {\n        let val = options[key];\n        switch (key) {\n            case \"jsonOptions\":\n                o.jsonOptions = mergeJsonOptions(defaults.jsonOptions, o.jsonOptions);\n                break;\n            case \"binaryOptions\":\n                o.binaryOptions = mergeBinaryOptions(defaults.binaryOptions, o.binaryOptions);\n                break;\n            case \"meta\":\n                o.meta = {};\n                copy(defaults.meta, o.meta);\n                copy(options.meta, o.meta);\n                break;\n            case \"interceptors\":\n                o.interceptors = defaults.interceptors ? defaults.interceptors.concat(val) : val.concat();\n                break;\n        }\n    }\n    return o;\n}\nfunction copy(a, into) {\n    if (!a)\n        return;\n    let c = into;\n    for (let [k, v] of Object.entries(a)) {\n        if (v instanceof Date)\n            c[k] = new Date(v.getTime());\n        else if (Array.isArray(v))\n            c[k] = v.concat();\n        else\n            c[k] = v;\n    }\n}\n","export var DeferredState;\n(function (DeferredState) {\n    DeferredState[DeferredState[\"PENDING\"] = 0] = \"PENDING\";\n    DeferredState[DeferredState[\"REJECTED\"] = 1] = \"REJECTED\";\n    DeferredState[DeferredState[\"RESOLVED\"] = 2] = \"RESOLVED\";\n})(DeferredState || (DeferredState = {}));\n/**\n * A deferred promise. This is a \"controller\" for a promise, which lets you\n * pass a promise around and reject or resolve it from the outside.\n *\n * Warning: This class is to be used with care. Using it can make code very\n * difficult to read. It is intended for use in library code that exposes\n * promises, not for regular business logic.\n */\nexport class Deferred {\n    /**\n     * @param preventUnhandledRejectionWarning - prevents the warning\n     * \"Unhandled Promise rejection\" by adding a noop rejection handler.\n     * Working with calls returned from the runtime-rpc package in an\n     * async function usually means awaiting one call property after\n     * the other. This means that the \"status\" is not being awaited when\n     * an earlier await for the \"headers\" is rejected. This causes the\n     * \"unhandled promise reject\" warning. A more correct behaviour for\n     * calls might be to become aware whether at least one of the\n     * promises is handled and swallow the rejection warning for the\n     * others.\n     */\n    constructor(preventUnhandledRejectionWarning = true) {\n        this._state = DeferredState.PENDING;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        if (preventUnhandledRejectionWarning) {\n            this._promise.catch(_ => { });\n        }\n    }\n    /**\n     * Get the current state of the promise.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Get the deferred promise.\n     */\n    get promise() {\n        return this._promise;\n    }\n    /**\n     * Resolve the promise. Throws if the promise is already resolved or rejected.\n     */\n    resolve(value) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot resolve ${DeferredState[this.state].toLowerCase()}`);\n        this._resolve(value);\n        this._state = DeferredState.RESOLVED;\n    }\n    /**\n     * Reject the promise. Throws if the promise is already resolved or rejected.\n     */\n    reject(reason) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot reject ${DeferredState[this.state].toLowerCase()}`);\n        this._reject(reason);\n        this._state = DeferredState.REJECTED;\n    }\n    /**\n     * Resolve the promise. Ignore if not pending.\n     */\n    resolvePending(val) {\n        if (this._state === DeferredState.PENDING)\n            this.resolve(val);\n    }\n    /**\n     * Reject the promise. Ignore if not pending.\n     */\n    rejectPending(reason) {\n        if (this._state === DeferredState.PENDING)\n            this.reject(reason);\n    }\n}\n","import { Deferred, DeferredState } from \"./deferred\";\nimport { assert } from \"@protobuf-ts/runtime\";\n/**\n * A `RpcOutputStream` that you control.\n */\nexport class RpcOutputStreamController {\n    constructor() {\n        this._lis = {\n            nxt: [],\n            msg: [],\n            err: [],\n            cmp: [],\n        };\n        this._closed = false;\n    }\n    // --- RpcOutputStream callback API\n    onNext(callback) {\n        return this.addLis(callback, this._lis.nxt);\n    }\n    onMessage(callback) {\n        return this.addLis(callback, this._lis.msg);\n    }\n    onError(callback) {\n        return this.addLis(callback, this._lis.err);\n    }\n    onComplete(callback) {\n        return this.addLis(callback, this._lis.cmp);\n    }\n    addLis(callback, list) {\n        list.push(callback);\n        return () => {\n            let i = list.indexOf(callback);\n            if (i >= 0)\n                list.splice(i, 1);\n        };\n    }\n    // remove all listeners\n    clearLis() {\n        for (let l of Object.values(this._lis))\n            l.splice(0, l.length);\n    }\n    // --- Controller API\n    /**\n     * Is this stream already closed by a completion or error?\n     */\n    get closed() {\n        return this._closed !== false;\n    }\n    /**\n     * Emit message, close with error, or close successfully, but only one\n     * at a time.\n     * Can be used to wrap a stream by using the other stream's `onNext`.\n     */\n    notifyNext(message, error, complete) {\n        assert((message ? 1 : 0) + (error ? 1 : 0) + (complete ? 1 : 0) <= 1, 'only one emission at a time');\n        if (message)\n            this.notifyMessage(message);\n        if (error)\n            this.notifyError(error);\n        if (complete)\n            this.notifyComplete();\n    }\n    /**\n     * Emits a new message. Throws if stream is closed.\n     *\n     * Triggers onNext and onMessage callbacks.\n     */\n    notifyMessage(message) {\n        assert(!this.closed, 'stream is closed');\n        this.pushIt({ value: message, done: false });\n        this._lis.msg.forEach(l => l(message));\n        this._lis.nxt.forEach(l => l(message, undefined, false));\n    }\n    /**\n     * Closes the stream with an error. Throws if stream is closed.\n     *\n     * Triggers onNext and onError callbacks.\n     */\n    notifyError(error) {\n        assert(!this.closed, 'stream is closed');\n        this._closed = error;\n        this.pushIt(error);\n        this._lis.err.forEach(l => l(error));\n        this._lis.nxt.forEach(l => l(undefined, error, false));\n        this.clearLis();\n    }\n    /**\n     * Closes the stream successfully. Throws if stream is closed.\n     *\n     * Triggers onNext and onComplete callbacks.\n     */\n    notifyComplete() {\n        assert(!this.closed, 'stream is closed');\n        this._closed = true;\n        this.pushIt({ value: null, done: true });\n        this._lis.cmp.forEach(l => l());\n        this._lis.nxt.forEach(l => l(undefined, undefined, true));\n        this.clearLis();\n    }\n    /**\n     * Creates an async iterator (that can be used with `for await {...}`)\n     * to consume the stream.\n     *\n     * Some things to note:\n     * - If an error occurs, the `for await` will throw it.\n     * - If an error occurred before the `for await` was started, `for await`\n     *   will re-throw it.\n     * - If the stream is already complete, the `for await` will be empty.\n     * - If your `for await` consumes slower than the stream produces,\n     *   for example because you are relaying messages in a slow operation,\n     *   messages are queued.\n     */\n    [Symbol.asyncIterator]() {\n        // init the iterator state, enabling pushIt()\n        if (!this._itState) {\n            this._itState = { q: [] };\n        }\n        // if we are closed, we are definitely not receiving any more messages.\n        // but we can't let the iterator get stuck. we want to either:\n        // a) finish the new iterator immediately, because we are completed\n        // b) reject the new iterator, because we errored\n        if (this._closed === true)\n            this.pushIt({ value: null, done: true });\n        else if (this._closed !== false)\n            this.pushIt(this._closed);\n        // the async iterator\n        return {\n            next: () => {\n                let state = this._itState;\n                assert(state, \"bad state\"); // if we don't have a state here, code is broken\n                // there should be no pending result.\n                // did the consumer call next() before we resolved our previous result promise?\n                assert(!state.p, \"iterator contract broken\");\n                // did we produce faster than the iterator consumed?\n                // return the oldest result from the queue.\n                let first = state.q.shift();\n                if (first)\n                    return (\"value\" in first) ? Promise.resolve(first) : Promise.reject(first);\n                // we have no result ATM, but we promise one.\n                // as soon as we have a result, we must resolve promise.\n                state.p = new Deferred();\n                return state.p.promise;\n            },\n        };\n    }\n    // \"push\" a new iterator result.\n    // this either resolves a pending promise, or enqueues the result.\n    pushIt(result) {\n        let state = this._itState;\n        if (!state)\n            return;\n        // is the consumer waiting for us?\n        if (state.p) {\n            // yes, consumer is waiting for this promise.\n            const p = state.p;\n            assert(p.state == DeferredState.PENDING, \"iterator contract broken\");\n            // resolve the promise\n            (\"value\" in result) ? p.resolve(result) : p.reject(result);\n            // must cleanup, otherwise iterator.next() would pick it up again.\n            delete state.p;\n        }\n        else {\n            // we are producing faster than the iterator consumes.\n            // push result onto queue.\n            state.q.push(result);\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A unary RPC call. Unary means there is exactly one input message and\n * exactly one output message unless an error occurred.\n */\nexport class UnaryCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * If you are only interested in the final outcome of this call,\n     * you can await it to receive a `FinishedUnaryCall`.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A server streaming RPC call. The client provides exactly one input message\n * but the server may respond with 0, 1, or more messages.\n */\nexport class ServerStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * You should first setup some listeners to the `request` to\n     * see the actual messages the server replied with.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n","// Copyright 2016 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * See [grpc status_code_enum.h](https://github.com/grpc/grpc/blob/a19d8dcfb50caa81cddc25bc1a6afdd7a2f497b7/include/grpcpp/impl/codegen/status_code_enum.h#L24)\n *\n * Copyright 2020 Google LLC\n */\nexport var GrpcStatusCode;\n(function (GrpcStatusCode) {\n    /**\n     * Not an error; returned on success.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled (typically by the caller).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error. An example of where this error may be returned is if a\n     * Status value received from another address space belongs to an error-space\n     * that is not known in this address space. Also errors raised by APIs that\n     * do not return enough error information may be converted to this error.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operations execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * Operation is not implemented or not supported/enabled in this service.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(GrpcStatusCode || (GrpcStatusCode = {}));\n","import { assertNever } from \"@protobuf-ts/runtime\";\n/**\n * Creates a \"stack\" of of all interceptors specified in the given `RpcOptions`.\n * Used by generated client implementations.\n * @internal\n */\nexport function stackIntercept(kind, transport, method, options, input) {\n    var _a, _b, _c, _d;\n    if (kind == \"unary\") {\n        let tail = (mtd, inp, opt) => transport.unary(mtd, inp, opt);\n        for (const curr of ((_a = options.interceptors) !== null && _a !== void 0 ? _a : []).filter(i => i.interceptUnary).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptUnary(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"serverStreaming\") {\n        let tail = (mtd, inp, opt) => transport.serverStreaming(mtd, inp, opt);\n        for (const curr of ((_b = options.interceptors) !== null && _b !== void 0 ? _b : []).filter(i => i.interceptServerStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptServerStreaming(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"clientStreaming\") {\n        let tail = (mtd, opt) => transport.clientStreaming(mtd, opt);\n        for (const curr of ((_c = options.interceptors) !== null && _c !== void 0 ? _c : []).filter(i => i.interceptClientStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptClientStreaming(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    if (kind == \"duplex\") {\n        let tail = (mtd, opt) => transport.duplex(mtd, opt);\n        for (const curr of ((_d = options.interceptors) !== null && _d !== void 0 ? _d : []).filter(i => i.interceptDuplex).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptDuplex(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    assertNever(kind);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackUnaryInterceptors(transport, method, input, options) {\n    return stackIntercept(\"unary\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackServerStreamingInterceptors(transport, method, input, options) {\n    return stackIntercept(\"serverStreaming\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackClientStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"clientStreaming\", transport, method, options);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackDuplexStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"duplex\", transport, method, options);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { base64decode, base64encode } from \"@protobuf-ts/runtime\";\nimport { RpcError } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Create fetch API headers for a grpc-web request.\n */\nexport function createGrpcWebRequestHeader(headers, format, timeout, meta, userAgent) {\n    // add meta as headers\n    if (meta) {\n        for (let [k, v] of Object.entries(meta)) {\n            if (typeof v == \"string\")\n                headers.append(k, v);\n            else\n                for (let i of v)\n                    headers.append(k, i);\n        }\n    }\n    // set standard headers (possibly overwriting meta)\n    headers.set('Content-Type', format === \"text\" ? \"application/grpc-web-text\" : \"application/grpc-web+proto\");\n    if (format == \"text\") {\n        // The client library should indicate to the server via the \"Accept\" header that\n        // the response stream needs to be text encoded e.g. when XHR is used or due to\n        // security policies with XHR\n        headers.set(\"Accept\", \"application/grpc-web-text\");\n    }\n    headers.set('X-Grpc-Web', \"1\");\n    if (userAgent)\n        headers.set(\"X-User-Agent\", userAgent);\n    if (typeof timeout === \"number\") {\n        if (timeout <= 0) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`timeout ${timeout} ms exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${timeout}m`);\n    }\n    else if (timeout) {\n        const deadline = timeout.getTime();\n        const now = Date.now();\n        if (deadline <= now) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`deadline ${timeout} exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${deadline - now}m`);\n    }\n    return headers;\n}\nexport function createGrpcWebRequestBody(message, format) {\n    let body = new Uint8Array(5 + message.length); // we need 5 bytes for frame type + message length\n    body[0] = GrpcWebFrame.DATA; // first byte is frame type\n    // 4 bytes message length\n    for (let msgLen = message.length, i = 4; i > 0; i--) {\n        body[i] = (msgLen % 256);\n        msgLen >>>= 8;\n    }\n    body.set(message, 5); // reset is message\n    return format === \"binary\" ? body : base64encode(body);\n}\nexport function readGrpcWebResponseHeader(headersOrFetchResponse, httpStatus, httpStatusText) {\n    if (arguments.length === 1) {\n        let fetchResponse = headersOrFetchResponse;\n        // Cloudflare Workers throw when the type property of a fetch response\n        // is accessed, so wrap access with try/catch. See:\n        // * https://developers.cloudflare.com/workers/runtime-apis/response/#properties\n        // * https://github.com/cloudflare/miniflare/blob/72f046e/packages/core/src/standards/http.ts#L646\n        let responseType;\n        try {\n            responseType = fetchResponse.type;\n        }\n        catch (_a) { }\n        switch (responseType) {\n            case \"error\":\n            case \"opaque\":\n            case \"opaqueredirect\":\n                // see https://developer.mozilla.org/en-US/docs/Web/API/Response/type\n                throw new RpcError(`fetch response type ${fetchResponse.type}`, GrpcStatusCode[GrpcStatusCode.UNKNOWN]);\n        }\n        return readGrpcWebResponseHeader(fetchHeadersToHttp(fetchResponse.headers), fetchResponse.status, fetchResponse.statusText);\n    }\n    let headers = headersOrFetchResponse, httpOk = httpStatus >= 200 && httpStatus < 300, responseMeta = parseMetadata(headers), [statusCode, statusDetail] = parseStatus(headers);\n    if ((statusCode === undefined || statusCode === GrpcStatusCode.OK) && !httpOk) {\n        statusCode = httpStatusToGrpc(httpStatus);\n        statusDetail = httpStatusText;\n    }\n    return [statusCode, statusDetail, responseMeta];\n}\n/**\n * Parses a grpc status (code and optional text) and meta data from response\n * trailers.\n *\n * Response trailers are expected as a byte array, but are actually just an\n * ASCII string with HTTP headers. Just pass the data of a grpc-web trailer\n * frame.\n */\nexport function readGrpcWebResponseTrailer(data) {\n    let headers = parseTrailer(data), [code, detail] = parseStatus(headers), meta = parseMetadata(headers);\n    return [code !== null && code !== void 0 ? code : GrpcStatusCode.OK, detail, meta];\n}\n/**\n * A grpc-frame type. Can be used to determine type of frame emitted by\n * `readGrpcWebResponseBody()`.\n */\nexport var GrpcWebFrame;\n(function (GrpcWebFrame) {\n    GrpcWebFrame[GrpcWebFrame[\"DATA\"] = 0] = \"DATA\";\n    GrpcWebFrame[GrpcWebFrame[\"TRAILER\"] = 128] = \"TRAILER\";\n})(GrpcWebFrame || (GrpcWebFrame = {}));\n/**\n * Parses a grpc-web response (unary or server streaming) from a fetch API\n * stream.\n *\n * Emits grpc-web frames.\n *\n * The returned promise resolves when the response is complete.\n */\nexport function readGrpcWebResponseBody(stream, contentType, onFrame) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let streamReader, base64queue = \"\", byteQueue = new Uint8Array(0), format = parseFormat(contentType);\n        // allows to read streams from the 'node-fetch' polyfill which uses\n        // node.js ReadableStream instead of the what-wg streams api ReadableStream\n        if (isReadableStream(stream)) {\n            let whatWgReadableStream = stream.getReader();\n            streamReader = {\n                next: () => whatWgReadableStream.read()\n            };\n        }\n        else {\n            streamReader = stream[Symbol.asyncIterator]();\n        }\n        while (true) {\n            let result = yield streamReader.next();\n            if (result.value !== undefined) {\n                if (format === \"text\") {\n                    // the statements below just decode base64 and append to `bytesUnread`\n                    // add incoming base64 to queue\n                    for (let i = 0; i < result.value.length; i++)\n                        base64queue += String.fromCharCode(result.value[i]);\n                    // if the base64 queue is not a multiple of 4,\n                    // we have to wait for more data\n                    let safeLen = base64queue.length - base64queue.length % 4;\n                    if (safeLen === 0)\n                        continue;\n                    // decode safe chunk of base64 and add to byte queue\n                    byteQueue = concatBytes(byteQueue, base64decode(base64queue.substring(0, safeLen)));\n                    base64queue = base64queue.substring(safeLen);\n                }\n                else {\n                    byteQueue = concatBytes(byteQueue, result.value);\n                }\n                // read all fully available data frames\n                while (byteQueue.length >= 5 && byteQueue[0] === GrpcWebFrame.DATA) {\n                    let msgLen = 0;\n                    for (let i = 1; i < 5; i++)\n                        msgLen = (msgLen << 8) + byteQueue[i];\n                    if (byteQueue.length - 5 >= msgLen) {\n                        // we have the entire message\n                        onFrame(GrpcWebFrame.DATA, byteQueue.subarray(5, 5 + msgLen));\n                        byteQueue = byteQueue.subarray(5 + msgLen);\n                    }\n                    else\n                        break; //  wait for more data\n                }\n            }\n            // exit, but emit trailer if exists\n            if (result.done) {\n                if (byteQueue.length === 0)\n                    break;\n                if (byteQueue[0] !== GrpcWebFrame.TRAILER || byteQueue.length < 5)\n                    throw new RpcError(\"premature EOF\", GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                onFrame(GrpcWebFrame.TRAILER, byteQueue.subarray(5));\n                break;\n            }\n        }\n    });\n}\n// internal\nconst isReadableStream = (s) => {\n    return typeof s.getReader == \"function\";\n};\n// internal\nfunction concatBytes(a, b) {\n    let n = new Uint8Array(a.length + b.length);\n    n.set(a);\n    n.set(b, a.length);\n    return n;\n}\n// determines format from response \"content-type\" value.\n// throws if value is unknown or missing.\nfunction parseFormat(contentType) {\n    // > the sender *should* always specify the message format, e.g. +proto, +json\n    //\n    // > the receiver should assume the default is \"+proto\" when the message format is\n    // > missing in Content-Type (as \"application/grpc-web\")\n    //\n    // see https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n    switch (contentType) {\n        case \"application/grpc-web-text\":\n        case \"application/grpc-web-text+proto\":\n            return \"text\";\n        case \"application/grpc-web\":\n        case \"application/grpc-web+proto\":\n            return \"binary\";\n        case undefined:\n        case null:\n            throw new RpcError(\"missing response content type\", GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n        default:\n            throw new RpcError(\"unexpected response content type: \" + contentType, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n    }\n}\n// returns error code on parse failure\nfunction parseStatus(headers) {\n    let code, message;\n    let m = headers['grpc-message'];\n    if (m !== undefined) {\n        if (Array.isArray(m))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web message\"];\n        message = m;\n    }\n    let s = headers['grpc-status'];\n    if (s !== undefined) {\n        if (Array.isArray(s))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n        code = parseInt(s, 10);\n        if (GrpcStatusCode[code] === undefined)\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n    }\n    return [code, message];\n}\n// skips grpc-web headers\nfunction parseMetadata(headers) {\n    let meta = {};\n    for (let [k, v] of Object.entries(headers))\n        switch (k) {\n            case 'grpc-message':\n            case 'grpc-status':\n            case 'content-type':\n                break;\n            default:\n                meta[k] = v;\n        }\n    return meta;\n}\n// parse trailer data (ASCII) to our headers rep\nfunction parseTrailer(trailerData) {\n    let headers = {};\n    for (let chunk of String.fromCharCode.apply(String, trailerData).trim().split(\"\\r\\n\")) {\n        if (chunk == \"\")\n            continue;\n        let [key, ...val] = chunk.split(\":\");\n        const value = val.join(\":\").trim();\n        key = key.trim();\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    }\n    return headers;\n}\n// fetch API to our headers rep\nfunction fetchHeadersToHttp(fetchHeaders) {\n    let headers = {};\n    fetchHeaders.forEach((value, key) => {\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    });\n    return headers;\n}\n// internal\nfunction httpStatusToGrpc(httpStatus) {\n    switch (httpStatus) {\n        case 200:\n            return GrpcStatusCode.OK;\n        case 400:\n            return GrpcStatusCode.INVALID_ARGUMENT;\n        case 401:\n            return GrpcStatusCode.UNAUTHENTICATED;\n        case 403:\n            return GrpcStatusCode.PERMISSION_DENIED;\n        case 404:\n            return GrpcStatusCode.NOT_FOUND;\n        case 409:\n            return GrpcStatusCode.ABORTED;\n        case 412:\n            return GrpcStatusCode.FAILED_PRECONDITION;\n        case 429:\n            return GrpcStatusCode.RESOURCE_EXHAUSTED;\n        case 499:\n            return GrpcStatusCode.CANCELLED;\n        case 500:\n            return GrpcStatusCode.UNKNOWN;\n        case 501:\n            return GrpcStatusCode.UNIMPLEMENTED;\n        case 503:\n            return GrpcStatusCode.UNAVAILABLE;\n        case 504:\n            return GrpcStatusCode.DEADLINE_EXCEEDED;\n        default:\n            return GrpcStatusCode.UNKNOWN;\n    }\n}\n","import { Deferred, RpcError, RpcOutputStreamController, ServerStreamingCall, UnaryCall, mergeRpcOptions } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcWebFrame, createGrpcWebRequestBody, createGrpcWebRequestHeader, readGrpcWebResponseBody, readGrpcWebResponseHeader, readGrpcWebResponseTrailer } from \"./grpc-web-format\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Implements the grpc-web protocol, supporting text format or binary\n * format on the wire. Uses the fetch API to do the HTTP requests.\n *\n * Does not support client streaming or duplex calls because grpc-web\n * does not support them.\n */\nexport class GrpcWebFetchTransport {\n    constructor(defaultOptions) {\n        this.defaultOptions = defaultOptions;\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions(this.defaultOptions, options);\n    }\n    /**\n     * Create an URI for a gRPC web call.\n     *\n     * Takes the `baseUrl` option and appends:\n     * - slash \"/\"\n     * - package name\n     * - dot \".\"\n     * - service name\n     * - slash \"/\"\n     * - method name\n     *\n     * If the service was declared without a package, the package name and dot\n     * are omitted.\n     *\n     * All names are used exactly like declared in .proto.\n     */\n    makeUrl(method, options) {\n        let base = options.baseUrl;\n        if (base.endsWith('/'))\n            base = base.substring(0, base.length - 1);\n        return `${base}/${method.service.typeName}/${method.name}`;\n    }\n    clientStreaming(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Client streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    duplex(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Duplex streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    serverStreaming(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), responseStream = new RpcOutputStreamController(), responseEmptyBody = true, maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        responseStream.notifyMessage(method.O.fromBinary(data, opt.binaryOptions));\n                        responseEmptyBody = false;\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && !responseEmptyBody)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            responseStream.notifyComplete();\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            responseStream.notifyError(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new ServerStreamingCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, responseStream, defStatus.promise, defTrailer.promise);\n    }\n    unary(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), maybeMessage, defMessage = new Deferred(), maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        if (maybeMessage)\n                            throw new RpcError(`unary call received 2nd message`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                        maybeMessage = method.O.fromBinary(data, opt.binaryOptions);\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && maybeMessage)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (!maybeMessage && maybeStatus.code === 'OK')\n                throw new RpcError('expected error status', GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            if (!maybeMessage)\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defMessage.resolve(maybeMessage);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            defMessage.rejectPending(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new UnaryCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, defMessage.promise, defStatus.promise, defTrailer.promise);\n    }\n}\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_account.proto\" (package \"db3_account_proto\", syntax proto3)\n// tslint:disable\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Units } from \"./db3_base\";\n/**\n * @generated from protobuf message db3_account_proto.Account\n */\nexport interface Account {\n    /**\n     * @generated from protobuf field: db3_base_proto.Units total_bills = 1;\n     */\n    totalBills?: Units;\n    /**\n     * @generated from protobuf field: uint64 total_storage_in_bytes = 2;\n     */\n    totalStorageInBytes: string;\n    /**\n     * @generated from protobuf field: uint64 total_mutation_count = 3;\n     */\n    totalMutationCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_query_session_count = 4;\n     */\n    totalQuerySessionCount: string;\n    /**\n     * @generated from protobuf field: db3_base_proto.Units credits = 5;\n     */\n    credits?: Units;\n    /**\n     * @generated from protobuf field: uint64 nonce = 6;\n     */\n    nonce: string;\n    /**\n     * @generated from protobuf field: uint64 bill_next_id = 7;\n     */\n    billNextId: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Account$Type extends MessageType<Account> {\n    constructor() {\n        super(\"db3_account_proto.Account\", [\n            { no: 1, name: \"total_bills\", kind: \"message\", T: () => Units },\n            { no: 2, name: \"total_storage_in_bytes\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"total_mutation_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"total_query_session_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 5, name: \"credits\", kind: \"message\", T: () => Units },\n            { no: 6, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 7, name: \"bill_next_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_account_proto.Account\n */\nexport const Account = new Account$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_bill.proto\" (package \"db3_bill_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_bill.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Units } from \"./db3_base\";\n/**\n * @generated from protobuf message db3_bill_proto.Bill\n */\nexport interface Bill {\n    /**\n     * @generated from protobuf field: db3_base_proto.Units gas_fee = 1;\n     */\n    gasFee?: Units;\n    /**\n     * @generated from protobuf field: uint64 block_height = 2;\n     */\n    blockHeight: string;\n    /**\n     * bill\n     *\n     * @generated from protobuf field: uint64 bill_id = 3;\n     */\n    billId: string;\n    /**\n     * query session or mutation\n     *\n     * @generated from protobuf field: db3_bill_proto.BillType bill_type = 4;\n     */\n    billType: BillType;\n    /**\n     * time on block created\n     *\n     * @generated from protobuf field: uint64 time = 5;\n     */\n    time: string;\n    /**\n     * mutation id or query session id\n     *\n     * @generated from protobuf field: bytes bill_target_id = 6;\n     */\n    billTargetId: Uint8Array;\n    /**\n     * owner address\n     *\n     * @generated from protobuf field: bytes owner = 8;\n     */\n    owner: Uint8Array;\n    /**\n     * service address\n     *\n     * @generated from protobuf field: bytes query_addr = 9;\n     */\n    queryAddr: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_bill_proto.BillQueryRequest\n */\nexport interface BillQueryRequest {\n    /**\n     * @generated from protobuf field: uint64 block_height = 1;\n     */\n    blockHeight: string;\n    /**\n     * @generated from protobuf field: uint64 start_id = 2;\n     */\n    startId: string;\n    /**\n     * @generated from protobuf field: uint64 end_id = 3;\n     */\n    endId: string;\n}\n/**\n * @generated from protobuf enum db3_bill_proto.BillType\n */\nexport enum BillType {\n    /**\n     * @generated from protobuf enum value: BillForMutation = 0;\n     */\n    BillForMutation = 0,\n    /**\n     * @generated from protobuf enum value: BillForQuery = 1;\n     */\n    BillForQuery = 1\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Bill$Type extends MessageType<Bill> {\n    constructor() {\n        super(\"db3_bill_proto.Bill\", [\n            { no: 1, name: \"gas_fee\", kind: \"message\", T: () => Units },\n            { no: 2, name: \"block_height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"bill_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"bill_type\", kind: \"enum\", T: () => [\"db3_bill_proto.BillType\", BillType] },\n            { no: 5, name: \"time\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 6, name: \"bill_target_id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 8, name: \"owner\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 9, name: \"query_addr\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_bill_proto.Bill\n */\nexport const Bill = new Bill$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BillQueryRequest$Type extends MessageType<BillQueryRequest> {\n    constructor() {\n        super(\"db3_bill_proto.BillQueryRequest\", [\n            { no: 1, name: \"block_height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"start_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"end_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_bill_proto.BillQueryRequest\n */\nexport const BillQueryRequest = new BillQueryRequest$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_node.proto\" (package \"db3_node_proto\", syntax proto3)\n// tslint:disable\nimport { Account } from \"./db3_account\";\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Database } from \"./db3_database\";\nimport { QuerySessionInfo } from \"./db3_session\";\nimport { KVPair } from \"./db3_mutation\";\nimport { Bill } from \"./db3_bill\";\n/**\n * @generated from protobuf message db3_node_proto.QueryBillKey\n */\nexport interface QueryBillKey {\n    /**\n     * @generated from protobuf field: uint64 height = 1;\n     */\n    height: string;\n    /**\n     * @generated from protobuf field: uint64 start_id = 2;\n     */\n    startId: string;\n    /**\n     * @generated from protobuf field: uint64 end_id = 3;\n     */\n    endId: string;\n    /**\n     * @generated from protobuf field: string session_token = 4;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.QueryBillRequest\n */\nexport interface QueryBillRequest {\n    /**\n     * @generated from protobuf field: db3_node_proto.QueryBillKey query_bill_key = 1;\n     */\n    queryBillKey?: QueryBillKey;\n}\n/**\n * @generated from protobuf message db3_node_proto.QueryBillResponse\n */\nexport interface QueryBillResponse {\n    /**\n     * @generated from protobuf field: repeated db3_bill_proto.Bill bills = 1;\n     */\n    bills: Bill[];\n}\n/**\n * @generated from protobuf message db3_node_proto.Range\n */\nexport interface Range {\n    /**\n     * @generated from protobuf field: bytes start = 1;\n     */\n    start: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes end = 2;\n     */\n    end: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.RangeKey\n */\nexport interface RangeKey {\n    /**\n     * @generated from protobuf field: bytes ns = 1;\n     */\n    ns: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_node_proto.Range range = 2;\n     */\n    range?: Range;\n    /**\n     * @generated from protobuf field: string session_token = 3;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.BatchGetKey\n */\nexport interface BatchGetKey {\n    /**\n     * @generated from protobuf field: bytes ns = 1;\n     */\n    ns: Uint8Array;\n    /**\n     * @generated from protobuf field: repeated bytes keys = 2;\n     */\n    keys: Uint8Array[];\n    /**\n     * @generated from protobuf field: string session_token = 3;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.RangeValue\n */\nexport interface RangeValue {\n    /**\n     * @generated from protobuf field: repeated db3_mutation_proto.KVPair values = 1;\n     */\n    values: KVPair[];\n    /**\n     * @generated from protobuf field: string session_token = 2;\n     */\n    sessionToken: string;\n    /**\n     * @generated from protobuf field: bytes ns = 3;\n     */\n    ns: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.BatchGetValue\n */\nexport interface BatchGetValue {\n    /**\n     * @generated from protobuf field: repeated db3_mutation_proto.KVPair values = 1;\n     */\n    values: KVPair[];\n    /**\n     * @generated from protobuf field: string session_token = 2;\n     */\n    sessionToken: string;\n    /**\n     * @generated from protobuf field: bytes ns = 3;\n     */\n    ns: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.SessionIdentifier\n */\nexport interface SessionIdentifier {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetKeyRequest\n */\nexport interface GetKeyRequest {\n    /**\n     * @generated from protobuf field: db3_node_proto.BatchGetKey batch_get = 1;\n     */\n    batchGet?: BatchGetKey;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetKeyResponse\n */\nexport interface GetKeyResponse {\n    /**\n     * @generated from protobuf field: db3_node_proto.BatchGetValue batch_get_values = 2;\n     */\n    batchGetValues?: BatchGetValue;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetRangeRequest\n */\nexport interface GetRangeRequest {\n    /**\n     * @generated from protobuf field: db3_node_proto.RangeKey range_keys = 1;\n     */\n    rangeKeys?: RangeKey;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetRangeResponse\n */\nexport interface GetRangeResponse {\n    /**\n     * @generated from protobuf field: db3_node_proto.RangeValue range_value = 1;\n     */\n    rangeValue?: RangeValue;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetAccountRequest\n */\nexport interface GetAccountRequest {\n    /**\n     * the hex encoded string\n     *\n     * @generated from protobuf field: string addr = 1;\n     */\n    addr: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetSessionInfoRequest\n */\nexport interface GetSessionInfoRequest {\n    /**\n     * the hex encoded string\n     *\n     * @generated from protobuf field: db3_node_proto.SessionIdentifier session_identifier = 1;\n     */\n    sessionIdentifier?: SessionIdentifier;\n}\n/**\n * @generated from protobuf message db3_node_proto.OpenSessionRequest\n */\nexport interface OpenSessionRequest {\n    /**\n     * @generated from protobuf field: bytes payload = 1;\n     */\n    payload: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes signature = 2;\n     */\n    signature: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes public_key = 3;\n     */\n    publicKey: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.OpenSessionResponse\n */\nexport interface OpenSessionResponse {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;\n     */\n    querySessionInfo?: QuerySessionInfo;\n    /**\n     * @generated from protobuf field: int64 session_timeout_second = 2;\n     */\n    sessionTimeoutSecond: string;\n    /**\n     * @generated from protobuf field: int32 max_query_limit = 3;\n     */\n    maxQueryLimit: number;\n    /**\n     * @generated from protobuf field: string session_token = 4;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.CloseSessionRequest\n */\nexport interface CloseSessionRequest {\n    /**\n     * @generated from protobuf field: bytes payload = 1;\n     */\n    payload: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes signature = 2;\n     */\n    signature: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes public_key = 3;\n     */\n    publicKey: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.CloseSessionResponse\n */\nexport interface CloseSessionResponse {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;\n     */\n    querySessionInfo?: QuerySessionInfo;\n    /**\n     * @generated from protobuf field: bytes hash = 2;\n     */\n    hash: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetSessionInfoResponse\n */\nexport interface GetSessionInfoResponse {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo session_info = 2;\n     */\n    sessionInfo?: QuerySessionInfo;\n}\n/**\n * @generated from protobuf message db3_node_proto.BroadcastRequest\n */\nexport interface BroadcastRequest {\n    /**\n     * @generated from protobuf field: bytes body = 1;\n     */\n    body: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.BroadcastResponse\n */\nexport interface BroadcastResponse {\n    /**\n     * @generated from protobuf field: bytes hash = 2;\n     */\n    hash: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.ShowDatabaseRequest\n */\nexport interface ShowDatabaseRequest {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n    /**\n     * @generated from protobuf field: repeated string names = 2;\n     */\n    names: string[];\n}\n/**\n * @generated from protobuf message db3_node_proto.ShowDatabaseResponse\n */\nexport interface ShowDatabaseResponse {\n    /**\n     * @generated from protobuf field: repeated db3_database_proto.Database db_list = 1;\n     */\n    dbList: Database[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillKey$Type extends MessageType<QueryBillKey> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillKey\", [\n            { no: 1, name: \"height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"start_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"end_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillKey\n */\nexport const QueryBillKey = new QueryBillKey$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillRequest$Type extends MessageType<QueryBillRequest> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillRequest\", [\n            { no: 1, name: \"query_bill_key\", kind: \"message\", T: () => QueryBillKey }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillRequest\n */\nexport const QueryBillRequest = new QueryBillRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillResponse$Type extends MessageType<QueryBillResponse> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillResponse\", [\n            { no: 1, name: \"bills\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Bill }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillResponse\n */\nexport const QueryBillResponse = new QueryBillResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Range$Type extends MessageType<Range> {\n    constructor() {\n        super(\"db3_node_proto.Range\", [\n            { no: 1, name: \"start\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"end\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.Range\n */\nexport const Range = new Range$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RangeKey$Type extends MessageType<RangeKey> {\n    constructor() {\n        super(\"db3_node_proto.RangeKey\", [\n            { no: 1, name: \"ns\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"range\", kind: \"message\", T: () => Range },\n            { no: 3, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.RangeKey\n */\nexport const RangeKey = new RangeKey$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetKey$Type extends MessageType<BatchGetKey> {\n    constructor() {\n        super(\"db3_node_proto.BatchGetKey\", [\n            { no: 1, name: \"ns\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"keys\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BatchGetKey\n */\nexport const BatchGetKey = new BatchGetKey$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RangeValue$Type extends MessageType<RangeValue> {\n    constructor() {\n        super(\"db3_node_proto.RangeValue\", [\n            { no: 1, name: \"values\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => KVPair },\n            { no: 2, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"ns\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.RangeValue\n */\nexport const RangeValue = new RangeValue$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetValue$Type extends MessageType<BatchGetValue> {\n    constructor() {\n        super(\"db3_node_proto.BatchGetValue\", [\n            { no: 1, name: \"values\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => KVPair },\n            { no: 2, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"ns\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BatchGetValue\n */\nexport const BatchGetValue = new BatchGetValue$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SessionIdentifier$Type extends MessageType<SessionIdentifier> {\n    constructor() {\n        super(\"db3_node_proto.SessionIdentifier\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.SessionIdentifier\n */\nexport const SessionIdentifier = new SessionIdentifier$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetKeyRequest$Type extends MessageType<GetKeyRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetKeyRequest\", [\n            { no: 1, name: \"batch_get\", kind: \"message\", T: () => BatchGetKey }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetKeyRequest\n */\nexport const GetKeyRequest = new GetKeyRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetKeyResponse$Type extends MessageType<GetKeyResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetKeyResponse\", [\n            { no: 2, name: \"batch_get_values\", kind: \"message\", T: () => BatchGetValue }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetKeyResponse\n */\nexport const GetKeyResponse = new GetKeyResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetRangeRequest$Type extends MessageType<GetRangeRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetRangeRequest\", [\n            { no: 1, name: \"range_keys\", kind: \"message\", T: () => RangeKey }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetRangeRequest\n */\nexport const GetRangeRequest = new GetRangeRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetRangeResponse$Type extends MessageType<GetRangeResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetRangeResponse\", [\n            { no: 1, name: \"range_value\", kind: \"message\", T: () => RangeValue }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetRangeResponse\n */\nexport const GetRangeResponse = new GetRangeResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetAccountRequest$Type extends MessageType<GetAccountRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetAccountRequest\", [\n            { no: 1, name: \"addr\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetAccountRequest\n */\nexport const GetAccountRequest = new GetAccountRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetSessionInfoRequest$Type extends MessageType<GetSessionInfoRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetSessionInfoRequest\", [\n            { no: 1, name: \"session_identifier\", kind: \"message\", T: () => SessionIdentifier }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoRequest\n */\nexport const GetSessionInfoRequest = new GetSessionInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionRequest$Type extends MessageType<OpenSessionRequest> {\n    constructor() {\n        super(\"db3_node_proto.OpenSessionRequest\", [\n            { no: 1, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"public_key\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.OpenSessionRequest\n */\nexport const OpenSessionRequest = new OpenSessionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionResponse$Type extends MessageType<OpenSessionResponse> {\n    constructor() {\n        super(\"db3_node_proto.OpenSessionResponse\", [\n            { no: 1, name: \"query_session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 2, name: \"session_timeout_second\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ },\n            { no: 3, name: \"max_query_limit\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 4, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.OpenSessionResponse\n */\nexport const OpenSessionResponse = new OpenSessionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CloseSessionRequest$Type extends MessageType<CloseSessionRequest> {\n    constructor() {\n        super(\"db3_node_proto.CloseSessionRequest\", [\n            { no: 1, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"public_key\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.CloseSessionRequest\n */\nexport const CloseSessionRequest = new CloseSessionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CloseSessionResponse$Type extends MessageType<CloseSessionResponse> {\n    constructor() {\n        super(\"db3_node_proto.CloseSessionResponse\", [\n            { no: 1, name: \"query_session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 2, name: \"hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.CloseSessionResponse\n */\nexport const CloseSessionResponse = new CloseSessionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetSessionInfoResponse$Type extends MessageType<GetSessionInfoResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetSessionInfoResponse\", [\n            { no: 2, name: \"session_info\", kind: \"message\", T: () => QuerySessionInfo }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoResponse\n */\nexport const GetSessionInfoResponse = new GetSessionInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastRequest$Type extends MessageType<BroadcastRequest> {\n    constructor() {\n        super(\"db3_node_proto.BroadcastRequest\", [\n            { no: 1, name: \"body\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BroadcastRequest\n */\nexport const BroadcastRequest = new BroadcastRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastResponse$Type extends MessageType<BroadcastResponse> {\n    constructor() {\n        super(\"db3_node_proto.BroadcastResponse\", [\n            { no: 2, name: \"hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BroadcastResponse\n */\nexport const BroadcastResponse = new BroadcastResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ShowDatabaseRequest$Type extends MessageType<ShowDatabaseRequest> {\n    constructor() {\n        super(\"db3_node_proto.ShowDatabaseRequest\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"names\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseRequest\n */\nexport const ShowDatabaseRequest = new ShowDatabaseRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ShowDatabaseResponse$Type extends MessageType<ShowDatabaseResponse> {\n    constructor() {\n        super(\"db3_node_proto.ShowDatabaseResponse\", [\n            { no: 1, name: \"db_list\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Database }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseResponse\n */\nexport const ShowDatabaseResponse = new ShowDatabaseResponse$Type();\n/**\n * @generated ServiceType for protobuf service db3_node_proto.StorageNode\n */\nexport const StorageNode = new ServiceType(\"db3_node_proto.StorageNode\", [\n    { name: \"QueryBill\", options: {}, I: QueryBillRequest, O: QueryBillResponse },\n    { name: \"GetKey\", options: {}, I: GetKeyRequest, O: GetKeyResponse },\n    { name: \"GetRange\", options: {}, I: GetRangeRequest, O: GetRangeResponse },\n    { name: \"OpenQuerySession\", options: {}, I: OpenSessionRequest, O: OpenSessionResponse },\n    { name: \"CloseQuerySession\", options: {}, I: CloseSessionRequest, O: CloseSessionResponse },\n    { name: \"GetAccount\", options: {}, I: GetAccountRequest, O: Account },\n    { name: \"GetSessionInfo\", options: {}, I: GetSessionInfoRequest, O: GetSessionInfoResponse },\n    { name: \"Broadcast\", options: {}, I: BroadcastRequest, O: BroadcastResponse },\n    { name: \"ShowDatabase\", options: {}, I: ShowDatabaseRequest, O: ShowDatabaseResponse }\n]);\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_node.proto\" (package \"db3_node_proto\", syntax proto3)\n// tslint:disable\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { StorageNode } from \"./db3_node\";\nimport type { ShowDatabaseResponse } from \"./db3_node\";\nimport type { ShowDatabaseRequest } from \"./db3_node\";\nimport type { BroadcastResponse } from \"./db3_node\";\nimport type { BroadcastRequest } from \"./db3_node\";\nimport type { GetSessionInfoResponse } from \"./db3_node\";\nimport type { GetSessionInfoRequest } from \"./db3_node\";\nimport type { Account } from \"./db3_account\";\nimport type { GetAccountRequest } from \"./db3_node\";\nimport type { CloseSessionResponse } from \"./db3_node\";\nimport type { CloseSessionRequest } from \"./db3_node\";\nimport type { OpenSessionResponse } from \"./db3_node\";\nimport type { OpenSessionRequest } from \"./db3_node\";\nimport type { GetRangeResponse } from \"./db3_node\";\nimport type { GetRangeRequest } from \"./db3_node\";\nimport type { GetKeyResponse } from \"./db3_node\";\nimport type { GetKeyRequest } from \"./db3_node\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { QueryBillResponse } from \"./db3_node\";\nimport type { QueryBillRequest } from \"./db3_node\";\nimport type { UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * @generated from protobuf service db3_node_proto.StorageNode\n */\nexport interface IStorageNodeClient {\n    /**\n     * method for querying bills by height\n     *\n     * @generated from protobuf rpc: QueryBill(db3_node_proto.QueryBillRequest) returns (db3_node_proto.QueryBillResponse);\n     */\n    queryBill(input: QueryBillRequest, options?: RpcOptions): UnaryCall<QueryBillRequest, QueryBillResponse>;\n    /**\n     * method for querying kv data\n     *\n     * @generated from protobuf rpc: GetKey(db3_node_proto.GetKeyRequest) returns (db3_node_proto.GetKeyResponse);\n     */\n    getKey(input: GetKeyRequest, options?: RpcOptions): UnaryCall<GetKeyRequest, GetKeyResponse>;\n    /**\n     * @generated from protobuf rpc: GetRange(db3_node_proto.GetRangeRequest) returns (db3_node_proto.GetRangeResponse);\n     */\n    getRange(input: GetRangeRequest, options?: RpcOptions): UnaryCall<GetRangeRequest, GetRangeResponse>;\n    /**\n     * method for open query session\n     *\n     * @generated from protobuf rpc: OpenQuerySession(db3_node_proto.OpenSessionRequest) returns (db3_node_proto.OpenSessionResponse);\n     */\n    openQuerySession(input: OpenSessionRequest, options?: RpcOptions): UnaryCall<OpenSessionRequest, OpenSessionResponse>;\n    /**\n     * method for close query session\n     *\n     * @generated from protobuf rpc: CloseQuerySession(db3_node_proto.CloseSessionRequest) returns (db3_node_proto.CloseSessionResponse);\n     */\n    closeQuerySession(input: CloseSessionRequest, options?: RpcOptions): UnaryCall<CloseSessionRequest, CloseSessionResponse>;\n    /**\n     * method for querying account\n     *\n     * @generated from protobuf rpc: GetAccount(db3_node_proto.GetAccountRequest) returns (db3_account_proto.Account);\n     */\n    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, Account>;\n    /**\n     * @generated from protobuf rpc: GetSessionInfo(db3_node_proto.GetSessionInfoRequest) returns (db3_node_proto.GetSessionInfoResponse);\n     */\n    getSessionInfo(input: GetSessionInfoRequest, options?: RpcOptions): UnaryCall<GetSessionInfoRequest, GetSessionInfoResponse>;\n    /**\n     * method for broadcast request\n     *\n     * @generated from protobuf rpc: Broadcast(db3_node_proto.BroadcastRequest) returns (db3_node_proto.BroadcastResponse);\n     */\n    broadcast(input: BroadcastRequest, options?: RpcOptions): UnaryCall<BroadcastRequest, BroadcastResponse>;\n    /**\n     * method for show database\n     *\n     * @generated from protobuf rpc: ShowDatabase(db3_node_proto.ShowDatabaseRequest) returns (db3_node_proto.ShowDatabaseResponse);\n     */\n    showDatabase(input: ShowDatabaseRequest, options?: RpcOptions): UnaryCall<ShowDatabaseRequest, ShowDatabaseResponse>;\n}\n/**\n * @generated from protobuf service db3_node_proto.StorageNode\n */\nexport class StorageNodeClient implements IStorageNodeClient, ServiceInfo {\n    typeName = StorageNode.typeName;\n    methods = StorageNode.methods;\n    options = StorageNode.options;\n    constructor(private readonly _transport: RpcTransport) {\n    }\n    /**\n     * method for querying bills by height\n     *\n     * @generated from protobuf rpc: QueryBill(db3_node_proto.QueryBillRequest) returns (db3_node_proto.QueryBillResponse);\n     */\n    queryBill(input: QueryBillRequest, options?: RpcOptions): UnaryCall<QueryBillRequest, QueryBillResponse> {\n        const method = this.methods[0], opt = this._transport.mergeOptions(options);\n        return stackIntercept<QueryBillRequest, QueryBillResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for querying kv data\n     *\n     * @generated from protobuf rpc: GetKey(db3_node_proto.GetKeyRequest) returns (db3_node_proto.GetKeyResponse);\n     */\n    getKey(input: GetKeyRequest, options?: RpcOptions): UnaryCall<GetKeyRequest, GetKeyResponse> {\n        const method = this.methods[1], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetKeyRequest, GetKeyResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * @generated from protobuf rpc: GetRange(db3_node_proto.GetRangeRequest) returns (db3_node_proto.GetRangeResponse);\n     */\n    getRange(input: GetRangeRequest, options?: RpcOptions): UnaryCall<GetRangeRequest, GetRangeResponse> {\n        const method = this.methods[2], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetRangeRequest, GetRangeResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for open query session\n     *\n     * @generated from protobuf rpc: OpenQuerySession(db3_node_proto.OpenSessionRequest) returns (db3_node_proto.OpenSessionResponse);\n     */\n    openQuerySession(input: OpenSessionRequest, options?: RpcOptions): UnaryCall<OpenSessionRequest, OpenSessionResponse> {\n        const method = this.methods[3], opt = this._transport.mergeOptions(options);\n        return stackIntercept<OpenSessionRequest, OpenSessionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for close query session\n     *\n     * @generated from protobuf rpc: CloseQuerySession(db3_node_proto.CloseSessionRequest) returns (db3_node_proto.CloseSessionResponse);\n     */\n    closeQuerySession(input: CloseSessionRequest, options?: RpcOptions): UnaryCall<CloseSessionRequest, CloseSessionResponse> {\n        const method = this.methods[4], opt = this._transport.mergeOptions(options);\n        return stackIntercept<CloseSessionRequest, CloseSessionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for querying account\n     *\n     * @generated from protobuf rpc: GetAccount(db3_node_proto.GetAccountRequest) returns (db3_account_proto.Account);\n     */\n    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, Account> {\n        const method = this.methods[5], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetAccountRequest, Account>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * @generated from protobuf rpc: GetSessionInfo(db3_node_proto.GetSessionInfoRequest) returns (db3_node_proto.GetSessionInfoResponse);\n     */\n    getSessionInfo(input: GetSessionInfoRequest, options?: RpcOptions): UnaryCall<GetSessionInfoRequest, GetSessionInfoResponse> {\n        const method = this.methods[6], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetSessionInfoRequest, GetSessionInfoResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for broadcast request\n     *\n     * @generated from protobuf rpc: Broadcast(db3_node_proto.BroadcastRequest) returns (db3_node_proto.BroadcastResponse);\n     */\n    broadcast(input: BroadcastRequest, options?: RpcOptions): UnaryCall<BroadcastRequest, BroadcastResponse> {\n        const method = this.methods[7], opt = this._transport.mergeOptions(options);\n        return stackIntercept<BroadcastRequest, BroadcastResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for show database\n     *\n     * @generated from protobuf rpc: ShowDatabase(db3_node_proto.ShowDatabaseRequest) returns (db3_node_proto.ShowDatabaseResponse);\n     */\n    showDatabase(input: ShowDatabaseRequest, options?: RpcOptions): UnaryCall<ShowDatabaseRequest, ShowDatabaseResponse> {\n        const method = this.methods[8], opt = this._transport.mergeOptions(options);\n        return stackIntercept<ShowDatabaseRequest, ShowDatabaseResponse>(\"unary\", this._transport, method, opt, input);\n    }\n}\n","/**\n * Copyright 2023 db3 network\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// @ts-nocheck\n// TODO: fix typescript errors\nimport {\n    WriteRequest,\n    PayloadType,\n    KVPair,\n    Mutation,\n    MutationAction,\n    DatabaseRequest,\n} from '../pkg/db3_mutation'\nimport { Erc20Token, Price } from '../pkg/db3_base'\nimport { ChainId, ChainRole } from '../pkg/db3_base'\nimport {\n    GetRangeRequest,\n    RangeKey,\n    Range,\n    CloseSessionRequest,\n    BatchGetKey,\n    GetKeyRequest,\n    BroadcastRequest,\n    ShowDatabaseRequest,\n    OpenSessionRequest,\n    GetAccountRequest,\n} from '../pkg/db3_node'\nimport { QueryPrice, Database } from '../pkg/db3_database'\nimport {\n    CloseSessionPayload,\n    QuerySessionInfo,\n    OpenSessionPayload,\n} from '../pkg/db3_session'\nimport {\n    GrpcWebFetchTransport,\n    GrpcWebOptions,\n} from '@protobuf-ts/grpcweb-transport'\nimport { StorageNodeClient } from '../pkg/db3_node.client'\nimport * as jspb from 'google-protobuf'\n\nexport interface KvMutation {\n    ns: string\n    gasLimit: number\n    data: Record<string, any>\n}\n\nexport interface DbSimpleDesc {\n    name: string\n    desc: string\n    erc20Token: string\n    price: number\n    queryCount: number\n}\n\nexport interface BatchGetKeyRequest {\n    ns: string\n    keyList: string[] | Uint8Array[]\n}\n\nexport interface QuerySession {\n    sessionInfo: QuerySessionInfo\n    sessionToken: string\n}\n\nexport interface DB3_Options {\n    sign(target: Uint8Array): Promise<[Uint8Array, Uint8Array]>\n    nonce(): number\n}\n\nfunction encodeUint8Array(text: string) {\n    return new TextEncoder('utf-8').encode(text)\n}\n\nfunction uint8ToBase64(arr: Uint8Array) {\n    return btoa(\n        Array(arr.length)\n            .fill('')\n            .map((_, i) => String.fromCharCode(arr[i]))\n            .join('')\n    )\n}\n\nexport class DB3 {\n    private client: StorageNodeClient\n    public sessionToken?: string\n    private querySessionInfo?: QuerySessionInfo\n    constructor(node: string, options: DB3_Options) {\n        const goptions: GrpcWebOptions = {\n            baseUrl: node,\n            // simple example for how to add auth headers to each request\n            // see `RpcInterceptor` for documentation\n            interceptors: [],\n            // you can set global request headers here\n            meta: {},\n        }\n        const transport = new GrpcWebFetchTransport(goptions)\n        this.client = new StorageNodeClient(transport)\n        if (window.db3Js) {\n            this.sign = async function (data: Uint8Array) {\n                const _sing = await options.sign()\n                return await _sing(data)\n            }\n        } else {\n            this.sign = options.sign\n        }\n        this.nonce = options?.nonce\n    }\n\n    async createSimpleDb(desc: DbSimpleDesc) {\n        const token: Erc20Token = {\n            symbal: desc.erc20Token,\n            units: [desc.erc20Token],\n            scalar: ['1'],\n        }\n        const priceProto: Price = {\n            amount: desc.price,\n            unit: desc.erc20Token,\n            token: token,\n        }\n        const queryPrice: QueryPrice = {\n            price: priceProto,\n            queryCount: desc.queryCount,\n        }\n        const dbProto: Database = {\n            name: desc.name,\n            price: queryPrice,\n            ts: Date.now(),\n            description: desc.desc,\n        }\n        return await this.createDb(dbProto)\n    }\n\n    async createDb(db: Database) {\n        const databaseRequest: DatabaseRequest = {\n            body: {\n                oneofKind: 'database',\n                database: db,\n            },\n        }\n        const mbuffer = DatabaseRequest.toBinary(databaseRequest)\n\n        const [signature, public_key] = await this.sign(mbuffer)\n        const writeRequest: WriteRequest = {\n            payload: mbuffer,\n            signature: signature,\n            publicKey: public_key,\n            payloadType: PayloadType.DatabasePayload,\n        }\n\n        const broadcastRequest: BroadcastRequest = {\n            body: WriteRequest.toBinary(writeRequest),\n        }\n        const { response } = await this.client.broadcast(broadcastRequest)\n        return uint8ToBase64(response.hash)\n    }\n\n    async getDatabases() {\n        const token = await this.keepSession(this.sign)\n        const request: ShowDatabaseRequest = {\n            sessionToken: token,\n            names: [],\n        }\n        const { response } = await this.client.showDatabase(request)\n        const count = this.querySessionInfo!.queryCount + 1\n        this.querySessionInfo!.queryCount = count\n        return response\n    }\n\n    async submitRawMutation(\n        ns: string,\n        kv_pairs: KVPair[],\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>,\n        nonce?: number\n    ) {\n        const mutation: Mutation = {\n            ns: encodeUint8Array(ns),\n            kvPairs: kv_pairs,\n            nonce: Date.now(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n            gas_price: null,\n            gas: '100',\n        }\n        const mbuffer = Mutation.toBinary(mutation)\n        const [signature, public_key] = await sign(mbuffer)\n        const writeRequest: WriteRequest = {\n            payload: mbuffer,\n            signature: signature,\n            publicKey: public_key,\n            payloadType: PayloadType.MutationPayload,\n        }\n        const broadcastRequest: BroadcastRequest = {\n            body: WriteRequest.toBinary(writeRequest),\n        }\n        const { response } = await this.client.broadcast(broadcastRequest)\n        const id = uint8ToBase64(response.hash)\n        return id\n    }\n\n    async submitMutaition(\n        mutation: KvMutation,\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>\n    ) {\n        const kvPairsList: KVPair[] = []\n        Object.keys(mutation.data).forEach((key: string) => {\n            const kvPair: KVPair = {\n                key: encodeUint8Array(key),\n                value: encodeUint8Array(mutation.data[key]),\n                action: MutationAction.InsertKv,\n            }\n            kvPairsList.push(kvPair)\n        })\n        return await this.submitRawMutation(mutation.ns, kvPairsList, sign)\n    }\n\n    async keepSession(\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>\n    ) {\n        if (!this.querySessionInfo) {\n            // try to open session\n            await this.openQuerySession(sign)\n        }\n        if (this.querySessionInfo!.queryCount > 1000) {\n            await this.closeQuerySession(sign)\n            await this.openQuerySession(sign)\n        }\n        return this.sessionToken\n    }\n\n    async openQuerySession(\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>\n    ) {\n        if (this.querySessionInfo) {\n            return {}\n        }\n        let header = ''\n        if (typeof window === 'undefined') {\n            header =\n                new Date().getTime() +\n                '' +\n                '_Header_' +\n                Math.floor(Math.random() * 1000)\n        } else {\n            header = window.crypto.getRandomValues(new Uint8Array(32))\n        }\n        const payload: OpenSessionPayload = {\n            header: header.toString(),\n            startTime: Math.floor(Date.now() / 1000),\n        }\n        const payloadU8 = OpenSessionPayload.toBinary(payload)\n        const [signature, public_key] = await sign(payloadU8)\n        const sessionRequest: OpenSessionRequest = {\n            payload: payloadU8,\n            signature: signature,\n            publicKey: public_key,\n        }\n        const { response } = await this.client.openQuerySession(sessionRequest)\n        this.sessionToken = response.sessionToken\n        this.querySessionInfo = response.querySessionInfo\n        return response\n    }\n\n    async getAccount(address: string) {\n        const getAccountRequest: GetAccountRequest = {\n            addr: address,\n        }\n        const { response } = await this.client.getAccount(getAccountRequest)\n        return response\n    }\n\n    async getKey(batchGetRequest: BatchGetKeyRequest) {\n        if (!this.sessionToken) {\n            throw new Error('SessionToken is not defined')\n        }\n\n        const keys: Uint8Array[] = []\n        batchGetRequest.keyList.forEach((key: string | Uint8Array) => {\n            if (typeof key === 'string') {\n                keys.push(encodeUint8Array(key))\n            } else {\n                keys.push(key)\n            }\n        })\n\n        const batchGetKey: BatchGetKey = {\n            ns: encodeUint8Array(batchGetRequest.ns),\n            keys: keys,\n            sessionToken: this.sessionToken,\n        }\n\n        const getKeyRequest: GetKeyRequest = {\n            batchGet: batchGetKey,\n        }\n\n        const { response } = await this.client.getKey(getKeyRequest)\n        const count = this.querySessionInfo!.queryCount + 1\n        this.querySessionInfo!.queryCount = count\n        return response\n    }\n\n    async closeQuerySession(\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>\n    ) {\n        if (!this.sessionToken) {\n            throw new Error('SessionToken is not defined')\n        }\n        const payload: CloseSessionPayload = {\n            sessionInfo: this.querySessionInfo,\n            sessionToken: this.sessionToken,\n        }\n\n        const payloadU8 = CloseSessionPayload.toBinary(payload)\n        const [signature, public_key] = await sign(payloadU8)\n        const closeQuerySessionRequest: CloseSessionRequest = {\n            payload: payloadU8,\n            signature: signature,\n            publicKey: public_key,\n        }\n\n        const { response } = await this.client.closeQuerySession(\n            closeQuerySessionRequest\n        )\n        this.querySessionInfo = undefined\n        this.sessionToken = undefined\n        return response\n    }\n\n    async getRange(ns: string, startKey: Uint8Array, endKey: Uint8Array) {\n        if (!this.sessionToken) {\n            throw new Error('SessionToken is not defined')\n        }\n        const range: Range = {\n            start: startKey,\n            end: endKey,\n        }\n        const rangeKeys: RangeKey = {\n            ns: encodeUint8Array(ns),\n            range: range,\n            sessionToken: this.sessionToken,\n        }\n\n        const rangeRequest: GetRangeRequest = {\n            rangeKeys: rangeKeys,\n        }\n\n        const { response } = await this.client.getRange(rangeRequest)\n        const count = this.querySessionInfo!.queryCount + 1\n        this.querySessionInfo!.queryCount = count\n        return response\n    }\n\n    async deleteKey(\n        ns: string,\n        key: string | Uint8Array,\n        sign: (target: Uint8Array) => Promise<[Uint8Array, Uint8Array]>\n    ) {\n        const kvPairsList: KVPair[] = []\n        if (typeof key === 'string') {\n            const kv_pair: KVPair = {\n                action: MutationAction.DeleteKv,\n                key: encodeUint8Array(key),\n                value: new Uint8Array(0),\n            }\n            kvPairsList.push(kv_pair)\n        } else {\n            const kv_pair: KVPair = {\n                action: MutationAction.DeleteKv,\n                key: key,\n                value: new Uint8Array(0),\n            }\n            kvPairsList.push(kv_pair)\n        }\n        const id = await this.submitRawMutation(ns, kvPairsList, sign)\n        return id\n    }\n}\n","// @ts-nocheck\nimport { DB3OpenDBRequest } from './DB3OpenDBRequest'\nimport { DB3, DbSimpleDesc } from './db3'\n\ninterface IDBFactoryOptions {\n    node: string\n    sign(target: Uint8Array): Promise<[Uint8Array, Uint8Array]>\n    nonce(): number\n}\nexport class DB3Factory implements IDBFactory {\n    constructor(options: IDBFactoryOptions) {\n        const { node, sign, nonce } = options\n        this.db3 = new DB3(node, {\n            sign,\n            nonce,\n        })\n    }\n    private db3: DB3\n    private databaseMap: Record<string, IDBOpenDBRequest> = {}\n    open(name: string, desc: DbSimpleDesc): IDBOpenDBRequest {\n        if (this.databaseMap[name]) {\n            return this.databaseMap[name]\n        }\n        const request = new DB3OpenDBRequest()\n        this.db3\n            .createSimpleDb({ name, ...desc })\n            .then(() => {\n                request.dispatchEvent(new Event('upgradeneeded'))\n                request.dispatchEvent(new Event('success'))\n            })\n            .catch((error) => {\n                console.error(error)\n                request.dispatchEvent(new Event('error'))\n            })\n\n        return request\n    }\n    async databases(): Promise<IDBDatabaseInfo[]> {\n        const { dbList } = await this.db3.getDatabases()\n        return dbList\n    }\n    deleteDatabase(name: string): IDBOpenDBRequest {\n        return new DB3OpenDBRequest()\n    }\n    cmp(first: any, second: any): number {\n        return 1\n    }\n}\n"],"names":["memoryLenToPages","memoryLen","minPages","maxPages","pageSize","ceil","Math","Error","crypto_hash_sha512_BYTES","Uint8Array","BYTES_PER_ELEMENT","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_box_poly1305_AUTHTAGBYTES","crypto_box_x25519_PUBLICKEYBYTES","crypto_box_x25519_SECRETKEYBYTES","crypto_box_x25519_NONCEBYTES","crypto_kx_SESSIONKEYBYTES","crypto_sign_ed25519_BYTES","crypto_sign_ed25519_SEEDBYTES","crypto_sign_ed25519_PUBLICKEYBYTES","crypto_sign_ed25519_SECRETKEYBYTES","crypto_pwhash_argon2id_SALTBYTES","getEncryptedLen","dataLen","getDecryptedLen","encryptedLen","getForwardSecretBoxEncryptedLen","getForwardSecretBoxDecryptedLen","interfaces","newKeyPairMemory","pages","WebAssembly","Memory","initial","maximum","keyPairFromSeedMemory","keyPairFromSecretKeyMemory","signMemory","messageLen","verifyMemory","encryptMemory$1","additionalDataLen","sealedBoxLen","decryptMemory$1","decryptedLen","memory$4","encryptMemory","decryptMemory","dcryptoMethodsModule$1","exports","module","dcryptoMethodsModule","_scriptDir","document","currentScript","src","undefined","__filename","Module","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","scriptDirectory","read_","readAsync","readBinary","locateFile","path","logExceptionOnExit","e","ExitStatus","err","fs","require$$0","nodePath","require$$1","dirname","__dirname","filename","binary","ret","tryParseAsDataURI","toString","isFileURI","URL","normalize","readFileSync","buffer","onload","onerror","readFile","data","length","replace","slice","keepRuntimeAlive","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","intArrayToString","responseType","response","console","log","bind","warn","STACK_ALIGN","dynamicLibraries","wasmBinary","noExitRuntime","wasmMemory","abort","ABORT","EXITSTATUS","UTF8Decoder","TextDecoder","HEAP8","HEAPU8","HEAP64","HEAPF64","HEAP_DATA_VIEW","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","lengthBytesUTF8","len","c","updateGlobalBufferAndViews","buf","DataView","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","INITIAL_MEMORY","byteLength","wasmTable","Table","element","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","__RELOC_FUNCS__","runtimeInitialized","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","RuntimeError","dataURIPrefix","wasmBinaryFile","isDataURI","startsWith","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","env","asmLibraryArg","wasi_snapshot_preview1","Proxy","GOTHandler","receiveInstance","instance","relocateExports","metadata","getDylinkMetadata","neededDynlibs","concat","mergeLibSymbols","push","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","ASM_CONSTS","getRandomValue","window_","crypto_","crypto","msCrypto","randomValuesStandard","getRandomValues","require","randomValueNodeJS","this","name","message","GOT","CurrentModuleWeakSymbols","Set","get","obj","symName","rtn","Global","value","mutable","has","required","LE_HEAP_LOAD_I32","byteOffset","getInt32","LE_HEAP_LOAD_U32","getUint32","LE_HEAP_STORE_I32","setInt32","LE_HEAP_STORE_U32","setUint32","callbacks","offset","end","getLEB","mul","byte","getString","failIf","condition","dylinkSection","customSections","int32View","section_size","customSection","tlsExports","weakImports","memorySize","memoryAlign","tableSize","tableAlign","neededDynlibsCount","libname","subsectionType","subsectionSize","count","symname","add","array","chr","join","asmjsMangle","x","includes","libName","sym","hasOwnProperty","module_sym","LDSO","loadedLibsByName","loadedLibsByHandle","wasmTableMirror","getWasmTableEntry","funcPtr","func","dynCall","sig","args","apply","createInvokeFunction","sp","stackSave","arguments","Array","prototype","call","stackRestore","_setThrew","___heap_base","zeroMemory","address","size","fill","getMemory","_malloc","isInternalSym","uleb128Encode","n","target","sigToWasmTypes","typeNames","j","f","d","p","type","parameters","results","generateFuncType","sigRet","sigParam","typeCodes","convertJsFunctionToWasm","Function","typeSectionBody","bytes","Instance","updateTableMap","functionsInTableMap","item","set","freeTableIndexes","getEmptyTableSlot","pop","grow","RangeError","setWasmTableEntry","addFunction","WeakMap","TypeError","updateGOT","memoryBase","relocated","resolveGlobalSymbol","direct","stub","split","alignMemory","alignment","loadWebAssemblyModule","flags","handle","loadModule","needsAllocation","memAlign","pow","max","tableBase","tableGrowthNeeded","moduleExports","resolveSymbol","resolved","proxyHandler","stubs","prop","proxy","postInstantiation","addEmAsm","addr","body","arity","start","eval","allowUndefined","reportUndefinedSymbols","stop","jsString","applyRelocs","init","loadAsync","reduce","chain","dynNeeded","loadDynamicLibrary","forEach","lib","global","nodelete","dso","Infinity","refcount","loadLibData","libFile","findObject","libData","encoding","getLibModule","preloadedWasm","libModule","moduleLoaded","preloadDylibs","___assert_fail","line","___memory_base","___stack_pointer","___table_base","_abort","readEmAsmArgsArray","readEmAsmArgs","sigPtr","runEmAsmFunction","code","argbuf","_emscripten_asm_const_int","_emscripten_memcpy_big","dest","num","copyWithin","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","min","_proc_exit","exitJS","implicit","handleException","allocateUTF8OnStack","stackAlloc","decodeBase64","atob","input","chr2","chr3","enc1","enc2","enc3","enc4","keyStr","output","charAt","intArrayFromBase64","s","Buffer","from","decoded","_","__assert_fail","__heap_base","__indirect_function_table","__memory_base","__stack_pointer","__table_base","emscripten_asm_const_int","emscripten_memcpy_big","emscripten_resize_heap","memory","calledRun","callMain","entryFunction","argc","argv","argv_ptr","arg","runCaller","run","dylibsLoaded","doRun","shouldRunNow","setTimeout","ready","newKeyPair","async","dcryptoModule","ptr1","publicKey","ptr2","secretKey","_new_keypair","keyPair","_free","keyPairFromSeed","seed","ptr3","seedBytes","_keypair_from_seed","keyPairFromSecretKey","sk","_keypair_from_secret_key","sign","dataArray","signature","_sign_data","verify","key","_verify_data","encrypt$1","additionalData","additionalLen","pub","additional","ptr4","encrypted","_forward_secretbox_encrypt_data","enc","decrypt$1","encryptedArray","sec","decrypted","_forward_secretbox_decrypt_data","decr","asymmetric","encrypt","decrypt","memory$3","k","_encrypt_data","_decrypt_data","symmetric","wordlist","needleInHaystack$1","arrayLen","itemsArrayLen","randomBytes$1","randomNumberInRange$1","log2","memory$2","needleInHaystack","randomBytes","randomNumberInRange","_random_bytes","sha512Memory","argon2Memory","mnemonicLen","hashMemory","sha512","arr","hash","_sha512","h","generateMnemonic","strength","entropy","CS","padStart","match","map","index","parseInt","normalize$1","mnemonicToEntropy","mnemonic","words","bits","word","dividerIndex","floor","entropyBits","checksumBits","bin","validateMnemonic","argon2","salt","mnemonicNormalized","mnemonicBuffer","TextEncoder","encode","mnemonicInt8Array","mnemonicArrayLen","mnmnc","saltArray","_argon2","keyPairFromMnemonic","password","defaultSalt","encodeInto","pwdBuffer","pwdHash","keypair","getMerkleRootMemory","leavesLen","memoryPages","getMerkleProofMemory","verifyMerkleProofMemory","proofLen","memory$1","isUint8Array","getMerkleRoot","tree","serializer","treeLen","leafIsUint8Array","leafSerialized","leavesHashed","serialized","leaf","rootWasm","_get_merkle_root","root","getMerkleProof","leavesAreUint8Arrays","elementIsUint8Array","elementHash","elementSerialized","proof","_get_merkle_proof","proofArray","getMerkleRootFromProof","rootArray","_get_merkle_root_from_proof","verifyMerkleProof","_verify_merkle_proof","merkle","LOG_AND_EXP","splitSecretMemory","secretLen","sharesLen","threshold","restoreSecretMemory","splitSecret","secret","secretArray","sharesArray","_split_secret","values","restoreSecret","shares","shareItemLen","every","v","_restore_secret","shamir","needles","haystack","needlesAreUint8Arrays","haystackIsUint8Arrays","arrayItemSerialized","hashWasmMemory","dcryptoHashModule","arraySerialized","itms","itemSerialized","itemHash","indxs","HEAP32","_items_indexes_in_array","indexes","_random_number_in_range","arrayRandomShuffle","shuffled","temp","arrayRandomSubset","elements","utils","dcrypto","encryptForwardSecrecy","decryptForwardSecrecy","encryptSymmetricKey","decryptSymmetricKey","getSymmetricSecretBoxEncryptedLen","getSymmetricSecretBoxDecryptedLen","loadWasmModule","loadWasmMemory","encryptForwardSecret","decryptForwardSecret","constants","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","isArray","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","constructor","createOutputMethod","padding","outputType","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","create","algorithms","w","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","right","o","encodeString","strs","zeros","finalize","hex","arrayBuffer","digest","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","getAddress","sha3","keccak_256","substring","privateKey","getATestStaticKeypair","generateKey","Symbol","iterator","contains","string","_Symbol$iterator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","DB3ObjectStore","transaction","keyPath","indexNames","autoIncrement","DStringList","IDBRequest","clear","query","createIndex","options","IDBIndex","delete","deleteIndex","getAll","getAllKeys","getKey","openCursor","direction","openKeyCursor","put","DB3Transaction","mode","durability","db","error","objectStoreNames","DB3Database","onabort","oncomplete","commit","objectStore","addEventListener","listener","removeEventListener","dispatchEvent","event","version","close","storeNames","onclose","onversionchange","createObjectStore","deleteObjectStore","DB3OpenDBRequest","EventTarget","super","readyState","source","onblocked","onupgradeneeded","onsuccess","typeofJsonValue","t","isJsonObject","encTable","decTable","base64decode","base64Str","es","b","bytePos","groupPos","base64encode","base64","UnknownFieldHandler","WireType","mergeBinaryOptions","a","varint64read","lowBits","highBits","pos","assertBounds","middleByte","varint64write","lo","hi","hasNext","splitBits","hasMoreBits","symbol","for","onRead","typeName","fieldNo","wireType","is","no","onWrite","writer","list","tag","raw","all","filter","uf","last","TWO_PWR_32_DBL","int64fromString","dec","minus","base","add1e6digit","begin","digit1e6","Number","int64toString","bitsLow","bitsHigh","mid","high","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","varint32write","varint32read","readBytes","detectBi","dv","globalThis","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","C","V","BI","assertBi","bi","RE_DECIMAL_STR","SharedPbLong","isZero","toNumber","isSafeInteger","PbULong","static","ZERO","trim","test","toBigInt","PbLong","pbl","negate","isNegative","defaultsRead","readUnknownField","readerFactory","BinaryReader","binaryReadOptions","textDecoder","varint64","uint32","view","fatal","ignoreBOM","skip","Varint","Bit64","Bit32","LengthDelimited","StartGroup","EndGroup","int32","sint32","zze","int64","uint64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","float","getFloat32","double","getFloat64","assert","msg","assertNever","FLOAT32_MAX","FLOAT32_MIN","UINT32_MAX","INT32_MAX","INT32_MIN","assertInt32","isInteger","assertUInt32","assertFloat32","isFinite","defaultsWrite","writeUnknownFields","writerFactory","BinaryWriter","binaryWriteOptions","textEncoder","stack","chunks","finish","fork","chunk","setFloat32","setFloat64","long","emitDefaultValues","enumAsInteger","useProtoFieldName","prettySpaces","ignoreUnknownFields","jsonReadOptions","jsonWriteOptions","mergeJsonOptions","_a","_b","typeRegistry","MESSAGE_TYPE","lowerCamelCase","snakeCase","capNext","sb","toUpperCase","toLowerCase","ScalarType","LongType","RepeatType","normalizeFieldInfo","field","_c","_d","localName","jsonName","repeat","NO","opt","oneof","kind","isOneofGroup","any","oneofKind","keys","ReflectionTypeCheck","fields","prepare","req","known","oneofs","depth","allowExcessProperties","some","group","find","repeated","scalars","T","L","scalar","INT32","messages","mapKeys","K","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","isNaN","BOOL","STRING","BYTES","DOUBLE","FLOAT","FIXED32","SFIXED32","SINT32","UINT32","reflectionLongConvert","ReflectionJsonReader","fMap","fieldsInput","fieldName","jsonValue","read","oneofsHandled","jsonKey","entries","fieldObj","jsonObjKey","jsonObjValue","val","internalJsonRead","enum","fieldArr","jsonItem","json","localEnumName","enumNumber","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","encodeURIComponent","ReflectionJsonWriter","write","jsonObj","entryKey","entryValue","messageType","enumInfo","jsonArr","optional","internalJsonWrite","ed","ulong","reflectionScalarDefault","ReflectionBinaryReader","fieldNoToField","Map","reader","internalBinaryRead","mapKey","mapVal","mapEntry","keyRaw","ReflectionBinaryWriter","sort","emitDefault","PACKED","packed","keyValue","handler","internalBinaryWrite","isDefault","scalarInfo","m","reflectionCreate","defineProperty","enumerable","reflectionMergePartial","fieldValue","mergePartial","reflectionEquals","val_a","val_b","repeatedPrimitiveEq","primitiveEq","repeatedMsgEq","objectValues","equals","ba","bb","MessageType","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","clone","copy","fromBinary","fromJson","fromJsonString","JSON","parse","toJson","toJsonString","stringify","toBinary","UnitType","ChainRole","ChainId","Units$Type","Units","Erc20Token$Type","Erc20Token","Price","Price$Type","BroadcastMeta$Type","BroadcastMeta","QueryPrice","Database$Type","Database","MutationAction","PayloadType","DatabaseRequest$Type","DatabaseRequest","KVPair$Type","KVPair","Mutation","WriteRequest$Type","WriteRequest","SessionStatus","QuerySessionInfo$Type","QuerySessionInfo","CloseSessionPayload$Type","CloseSessionPayload","OpenSessionPayload","QuerySession$Type","normalizeMethodInfo","service","serverStreaming","clientStreaming","idempotency","ServiceType","RpcError","meta","setPrototypeOf","serviceName","mergeRpcOptions","defaults","jsonOptions","binaryOptions","interceptors","into","Date","getTime","DeferredState","Deferred","preventUnhandledRejectionWarning","_state","PENDING","_promise","_resolve","_reject","state","promise","RESOLVED","REJECTED","resolvePending","rejectPending","RpcOutputStreamController","_lis","nxt","cmp","_closed","onNext","addLis","onMessage","onError","onComplete","splice","clearLis","closed","notifyNext","complete","notifyMessage","notifyError","notifyComplete","pushIt","done","asyncIterator","_itState","q","first","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","UnaryCall","requestHeaders","request","headers","trailers","onfulfilled","onrejected","promiseFinished","GrpcStatusCode","ServerStreamingCall","responses","stackIntercept","transport","tail","mtd","inp","unary","curr","interceptUnary","reverse","interceptServerStreaming","interceptClientStreaming","duplex","interceptDuplex","GrpcWebFrame","createGrpcWebRequestHeader","format","timeout","userAgent","append","DEADLINE_EXCEEDED","deadline","now","createGrpcWebRequestBody","DATA","msgLen","readGrpcWebResponseHeader","headersOrFetchResponse","httpStatus","httpStatusText","fetchResponse","UNKNOWN","fetchHeadersToHttp","statusText","httpOk","responseMeta","parseMetadata","statusCode","statusDetail","parseStatus","OK","httpStatusToGrpc","readGrpcWebResponseTrailer","parseTrailer","detail","readGrpcWebResponseBody","stream","contentType","onFrame","streamReader","base64queue","byteQueue","parseFormat","isReadableStream","whatWgReadableStream","getReader","safeLen","concatBytes","TRAILER","DATA_LOSS","INTERNAL","trailerData","fetchHeaders","INVALID_ARGUMENT","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","ABORTED","FAILED_PRECONDITION","RESOURCE_EXHAUSTED","CANCELLED","UNIMPLEMENTED","UNAVAILABLE","GrpcWebFetchTransport","defaultOptions","mergeOptions","makeUrl","baseUrl","endsWith","maybeStatus","maybeTrailer","fetchInit","inputBytes","I","defHeader","responseStream","responseEmptyBody","defStatus","defTrailer","Headers","signal","O","maybeMessage","defMessage","Account","Account$Type","BillType","Bill$Type","Bill","BillQueryRequest$Type","QueryBillKey","QueryBillRequest","QueryBillRequest$Type","QueryBillResponse$Type","Range","Range$Type","RangeKey$Type","RangeKey","BatchGetKey$Type","SessionIdentifier$Type","BatchGetKey","GetKeyRequest","GetKeyRequest$Type","GetKeyResponse$Type","BatchGetValue","GetKeyResponse","GetRangeRequest$Type","GetRangeRequest","GetRangeResponse$Type","RangeValue","GetRangeResponse","GetAccountRequest$Type","SessionIdentifier","GetSessionInfoRequest","GetSessionInfoRequest$Type","OpenSessionRequest$Type","OpenSessionRequest","OpenSessionResponse$Type","CloseSessionRequest","CloseSessionRequest$Type","CloseSessionResponse$Type","CloseSessionResponse","GetSessionInfoResponse","GetSessionInfoResponse$Type","BroadcastRequest$Type","BroadcastRequest","BroadcastResponse$Type","BroadcastResponse","ShowDatabaseRequest$Type","ShowDatabaseRequest","ShowDatabaseResponse$Type","StorageNode","QueryBillResponse","OpenSessionResponse","GetAccountRequest","ShowDatabaseResponse","_transport","queryBill","getRange","openQuerySession","closeQuerySession","getAccount","getSessionInfo","broadcast","showDatabase","encodeUint8Array","text","uint8ToBase64","btoa","DB3","client","sessionToken","querySessionInfo","StorageNodeClient","db3Js","_sing","nonce","createSimpleDb","desc","_this","price","amount","unit","erc20Token","token","symbal","units","queryCount","ts","description","createDb","dbProto","_this2","database","mbuffer","public_key","broadcastRequest","payload","payloadType","DatabasePayload","getDatabases","_this3","keepSession","names","submitRawMutation","ns","kv_pairs","_this4","kvPairs","chainId","MainNet","chainRole","StorageShardChain","gas_price","gas","mutation","MutationPayload","submitMutaition","_this5","kvPairsList","kvPair","action","InsertKv","_this6","_temp4","_temp2","_temp","_temp3","_this7","header","random","startTime","payloadU8","batchGetRequest","_this9","keyList","batchGetKey","batchGet","_this10","sessionInfo","startKey","endKey","_this11","range","rangeKeys","deleteKey","_this12","kv_pair","DeleteKv","DB3Factory","db3","databaseMap","Event","databases","dbList","deleteDatabase","second"],"mappings":"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AS,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,SAAS,OAAO,OAAO,QAAQ,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,QAAQ,SAAS,SAAS,SAAS,OAAO,SAAS,SAAS,MAAM,MAAM,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,WAAW,SAAS,SAAS,QAAQ,UAAU,QAAQ,QAAQ,SAAS,QAAQ,SAAS,UAAU,QAAQ,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,QAAQ,MAAM,WAAW,OAAO,SAAS,QAAQ,OAAO,UAAU,QAAQ,QAAQ,SAAS,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,MAAM,QAAQ,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS,UAAU,UAAU,UAAU,MAAM,SAAS,OAAO,QAAQ,SAAS,QAAQ,OAAO,OAAO,OAAO,SAAS,SAAS,SAAS,MAAM,UAAU,QAAQ,WAAW,SAAS,SAAS,QAAQ,UAAU,OAAO,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,QAAQ,QAAQ,WAAW,SAAS,QAAQ,UAAU,SAAS,QAAQ,OAAO,QAAQ,QAAQ,SAAS,OAAO,SAAS,QAAQ,UAAU,QAAQ,QAAQ,UAAU,SAAS,SAAS,UAAU,UAAU,QAAQ,QAAQ,QAAQ,WAAW,SAAS,UAAU,OAAO,QAAQ,QAAQ,OAAO,UAAU,OAAO,OAAO,QAAQ,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,SAAS,OAAO,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,UAAU,SAAS,QAAQ,QAAQ,UAAU,OAAO,SAAS,OAAO,OAAO,UAAU,QAAQ,SAAS,UAAU,OAAO,UAAU,QAAQ,SAAS,UAAU,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,OAAO,OAAO,SAAS,OAAO,QAAQ,OAAO,OAAO,UAAU,OAAO,SAAS,QAAQ,UAAU,SAAS,SAAS,SAAS,QAAQ,SAAS,QAAQ,SAAS,QAAQ,OAAO,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,OAAO,UAAU,QAAQ,QAAQ,SAAS,OAAO,QAAQ,SAAS,QAAQ,UAAU,QAAQ,SAAS,UAAU,SAAS,QAAQ,MAAM,UAAU,OAAO,UAAU,MAAM,WAAW,UAAU,UAAU,UAAU,QAAQ,UAAU,SAAS,OAAO,QAAQ,MAAM,SAAS,OAAO,QAAQ,SAAS,SAAS,OAAO,WAAW,OAAO,MAAM,OAAO,SAAS,SAAS,SAAS,WAAW,SAAS,UAAU,WAAW,WAAW,OAAO,UAAU,SAAS,OAAO,SAAS,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,OAAO,SAAS,SAAS,UAAU,QAAQ,SAAS,SAAS,WAAW,SAAS,SAAS,OAAO,UAAU,UAAU,SAAS,SAAS,UAAU,SAAS,SAAS,UAAU,OAAO,UAAU,QAAQ,OAAO,SAAS,OAAO,SAAS,UAAU,UAAU,UAAU,SAAS,WAAW,SAAS,OAAO,WAAW,WAAW,UAAU,OAAO,UAAU,WAAW,UAAU,WAAW,SAAS,SAAS,UAAU,QAAQ,SAAS,WAAW,MAAM,OAAO,UAAU,SAAS,SAAS,SAAS,QAAQ,OAAO,OAAO,SAAS,OAAO,QAAQ,SAAS,QAAQ,UAAU,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,SAAS,OAAO,OAAO,OAAO,UAAU,UAAU,OAAO,OAAO,UAAU,SAAS,MAAM,QAAQ,SAAS,QAAQ,QAAQ,WAAW,UAAU,UAAU,WAAW,WAAW,QAAQ,OAAO,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,SAAS,QAAQ,MAAM,UAAU,UAAU,QAAQ,SAAS,UAAU,SAAS,SAAS,UAAU,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,QAAQ,WAAW,UAAU,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,WAAW,OAAO,QAAQ,SAAS,QAAQ,UAAU,SAAS,WAAW,SAAS,UAAU,SAAS,UAAU,WAAW,UAAU,UAAU,QAAQ,QAAQ,OAAO,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,QAAQ,MAAM,UAAU,SAAS,OAAO,UAAU,OAAO,QAAQ,QAAQ,OAAO,QAAQ,OAAO,SAAS,SAAS,MAAM,QAAQ,UAAU,OAAO,UAAU,MAAM,QAAQ,SAAS,UAAU,QAAQ,WAAW,UAAU,WAAW,UAAU,MAAM,OAAO,OAAO,SAAS,QAAQ,WAAW,QAAQ,QAAQ,MAAM,QAAQ,UAAU,QAAQ,SAAS,OAAO,OAAO,SAAS,QAAQ,OAAO,OAAO,SAAS,SAAS,OAAO,OAAO,QAAQ,SAAS,OAAO,MAAM,UAAU,MAAM,OAAO,QAAQ,QAAQ,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,MAAM,OAAO,QAAQ,MAAM,OAAO,OAAO,SAAS,OAAO,OAAO,QAAQ,SAAS,SAAS,OAAO,UAAU,QAAQ,UAAU,SAAS,SAAS,QAAQ,MAAM,UAAU,QAAQ,WAAW,QAAQ,SAAS,SAAS,OAAO,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,OAAO,MAAM,QAAQ,UAAU,OAAO,SAAS,SAAS,OAAO,SAAS,UAAU,OAAO,MAAM,SAAS,UAAU,SAAS,SAAS,UAAU,MAAM,OAAO,OAAO,SAAS,QAAQ,OAAO,UAAU,SAAS,QAAQ,SAAS,UAAU,UAAU,QAAQ,QAAQ,OAAO,SAAS,SAAS,UAAU,OAAO,OAAO,OAAO,SAAS,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,OAAO,OAAO,UAAU,OAAO,OAAO,QAAQ,UAAU,SAAS,SAAS,SAAS,OAAO,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,OAAO,QAAQ,OAAO,UAAU,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,MAAM,MAAM,QAAQ,OAAO,OAAO,SAAS,UAAU,OAAO,QAAQ,SAAS,OAAO,QAAQ,UAAU,MAAM,OAAO,OAAO,SAAS,OAAO,SAAS,QAAQ,QAAQ,WAAW,SAAS,QAAQ,SAAS,OAAO,MAAM,OAAO,SAAS,OAAO,OAAO,OAAO,MAAM,OAAO,UAAU,QAAQ,SAAS,OAAO,OAAO,UAAU,SAAS,OAAO,QAAQ,OAAO,OAAO,OAAO,SAAS,QAAQ,WAAW,OAAO,QAAQ,OAAO,QAAQ,MAAM,OAAO,QAAQ,SAAS,QAAQ,UAAU,SAAS,OAAO,SAAS,QAAQ,OAAO,UAAU,SAAS,MAAM,OAAO,OAAO,WAAW,OAAO,SAAS,MAAM,UAAU,UAAU,QAAQ,UAAU,UAAU,SAAS,SAAS,SAAS,UAAU,UAAU,OAAO,UAAU,SAAS,WAAW,QAAQ,WAAW,SAAS,WAAW,SAAS,UAAU,SAAS,SAAS,UAAU,UAAU,SAAS,SAAS,SAAS,QAAQ,WAAW,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,UAAU,SAAS,WAAW,OAAO,SAAS,SAAS,UAAU,OAAO,SAAS,UAAU,QAAQ,OAAO,QAAQ,SAAS,SAAS,MAAM,OAAO,UAAU,QAAQ,QAAQ,QAAQ,MAAM,OAAO,OAAO,UAAU,MAAM,QAAQ,QAAQ,OAAO,SAAS,SAAS,OAAO,OAAO,WAAW,OAAO,OAAO,UAAU,MAAM,OAAO,MAAM,SAAS,OAAO,UAAU,OAAO,MAAM,UAAU,OAAO,SAAS,OAAO,OAAO,QAAQ,QAAQ,OAAO,MAAM,QAAQ,QAAQ,SAAS,OAAO,OAAO,OAAO,WAAW,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,OAAO,MAAM,OAAO,UAAU,QAAQ,OAAO,SAAS,OAAO,QAAQ,QAAQ,UAAU,OAAO,MAAM,QAAQ,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,UAAU,SAAS,SAAS,QAAQ,OAAO,UAAU,UAAU,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,OAAO,UAAU,QAAQ,OAAO,QAAQ,SAAS,OAAO,OAAO,UAAU,OAAO,SAAS,OAAO,QAAQ,QAAQ,UAAU,SAAS,QAAQ,QAAQ,SAAS,SAAS,UAAU,MAAM,QAAQ,SAAS,OAAO,OAAO,OAAO,QAAQ,OAAO,SAAS,MAAM,SAAS,UAAU,QAAQ,UAAU,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,WAAW,OAAO,OAAO,SAAS,QAAQ,WAAW,OAAO,SAAS,SAAS,UAAU,OAAO,SAAS,OAAO,UAAU,OAAO,WAAW,QAAQ,QAAQ,SAAS,OAAO,SAAS,SAAS,UAAU,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,UAAU,QAAQ,SAAS,SAAS,WAAW,OAAO,UAAU,QAAQ,OAAO,UAAU,QAAQ,SAAS,UAAU,SAAS,SAAS,OAAO,UAAU,MAAM,QAAQ,UAAU,SAAS,QAAQ,SAAS,MAAM,SAAS,UAAU,SAAS,UAAU,QAAQ,OAAO,QAAQ,OAAO,UAAU,WAAW,SAAS,SAAS,QAAQ,WAAW,QAAQ,OAAO,QAAQ,OAAO,SAAS,OAAO,WAAW,SAAS,SAAS,WAAW,QAAQ,OAAO,SAAS,SAAS,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,QAAQ,SAAS,SAAS,OAAO,OAAO,OAAO,WAAW,UAAU,UAAU,SAAS,QAAQ,OAAO,MAAM,UAAU,UAAU,QAAQ,OAAO,OAAO,OAAO,QAAQ,QAAQ,QAAQ,UAAU,SAAS,SAAS,QAAQ,OAAO,UAAU,OAAO,UAAU,SAAS,QAAQ,MAAM,UAAU,SAAS,QAAQ,MAAM,MAAM,OAAO,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,QAAQ,QAAQ,UAAU,OAAO,MAAM,QAAQ,SAAS,QAAQ,MAAM,OAAO,MAAM,QAAQ,UAAU,OAAO,OAAO,MAAM,QAAQ,SAAS,OAAO,OAAO,QAAQ,UAAU,SAAS,SAAS,SAAS,QAAQ,UAAU,QAAQ,WAAW,QAAQ,SAAS,WAAW,SAAS,UAAU,QAAQ,UAAU,QAAQ,SAAS,UAAU,OAAO,OAAO,OAAO,MAAM,QAAQ,SAAS,SAAS,QAAQ,OAAO,SAAS,OAAO,OAAO,SAAS,OAAO,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,SAAS,SAAS,OAAO,SAAS,QAAQ,OAAO,QAAQ,OAAO,UAAU,SAAS,UAAU,QAAQ,OAAO,UAAU,QAAQ,SAAS,OAAO,UAAU,UAAU,MAAM,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,SAAS,MAAM,QAAQ,QAAQ,SAAS,WAAW,QAAQ,SAAS,UAAU,QAAQ,MAAM,SAAS,OAAO,QAAQ,OAAO,UAAU,OAAO,SAAS,QAAQ,QAAQ,QAAQ,SAAS,UAAU,QAAQ,OAAO,SAAS,SAAS,QAAQ,OAAO,SAAS,OAAO,OAAO,QAAQ,QAAQ,OAAO,SAAS,OAAO,OAAO,OAAO,UAAU,UAAU,WAAW,WAAW,OAAO,SAAS,UAAU,UAAU,SAAS,QAAQ,WAAW,SAAS,UAAU,SAAS,UAAU,UAAU,SAAS,UAAU,QAAQ,QAAQ,UAAU,QAAQ,WAAW,SAAS,UAAU,QAAQ,UAAU,UAAU,UAAU,SAAS,UAAU,UAAU,UAAU,QAAQ,WAAW,UAAU,UAAU,QAAQ,UAAU,SAAS,UAAU,OAAO,OAAO,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,WAAW,SAAS,UAAU,QAAQ,OAAO,MAAM,SAAS,UAAU,UAAU,UAAU,UAAU,WAAW,QAAQ,OAAO,OAAO,QAAQ,SAAS,UAAU,OAAO,OAAO,QAAQ,QAAQ,OAAO,OAAO,QAAQ,QAAQ,OAAO,QAAQ,SAAS,QAAQ,QAAQ,OAAO,OAAO,SAAS,QAAQ,MAAM,QAAQ,QAAQ,OAAO,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,QAAQ,UAAU,SAAS,OAAO,SAAS,WAAW,SAAS,SAAS,SAAS,QAAQ,OAAO,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,WAAW,SAAS,WAAW,WAAW,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,MAAM,SAAS,OAAO,OAAO,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,OAAO,SAAS,OAAO,SAAS,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,SAAS,SAAS,UAAU,OAAO,SAAS,OAAO,OAAO,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,OAAO,MAAM,OAAO,MAAM,SAAS,QAAQ,MAAM,SAAS,UAAU,OAAO,OAAO,QAAQ,SAAS,QAAQ,OAAO,SAAS,OAAO,SAAS,OAAO,UAAU,UAAU,QAAQ,UAAU,OAAO,MAAM,QAAQ,OAAO,QAAQ,UAAU,QAAQ,SAAS,SAAS,UAAU,WAAW,WAAW,QAAQ,QAAQ,SAAS,SAAS,QAAQ,MAAM,SAAS,SAAS,OAAO,SAAS,SAAS,UAAU,WAAW,OAAO,OAAO,UAAU,SAAS,OAAO,UAAU,SAAS,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,QAAQ,QAAQ,SAAS,QAAQ,UAAU,QAAQ,OAAO,QAAQ,UAAU,SAAS,QAAQ,QAAQ,OAAO,SAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,WAAW,QAAQ,SAAS,QAAQ,UAAU,MAAM,UAAU,OAAO,OAAO,QAAQ,QAAQ,OAAO,SAAS,OAAO,QAAQ,SAAS,UAAU,SAAS,QAAQ,OAAO,QAAQ,SAAS,UAAU,MAAM,OAAO,QAAQ,SAAS,MAAM,QAAQ,OAAO,QAAQ,QAAQ,OAAO,OAAO,QAAQ,UAAU,QAAQ,QAAQ,SAAS,OAAO,SAAS,OAAO,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,OAAO,QAAQ,OAAO,OAAO,SAAS,SAAS,OAAO,OAAO,OAAO,QAAQ,UAAU,QAAQ,WAAW,QAAQ,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,SAAS,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS,QAAQ,OAAO,SAAS,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,OAAO,QAAQ,SAAS,SAAS,MAAM,SAAS,UAAU,WAAW,SAAS,UAAU,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,OAAO,OAAO,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,WAAW,SAAS,SAAS,SAAS,WAAW,UAAU,QAAQ,UAAU,QAAQ,UAAU,SAAS,SAAS,UAAU,OAAO,SAAS,SAAS,QAAQ,UAAU,OAAO,SAAS,MAAM,QAAQ,SAAS,QAAQ,SAAS,UAAU,OAAO,UAAU,QAAQ,WAAW,WAAW,SAAS,UAAU,UAAU,UAAU,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,SAAS,QAAQ,SAAS,UAAU,QAAQ,SAAS,QAAQ,SAAS,MAAM,OAAO,SAAS,OAAO,OAAO,OAAO,SAAS,OAAO,QAAQ,SAAS,OAAO,QAAQ,OAAO,OAAO,MAAM,SAAS,SAAS,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,QAAQ,OAAO,SAAS,QAAQ,OAAO,QAAQ,OAAO,UAAU,QAAQ,SAAS,QAAQ,QAAQ,UAAU,SAAS,OAAO,QAAQ,OAAO,SAAS,OAAO,OAAO,MAAM,QAAQ,SAAS,QAAQ,QAAQ,UAAU,QAAQ,UAAU,MAAM,WAAW,SAAS,QAAQ,SAAS,WAAW,OAAO,SAAS,UAAU,OAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ,UAAU,WAAW,OAAO,QAAQ,UAAU,SAAS,QAAQ,OAAO,MAAM,QAAQ,QAAQ,UAAU,SAAS,QAAQ,WAAW,OAAO,QAAQ,SAAS,OAAO,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,OAAO,OA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"}